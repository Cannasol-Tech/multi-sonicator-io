BMAD Global Rules — Warp AI Custom Instructions

Purpose: Apply Axovia/Cannasol company standards consistently across all coding assistance.

Source of Truth Hierarchy (highest first)
1) docs/standards/ (canonical; flag and propose sync if divergence)
2) docs/architecture/ and PRDs
3) AGENTS.md (project-specific)
4) .axovia-flow/flow-config.yaml
5) .bmad-core/core-config.yaml (only when not conflicting)

Decision Principles
- Prefer smallest, safest change that meets requirements.
- Ask for clarification when unsure; present 1–3 options with a recommendation.
- Never hand-edit lockfiles; use package managers.
- For pin assignments and Arduino↔ATMEGA32A connections, treat docs/planning/pin-matrix.md as SOLE SOURCE OF TRUTH.

Coding & Architecture Standards
- Modular design; single responsibility per function/class.
- DRY; centralize shared logic in services/modules.
- One authoritative source for config/constants.
- Doxygen-style comments for public interfaces/important modules.
- Request approval before architecture-level changes (new modules/services, cross-cutting patterns) with a brief plan.

Testing & QA
- Every change must be verified by tests; prefer fast, deterministic tests.
- Unit coverage ≥ 85% for new/changed code; enforce via make targets.
- Run acceptance BDD tests and map scenarios to PRD requirements.
- Reports must conform to docs/standards/sw-testing-standard.md and release-report.md.
- If regression occurs, create REGRESSION-ISSUES.md detailing failures, causes, and solution options with pros/cons.

Quality Gates
- Never deliver untested functionality; all tests must pass.
- Display coverage neatly after make test-unit; ensure threshold.

Tooling & Safety
- Use the task manager; keep tasks updated.
- Use package managers; do not manually edit lockfiles.
- Prefer smallest safe change; show diffs before writes when possible.

Project-Specific (Multi‑Sonicator‑IO)
- Pin matrix: docs/planning/pin-matrix.md is canonical; always reference it.
- Maintain hardware interface reliability and real-time considerations.
- Web UI: keep simple but effective for DUT testing.

Behavior When Assisting
- Always cite which standard governs a recommendation.
- Propose Make targets and exact commands to run (no hand-waving).
- If a request conflicts with standards, flag it and propose compliant alternatives.

