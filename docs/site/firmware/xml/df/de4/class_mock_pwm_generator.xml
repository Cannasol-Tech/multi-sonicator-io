<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="df/de4/class_mock_pwm_generator" kind="class" language="C++" prot="public">
    <compoundname>MockPwmGenerator</compoundname>
    <basecompoundref refid="d3/d56/class_i_pwm_generator" prot="public" virt="non-virtual">IPwmGenerator</basecompoundref>
    <includes refid="d6/d83/hal__mock__factory_8h" local="no">hal_mock_factory.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="df/de4/class_mock_pwm_generator_1aaa4739d43de1a4bd3d48bb86e9ddfc0c" prot="private" static="no" mutable="no">
        <type>std::map&lt; uint8_t, uint32_t &gt;</type>
        <definition>std::map&lt;uint8_t, uint32_t&gt; MockPwmGenerator::channel_frequencies</definition>
        <argsstring></argsstring>
        <name>channel_frequencies</name>
        <qualifiedname>MockPwmGenerator::channel_frequencies</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_mock_factory.h" line="245" column="14" bodyfile="src/modules/hal/hal_mock_factory.h" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="df/de4/class_mock_pwm_generator_1ab8a7796c69a3fd118b44cbf7b96f50d1" prot="private" static="no" mutable="no">
        <type>std::map&lt; uint8_t, uint8_t &gt;</type>
        <definition>std::map&lt;uint8_t, uint8_t&gt; MockPwmGenerator::channel_duty_cycles</definition>
        <argsstring></argsstring>
        <name>channel_duty_cycles</name>
        <qualifiedname>MockPwmGenerator::channel_duty_cycles</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_mock_factory.h" line="246" column="14" bodyfile="src/modules/hal/hal_mock_factory.h" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="df/de4/class_mock_pwm_generator_1a946687d756b1c937a230512ee5e32879" prot="private" static="no" mutable="no">
        <type>std::map&lt; uint8_t, bool &gt;</type>
        <definition>std::map&lt;uint8_t, bool&gt; MockPwmGenerator::channel_enabled</definition>
        <argsstring></argsstring>
        <name>channel_enabled</name>
        <qualifiedname>MockPwmGenerator::channel_enabled</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_mock_factory.h" line="247" column="14" bodyfile="src/modules/hal/hal_mock_factory.h" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="df/de4/class_mock_pwm_generator_1a541b9f868cd050786450a3ebb52a64bd" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool MockPwmGenerator::initialized</definition>
        <argsstring></argsstring>
        <name>initialized</name>
        <qualifiedname>MockPwmGenerator::initialized</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_mock_factory.h" line="248" column="10" bodyfile="src/modules/hal/hal_mock_factory.h" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="df/de4/class_mock_pwm_generator_1aa804dae7841b759d3b4bd8a4d1b9e5ad" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool MockPwmGenerator::emergency_stopped</definition>
        <argsstring></argsstring>
        <name>emergency_stopped</name>
        <qualifiedname>MockPwmGenerator::emergency_stopped</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_mock_factory.h" line="249" column="10" bodyfile="src/modules/hal/hal_mock_factory.h" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="df/de4/class_mock_pwm_generator_1a830c3150e5eedf8d51f878902386d4e8" prot="private" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t MockPwmGenerator::amplitude_percent</definition>
        <argsstring></argsstring>
        <name>amplitude_percent</name>
        <qualifiedname>MockPwmGenerator::amplitude_percent</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_mock_factory.h" line="250" column="13" bodyfile="src/modules/hal/hal_mock_factory.h" bodystart="250" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="df/de4/class_mock_pwm_generator_1ae09a9d8cf6f46846b6fdea3d670ff023" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>MockPwmGenerator::MockPwmGenerator</definition>
        <argsstring>()</argsstring>
        <name>MockPwmGenerator</name>
        <qualifiedname>MockPwmGenerator::MockPwmGenerator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_mock_factory.h" line="253" column="5" bodyfile="src/modules/hal/hal_mock_factory.h" bodystart="253" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="df/de4/class_mock_pwm_generator_1a4ecad2716ca79e79c8a5b4315206c30c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool MockPwmGenerator::init</definition>
        <argsstring>(void) override</argsstring>
        <name>init</name>
        <qualifiedname>MockPwmGenerator::init</qualifiedname>
        <reimplements refid="d3/d56/class_i_pwm_generator_1a38acf604b647789966b99cf3e3bfb749">init</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_mock_factory.h" line="255" column="10" bodyfile="src/modules/hal/hal_mock_factory.h" bodystart="255" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="df/de4/class_mock_pwm_generator_1a033760fdadd8626d8b90a6d400b3ea53" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool MockPwmGenerator::setFrequency</definition>
        <argsstring>(uint8_t channel, uint32_t frequency) override</argsstring>
        <name>setFrequency</name>
        <qualifiedname>MockPwmGenerator::setFrequency</qualifiedname>
        <reimplements refid="d3/d56/class_i_pwm_generator_1a7805b61fe91158281e214a20f773eb85">setFrequency</reimplements>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>frequency</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_mock_factory.h" line="261" column="10" bodyfile="src/modules/hal/hal_mock_factory.h" bodystart="261" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="df/de4/class_mock_pwm_generator_1a1b07479894e8ae7777479afb8f96b89f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool MockPwmGenerator::setDutyCycle</definition>
        <argsstring>(uint8_t channel, uint8_t duty_percent) override</argsstring>
        <name>setDutyCycle</name>
        <qualifiedname>MockPwmGenerator::setDutyCycle</qualifiedname>
        <reimplements refid="d3/d56/class_i_pwm_generator_1a966b66b2213a5e55de8a3cd726f1d6ec">setDutyCycle</reimplements>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>duty_percent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_mock_factory.h" line="267" column="10" bodyfile="src/modules/hal/hal_mock_factory.h" bodystart="267" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="df/de4/class_mock_pwm_generator_1a064d09bbe8d314a0f732f80266bc2cfb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool MockPwmGenerator::enableChannel</definition>
        <argsstring>(uint8_t channel) override</argsstring>
        <name>enableChannel</name>
        <qualifiedname>MockPwmGenerator::enableChannel</qualifiedname>
        <reimplements refid="d3/d56/class_i_pwm_generator_1a3151d26a8c8a9ff2c1e9f29fc847dde3">enableChannel</reimplements>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_mock_factory.h" line="273" column="10" bodyfile="src/modules/hal/hal_mock_factory.h" bodystart="273" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="df/de4/class_mock_pwm_generator_1a0c2c39dc8e4deb8dd70179539ef38be0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool MockPwmGenerator::disableChannel</definition>
        <argsstring>(uint8_t channel) override</argsstring>
        <name>disableChannel</name>
        <qualifiedname>MockPwmGenerator::disableChannel</qualifiedname>
        <reimplements refid="d3/d56/class_i_pwm_generator_1a20812ca3553b9b7bbfa753b62e396834">disableChannel</reimplements>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_mock_factory.h" line="279" column="10" bodyfile="src/modules/hal/hal_mock_factory.h" bodystart="279" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="df/de4/class_mock_pwm_generator_1ab647c99114bcde54799ff4488f108436" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool MockPwmGenerator::setAmplitude</definition>
        <argsstring>(uint8_t amplitude_percent) override</argsstring>
        <name>setAmplitude</name>
        <qualifiedname>MockPwmGenerator::setAmplitude</qualifiedname>
        <reimplements refid="d3/d56/class_i_pwm_generator_1a94f8be474f12adaa53a75675eef9bc29">setAmplitude</reimplements>
        <param>
          <type>uint8_t</type>
          <declname>amplitude_percent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_mock_factory.h" line="285" column="10" bodyfile="src/modules/hal/hal_mock_factory.h" bodystart="285" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="df/de4/class_mock_pwm_generator_1a104300a5e8611e84d6028ef61fadd1e9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool MockPwmGenerator::emergencyStop</definition>
        <argsstring>(void) override</argsstring>
        <name>emergencyStop</name>
        <qualifiedname>MockPwmGenerator::emergencyStop</qualifiedname>
        <reimplements refid="d3/d56/class_i_pwm_generator_1a31aceffa580e9c95ba1a3e4988725d5f">emergencyStop</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_mock_factory.h" line="291" column="10" bodyfile="src/modules/hal/hal_mock_factory.h" bodystart="291" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="df/de4/class_mock_pwm_generator_1a61a19d6bce986589dd9ca5c63726063a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool MockPwmGenerator::testPattern</definition>
        <argsstring>(void) override</argsstring>
        <name>testPattern</name>
        <qualifiedname>MockPwmGenerator::testPattern</qualifiedname>
        <reimplements refid="d3/d56/class_i_pwm_generator_1a650304aab283911f751c26c34230106d">testPattern</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_mock_factory.h" line="301" column="10" bodyfile="src/modules/hal/hal_mock_factory.h" bodystart="301" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="df/de4/class_mock_pwm_generator_1a4d56f517e01c1d39d3a5e648732c1d62" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t MockPwmGenerator::getChannelFrequency</definition>
        <argsstring>(uint8_t channel)</argsstring>
        <name>getChannelFrequency</name>
        <qualifiedname>MockPwmGenerator::getChannelFrequency</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_mock_factory.h" line="308" column="14" bodyfile="src/modules/hal/hal_mock_factory.h" bodystart="308" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="df/de4/class_mock_pwm_generator_1ace7cae77a12084e975fd9d788af53f4d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t MockPwmGenerator::getChannelDutyCycle</definition>
        <argsstring>(uint8_t channel)</argsstring>
        <name>getChannelDutyCycle</name>
        <qualifiedname>MockPwmGenerator::getChannelDutyCycle</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_mock_factory.h" line="312" column="13" bodyfile="src/modules/hal/hal_mock_factory.h" bodystart="312" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="df/de4/class_mock_pwm_generator_1ab9f2b046a46216fa97f2743ee4c060fb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool MockPwmGenerator::isChannelEnabled</definition>
        <argsstring>(uint8_t channel)</argsstring>
        <name>isChannelEnabled</name>
        <qualifiedname>MockPwmGenerator::isChannelEnabled</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_mock_factory.h" line="316" column="10" bodyfile="src/modules/hal/hal_mock_factory.h" bodystart="316" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="df/de4/class_mock_pwm_generator_1a9acbdc0338640709eadabf62d304fa5c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t MockPwmGenerator::getAmplitude</definition>
        <argsstring>()</argsstring>
        <name>getAmplitude</name>
        <qualifiedname>MockPwmGenerator::getAmplitude</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_mock_factory.h" line="320" column="13" bodyfile="src/modules/hal/hal_mock_factory.h" bodystart="320" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="df/de4/class_mock_pwm_generator_1a25b0acb0aa22a4cd9ee15db7bf21bb19" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool MockPwmGenerator::isEmergencyStopped</definition>
        <argsstring>()</argsstring>
        <name>isEmergencyStopped</name>
        <qualifiedname>MockPwmGenerator::isEmergencyStopped</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_mock_factory.h" line="321" column="10" bodyfile="src/modules/hal/hal_mock_factory.h" bodystart="321" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="df/de4/class_mock_pwm_generator_1adc1d16953d0b00bd5545ae6980cd2604" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void MockPwmGenerator::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <qualifiedname>MockPwmGenerator::reset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_mock_factory.h" line="323" column="10" bodyfile="src/modules/hal/hal_mock_factory.h" bodystart="323" bodyend="330"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Mock PWM implementation for testing. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>IPwmGenerator</label>
        <link refid="d3/d56/class_i_pwm_generator"/>
      </node>
      <node id="1">
        <label>MockPwmGenerator</label>
        <link refid="df/de4/class_mock_pwm_generator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>IPwmGenerator</label>
        <link refid="d3/d56/class_i_pwm_generator"/>
      </node>
      <node id="1">
        <label>MockPwmGenerator</label>
        <link refid="df/de4/class_mock_pwm_generator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/modules/hal/hal_mock_factory.h" line="243" column="1" bodyfile="src/modules/hal/hal_mock_factory.h" bodystart="243" bodyend="331"/>
    <listofallmembers>
      <member refid="df/de4/class_mock_pwm_generator_1a830c3150e5eedf8d51f878902386d4e8" prot="private" virt="non-virtual"><scope>MockPwmGenerator</scope><name>amplitude_percent</name></member>
      <member refid="df/de4/class_mock_pwm_generator_1ab8a7796c69a3fd118b44cbf7b96f50d1" prot="private" virt="non-virtual"><scope>MockPwmGenerator</scope><name>channel_duty_cycles</name></member>
      <member refid="df/de4/class_mock_pwm_generator_1a946687d756b1c937a230512ee5e32879" prot="private" virt="non-virtual"><scope>MockPwmGenerator</scope><name>channel_enabled</name></member>
      <member refid="df/de4/class_mock_pwm_generator_1aaa4739d43de1a4bd3d48bb86e9ddfc0c" prot="private" virt="non-virtual"><scope>MockPwmGenerator</scope><name>channel_frequencies</name></member>
      <member refid="df/de4/class_mock_pwm_generator_1a0c2c39dc8e4deb8dd70179539ef38be0" prot="public" virt="virtual"><scope>MockPwmGenerator</scope><name>disableChannel</name></member>
      <member refid="df/de4/class_mock_pwm_generator_1aa804dae7841b759d3b4bd8a4d1b9e5ad" prot="private" virt="non-virtual"><scope>MockPwmGenerator</scope><name>emergency_stopped</name></member>
      <member refid="df/de4/class_mock_pwm_generator_1a104300a5e8611e84d6028ef61fadd1e9" prot="public" virt="virtual"><scope>MockPwmGenerator</scope><name>emergencyStop</name></member>
      <member refid="df/de4/class_mock_pwm_generator_1a064d09bbe8d314a0f732f80266bc2cfb" prot="public" virt="virtual"><scope>MockPwmGenerator</scope><name>enableChannel</name></member>
      <member refid="df/de4/class_mock_pwm_generator_1a9acbdc0338640709eadabf62d304fa5c" prot="public" virt="non-virtual"><scope>MockPwmGenerator</scope><name>getAmplitude</name></member>
      <member refid="df/de4/class_mock_pwm_generator_1ace7cae77a12084e975fd9d788af53f4d" prot="public" virt="non-virtual"><scope>MockPwmGenerator</scope><name>getChannelDutyCycle</name></member>
      <member refid="df/de4/class_mock_pwm_generator_1a4d56f517e01c1d39d3a5e648732c1d62" prot="public" virt="non-virtual"><scope>MockPwmGenerator</scope><name>getChannelFrequency</name></member>
      <member refid="df/de4/class_mock_pwm_generator_1a4ecad2716ca79e79c8a5b4315206c30c" prot="public" virt="virtual"><scope>MockPwmGenerator</scope><name>init</name></member>
      <member refid="df/de4/class_mock_pwm_generator_1a541b9f868cd050786450a3ebb52a64bd" prot="private" virt="non-virtual"><scope>MockPwmGenerator</scope><name>initialized</name></member>
      <member refid="df/de4/class_mock_pwm_generator_1ab9f2b046a46216fa97f2743ee4c060fb" prot="public" virt="non-virtual"><scope>MockPwmGenerator</scope><name>isChannelEnabled</name></member>
      <member refid="df/de4/class_mock_pwm_generator_1a25b0acb0aa22a4cd9ee15db7bf21bb19" prot="public" virt="non-virtual"><scope>MockPwmGenerator</scope><name>isEmergencyStopped</name></member>
      <member refid="df/de4/class_mock_pwm_generator_1ae09a9d8cf6f46846b6fdea3d670ff023" prot="public" virt="non-virtual"><scope>MockPwmGenerator</scope><name>MockPwmGenerator</name></member>
      <member refid="df/de4/class_mock_pwm_generator_1adc1d16953d0b00bd5545ae6980cd2604" prot="public" virt="non-virtual"><scope>MockPwmGenerator</scope><name>reset</name></member>
      <member refid="df/de4/class_mock_pwm_generator_1ab647c99114bcde54799ff4488f108436" prot="public" virt="virtual"><scope>MockPwmGenerator</scope><name>setAmplitude</name></member>
      <member refid="df/de4/class_mock_pwm_generator_1a1b07479894e8ae7777479afb8f96b89f" prot="public" virt="virtual"><scope>MockPwmGenerator</scope><name>setDutyCycle</name></member>
      <member refid="df/de4/class_mock_pwm_generator_1a033760fdadd8626d8b90a6d400b3ea53" prot="public" virt="virtual"><scope>MockPwmGenerator</scope><name>setFrequency</name></member>
      <member refid="df/de4/class_mock_pwm_generator_1a61a19d6bce986589dd9ca5c63726063a" prot="public" virt="virtual"><scope>MockPwmGenerator</scope><name>testPattern</name></member>
      <member refid="d3/d56/class_i_pwm_generator_1ab0271bc4a8f6a070667e267c3a564526" prot="public" virt="virtual"><scope>MockPwmGenerator</scope><name>~IPwmGenerator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
