<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="da/d2b/class_atmega_gpio" kind="class" language="C++" prot="public">
    <compoundname>AtmegaGpio</compoundname>
    <basecompoundref refid="d4/d45/class_i_gpio_port" prot="public" virt="non-virtual">IGpioPort</basecompoundref>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="da/d2b/class_atmega_gpio_1af4f9d3f2fe4ae7e431966793097c4558" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool AtmegaGpio::initialized_</definition>
        <argsstring></argsstring>
        <name>initialized_</name>
        <qualifiedname>AtmegaGpio::initialized_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/gpio.cpp" line="261" column="10" bodyfile="src/modules/hal/gpio.cpp" bodystart="261" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="da/d2b/class_atmega_gpio_1af2a15925181bb6028f1d38abd12d66f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>AtmegaGpio::AtmegaGpio</definition>
        <argsstring>()</argsstring>
        <name>AtmegaGpio</name>
        <qualifiedname>AtmegaGpio::AtmegaGpio</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/gpio.cpp" line="264" column="5" bodyfile="src/modules/hal/gpio.cpp" bodystart="264" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="da/d2b/class_atmega_gpio_1a23fb76168dfae602d1c39aac82e94b54" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual AtmegaGpio::~AtmegaGpio</definition>
        <argsstring>()=default</argsstring>
        <name>~AtmegaGpio</name>
        <qualifiedname>AtmegaGpio::~AtmegaGpio</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/gpio.cpp" line="265" column="13"/>
      </memberdef>
      <memberdef kind="function" id="da/d2b/class_atmega_gpio_1a16e0bcae1d97ee6245adebde7e23d600" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool AtmegaGpio::init</definition>
        <argsstring>(void) override</argsstring>
        <name>init</name>
        <qualifiedname>AtmegaGpio::init</qualifiedname>
        <reimplements refid="d4/d45/class_i_gpio_port_1a60c1a7430f3e5bae47f5c62130ab989a">init</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/gpio.cpp" line="268" column="10" bodyfile="src/modules/hal/gpio.cpp" bodystart="268" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="da/d2b/class_atmega_gpio_1a55d776d5c810d4ec1fa38b02903db710" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool AtmegaGpio::setPinMode</definition>
        <argsstring>(uint8_t pin, uint8_t mode) override</argsstring>
        <name>setPinMode</name>
        <qualifiedname>AtmegaGpio::setPinMode</qualifiedname>
        <reimplements refid="d4/d45/class_i_gpio_port_1ac9d71023f4ce28da95f68c4c9df4dab0">setPinMode</reimplements>
        <param>
          <type>uint8_t</type>
          <declname>pin</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/gpio.cpp" line="276" column="10" bodyfile="src/modules/hal/gpio.cpp" bodystart="276" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="da/d2b/class_atmega_gpio_1a2d86ba45e177565b041c852e7315a043" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool AtmegaGpio::digitalWrite</definition>
        <argsstring>(uint8_t pin, uint8_t value) override</argsstring>
        <name>digitalWrite</name>
        <qualifiedname>AtmegaGpio::digitalWrite</qualifiedname>
        <reimplements refid="d4/d45/class_i_gpio_port_1add58b07a6da42c6bcbd986f4507da15a">digitalWrite</reimplements>
        <param>
          <type>uint8_t</type>
          <declname>pin</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/gpio.cpp" line="287" column="10" bodyfile="src/modules/hal/gpio.cpp" bodystart="287" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="da/d2b/class_atmega_gpio_1a5f829675cc361384a99f5b8ffb74a5f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>uint8_t</type>
        <definition>uint8_t AtmegaGpio::digitalRead</definition>
        <argsstring>(uint8_t pin) override</argsstring>
        <name>digitalRead</name>
        <qualifiedname>AtmegaGpio::digitalRead</qualifiedname>
        <reimplements refid="d4/d45/class_i_gpio_port_1a1f9e986f6414805bc3ad867e251af024">digitalRead</reimplements>
        <param>
          <type>uint8_t</type>
          <declname>pin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/gpio.cpp" line="292" column="13" bodyfile="src/modules/hal/gpio.cpp" bodystart="292" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="da/d2b/class_atmega_gpio_1aaec357028ffcf87142b0f14305abcdea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool AtmegaGpio::togglePin</definition>
        <argsstring>(uint8_t pin) override</argsstring>
        <name>togglePin</name>
        <qualifiedname>AtmegaGpio::togglePin</qualifiedname>
        <reimplements refid="d4/d45/class_i_gpio_port_1a23039e24be8f75e22b60cfe17d91b1cc">togglePin</reimplements>
        <param>
          <type>uint8_t</type>
          <declname>pin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/gpio.cpp" line="300" column="10" bodyfile="src/modules/hal/gpio.cpp" bodystart="300" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="da/d2b/class_atmega_gpio_1a7ad874c13e514feb1c955cccecd34d78" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool AtmegaGpio::sonicatorStart</definition>
        <argsstring>(uint8_t sonicator_id) override</argsstring>
        <name>sonicatorStart</name>
        <qualifiedname>AtmegaGpio::sonicatorStart</qualifiedname>
        <reimplements refid="d4/d45/class_i_gpio_port_1a2d1b5a7f40485ffbce7eaf966e5068eb">sonicatorStart</reimplements>
        <param>
          <type>uint8_t</type>
          <declname>sonicator_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/gpio.cpp" line="305" column="10" bodyfile="src/modules/hal/gpio.cpp" bodystart="305" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="da/d2b/class_atmega_gpio_1a315fbbb515aa04e8dd380283171b4e04" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool AtmegaGpio::sonicatorStop</definition>
        <argsstring>(uint8_t sonicator_id) override</argsstring>
        <name>sonicatorStop</name>
        <qualifiedname>AtmegaGpio::sonicatorStop</qualifiedname>
        <reimplements refid="d4/d45/class_i_gpio_port_1a01cc2219c0d670eded2410efcc41eb73">sonicatorStop</reimplements>
        <param>
          <type>uint8_t</type>
          <declname>sonicator_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/gpio.cpp" line="309" column="10" bodyfile="src/modules/hal/gpio.cpp" bodystart="309" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="da/d2b/class_atmega_gpio_1ab62475065592fde9b6cc1cc78b21cbed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool AtmegaGpio::sonicatorReset</definition>
        <argsstring>(uint8_t sonicator_id) override</argsstring>
        <name>sonicatorReset</name>
        <qualifiedname>AtmegaGpio::sonicatorReset</qualifiedname>
        <reimplements refid="d4/d45/class_i_gpio_port_1a6b753a07382868258b938d839dddaaeb">sonicatorReset</reimplements>
        <param>
          <type>uint8_t</type>
          <declname>sonicator_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/gpio.cpp" line="313" column="10" bodyfile="src/modules/hal/gpio.cpp" bodystart="313" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="da/d2b/class_atmega_gpio_1a140b942b2478d4c878b5e1c2a3724d36" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool AtmegaGpio::sonicatorReadOverload</definition>
        <argsstring>(uint8_t sonicator_id, bool *state) override</argsstring>
        <name>sonicatorReadOverload</name>
        <qualifiedname>AtmegaGpio::sonicatorReadOverload</qualifiedname>
        <reimplements refid="d4/d45/class_i_gpio_port_1ac449ea85a3924a8aa7a7a03afe092a76">sonicatorReadOverload</reimplements>
        <param>
          <type>uint8_t</type>
          <declname>sonicator_id</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/gpio.cpp" line="317" column="10" bodyfile="src/modules/hal/gpio.cpp" bodystart="317" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="da/d2b/class_atmega_gpio_1a1037ffea170bdaf84630785a40a5f07e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool AtmegaGpio::sonicatorReadFreqLock</definition>
        <argsstring>(uint8_t sonicator_id, bool *state) override</argsstring>
        <name>sonicatorReadFreqLock</name>
        <qualifiedname>AtmegaGpio::sonicatorReadFreqLock</qualifiedname>
        <reimplements refid="d4/d45/class_i_gpio_port_1ac98cefcacbe7cfd43bf5cf28d8dee833">sonicatorReadFreqLock</reimplements>
        <param>
          <type>uint8_t</type>
          <declname>sonicator_id</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/gpio.cpp" line="321" column="10" bodyfile="src/modules/hal/gpio.cpp" bodystart="321" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="da/d2b/class_atmega_gpio_1a1131f0e828be3842bdbc749e64a7c442" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool AtmegaGpio::statusLed</definition>
        <argsstring>(bool state) override</argsstring>
        <name>statusLed</name>
        <qualifiedname>AtmegaGpio::statusLed</qualifiedname>
        <reimplements refid="d4/d45/class_i_gpio_port_1a77a29641b3e8f4e58d5741483a1bfc89">statusLed</reimplements>
        <param>
          <type>bool</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/gpio.cpp" line="325" column="10" bodyfile="src/modules/hal/gpio.cpp" bodystart="325" bodyend="328"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>ATmega32A GPIO Implementation Class. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>AtmegaGpio</label>
        <link refid="da/d2b/class_atmega_gpio"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>IGpioPort</label>
        <link refid="d4/d45/class_i_gpio_port"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>AtmegaGpio</label>
        <link refid="da/d2b/class_atmega_gpio"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>IGpioPort</label>
        <link refid="d4/d45/class_i_gpio_port"/>
      </node>
    </collaborationgraph>
    <location file="src/modules/hal/gpio.cpp" line="259" column="1" bodyfile="src/modules/hal/gpio.cpp" bodystart="259" bodyend="329"/>
    <listofallmembers>
      <member refid="da/d2b/class_atmega_gpio_1af2a15925181bb6028f1d38abd12d66f6" prot="public" virt="non-virtual"><scope>AtmegaGpio</scope><name>AtmegaGpio</name></member>
      <member refid="da/d2b/class_atmega_gpio_1a5f829675cc361384a99f5b8ffb74a5f5" prot="public" virt="virtual"><scope>AtmegaGpio</scope><name>digitalRead</name></member>
      <member refid="da/d2b/class_atmega_gpio_1a2d86ba45e177565b041c852e7315a043" prot="public" virt="virtual"><scope>AtmegaGpio</scope><name>digitalWrite</name></member>
      <member refid="da/d2b/class_atmega_gpio_1a16e0bcae1d97ee6245adebde7e23d600" prot="public" virt="virtual"><scope>AtmegaGpio</scope><name>init</name></member>
      <member refid="da/d2b/class_atmega_gpio_1af4f9d3f2fe4ae7e431966793097c4558" prot="private" virt="non-virtual"><scope>AtmegaGpio</scope><name>initialized_</name></member>
      <member refid="da/d2b/class_atmega_gpio_1a55d776d5c810d4ec1fa38b02903db710" prot="public" virt="virtual"><scope>AtmegaGpio</scope><name>setPinMode</name></member>
      <member refid="da/d2b/class_atmega_gpio_1a1037ffea170bdaf84630785a40a5f07e" prot="public" virt="virtual"><scope>AtmegaGpio</scope><name>sonicatorReadFreqLock</name></member>
      <member refid="da/d2b/class_atmega_gpio_1a140b942b2478d4c878b5e1c2a3724d36" prot="public" virt="virtual"><scope>AtmegaGpio</scope><name>sonicatorReadOverload</name></member>
      <member refid="da/d2b/class_atmega_gpio_1ab62475065592fde9b6cc1cc78b21cbed" prot="public" virt="virtual"><scope>AtmegaGpio</scope><name>sonicatorReset</name></member>
      <member refid="da/d2b/class_atmega_gpio_1a7ad874c13e514feb1c955cccecd34d78" prot="public" virt="virtual"><scope>AtmegaGpio</scope><name>sonicatorStart</name></member>
      <member refid="da/d2b/class_atmega_gpio_1a315fbbb515aa04e8dd380283171b4e04" prot="public" virt="virtual"><scope>AtmegaGpio</scope><name>sonicatorStop</name></member>
      <member refid="da/d2b/class_atmega_gpio_1a1131f0e828be3842bdbc749e64a7c442" prot="public" virt="virtual"><scope>AtmegaGpio</scope><name>statusLed</name></member>
      <member refid="da/d2b/class_atmega_gpio_1aaec357028ffcf87142b0f14305abcdea" prot="public" virt="virtual"><scope>AtmegaGpio</scope><name>togglePin</name></member>
      <member refid="da/d2b/class_atmega_gpio_1a23fb76168dfae602d1c39aac82e94b54" prot="public" virt="virtual"><scope>AtmegaGpio</scope><name>~AtmegaGpio</name></member>
      <member refid="d4/d45/class_i_gpio_port_1ae486ebd5281bd9ab60879c24300112b5" prot="public" virt="virtual"><scope>AtmegaGpio</scope><name>~IGpioPort</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
