<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="de/d2b/hal__template__interfaces_8h" kind="file" language="C++">
    <compoundname>hal_template_interfaces.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdbool.h</includes>
    <includedby refid="d6/d7c/gpio_8h" local="yes">src/modules/hal/gpio.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>src/modules/hal/hal_template_interfaces.h</label>
        <link refid="de/d2b/hal__template__interfaces_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stdbool.h</label>
      </node>
      <node id="2">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="10">
        <label>include/multiplexer/Multiplexer.h</label>
        <link refid="dc/dc2/_multiplexer_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>include/sonicator/sonicator.h</label>
        <link refid="dc/d16/sonicator_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>include/types.h</label>
        <link refid="d9/d49/types_8h"/>
      </node>
      <node id="11">
        <label>src/main.cpp</label>
        <link refid="df/d0a/main_8cpp"/>
      </node>
      <node id="12">
        <label>src/modules/control/Multiplexer.cpp</label>
        <link refid="d8/d25/_multiplexer_8cpp"/>
      </node>
      <node id="3">
        <label>src/modules/control/sonicator.cpp</label>
        <link refid="d2/db9/sonicator_8cpp"/>
      </node>
      <node id="14">
        <label>src/modules/control/sonicator_modbus_bridge.cpp</label>
        <link refid="d5/dea/sonicator__modbus__bridge_8cpp"/>
      </node>
      <node id="5">
        <label>src/modules/hal/arduino/arduino_hal_factory.h</label>
        <link refid="d8/d61/arduino__hal__factory_8h"/>
      </node>
      <node id="4">
        <label>src/modules/hal/arduino/arduino_hal_impl.h</label>
        <link refid="da/d18/arduino__hal__impl_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>src/modules/hal/atmega_hal_impl.h</label>
        <link refid="d2/d92/atmega__hal__impl_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>src/modules/hal/gpio.cpp</label>
        <link refid="de/d31/gpio_8cpp"/>
      </node>
      <node id="2">
        <label>src/modules/hal/gpio.h</label>
        <link refid="d6/d7c/gpio_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>src/modules/hal/hal.cpp</label>
        <link refid="dc/db6/hal_8cpp"/>
      </node>
      <node id="8">
        <label>src/modules/hal/hal.h</label>
        <link refid="d8/d4b/hal_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/modules/hal/hal_template_interfaces.h</label>
        <link refid="de/d2b/hal__template__interfaces_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="d9/d2e/class_gpio_hal" prot="public">GpioHal</innerclass>
    <innerclass refid="db/daf/class_adc_hal" prot="public">AdcHal</innerclass>
    <innerclass refid="d8/d40/class_pwm_hal" prot="public">PwmHal</innerclass>
    <innerclass refid="de/d7a/class_timer_hal" prot="public">TimerHal</innerclass>
    <innerclass refid="dd/ded/class_uart_hal" prot="public">UartHal</innerclass>
    <innerclass refid="d1/d54/class_hal_template" prot="public">HalTemplate</innerclass>
    <briefdescription>
<para>Template-Based HAL Interfaces for Zero-Overhead Polymorphism. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Cannasol Technologies </para>
</simplesect>
<simplesect kind="date"><para>2025-09-16 </para>
</simplesect>
<simplesect kind="version"><para>1.0.0</para>
</simplesect>
Template-based HAL interfaces that provide abstraction and testability without the runtime overhead of virtual methods. Uses compile-time polymorphism through C++ templates. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HAL_TEMPLATE_INTERFACES_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAL_TEMPLATE_INTERFACES_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TEMPLATE-BASED<sp/>GPIO<sp/>INTERFACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>HalImpl&gt;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d9/d2e/class_gpio_hal" kindref="compound">GpioHal</ref><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Core<sp/>GPIO<sp/>operations<sp/>-<sp/>direct<sp/>calls<sp/>to<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="d9/d2e/class_gpio_hal_1a8ebef7395cb2e0c7482ee16a0feb3512" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d2e/class_gpio_hal_1a8ebef7395cb2e0c7482ee16a0feb3512" kindref="member">init</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::gpioInit();<sp/>}</highlight></codeline>
<codeline lineno="34" refid="d9/d2e/class_gpio_hal_1a5e3d7e61c5793c90d9aa3b87a9992985" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d2e/class_gpio_hal_1a5e3d7e61c5793c90d9aa3b87a9992985" kindref="member">setPinMode</ref>(uint8_t<sp/>pin,<sp/>uint8_t<sp/>mode)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::gpioSetPinMode(pin,<sp/>mode);<sp/>}</highlight></codeline>
<codeline lineno="35" refid="d9/d2e/class_gpio_hal_1aeb35f4b7481fbce73967fdd512139bca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d2e/class_gpio_hal_1aeb35f4b7481fbce73967fdd512139bca" kindref="member">digitalWrite</ref>(uint8_t<sp/>pin,<sp/>uint8_t<sp/>value)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::gpioDigitalWrite(pin,<sp/>value);<sp/>}</highlight></codeline>
<codeline lineno="36" refid="d9/d2e/class_gpio_hal_1aa672e7d9f4bb045c5a4f1144dd7a28e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="d9/d2e/class_gpio_hal_1aa672e7d9f4bb045c5a4f1144dd7a28e7" kindref="member">digitalRead</ref>(uint8_t<sp/>pin)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::gpioDigitalRead(pin);<sp/>}</highlight></codeline>
<codeline lineno="37" refid="d9/d2e/class_gpio_hal_1a09ee6eb7e616a25b7a6e938c0b7c05f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d2e/class_gpio_hal_1a09ee6eb7e616a25b7a6e938c0b7c05f2" kindref="member">togglePin</ref>(uint8_t<sp/>pin)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::gpioTogglePin(pin);<sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sonicator-specific<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="d9/d2e/class_gpio_hal_1a5d443f61902c789d4b7bf540687f705c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d2e/class_gpio_hal_1a5d443f61902c789d4b7bf540687f705c" kindref="member">sonicatorStart</ref>(uint8_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::gpioSonicatorStart(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="41" refid="d9/d2e/class_gpio_hal_1adfcbf6e7d087b84b12d8e7f8ee11e070" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d2e/class_gpio_hal_1adfcbf6e7d087b84b12d8e7f8ee11e070" kindref="member">sonicatorStop</ref>(uint8_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::gpioSonicatorStop(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="42" refid="d9/d2e/class_gpio_hal_1ae4798364bf9d2baf7de59a051055282f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d2e/class_gpio_hal_1ae4798364bf9d2baf7de59a051055282f" kindref="member">sonicatorReset</ref>(uint8_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::gpioSonicatorReset(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="43" refid="d9/d2e/class_gpio_hal_1ab37d3298282f5cba60e59b580b8d5f1a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d2e/class_gpio_hal_1ab37d3298282f5cba60e59b580b8d5f1a" kindref="member">sonicatorReadOverload</ref>(uint8_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>state)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::gpioSonicatorReadOverload(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>state);<sp/>}</highlight></codeline>
<codeline lineno="44" refid="d9/d2e/class_gpio_hal_1a1d0058bccc765afffb3a86406100b083" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d2e/class_gpio_hal_1a1d0058bccc765afffb3a86406100b083" kindref="member">sonicatorReadFreqLock</ref>(uint8_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>state)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::gpioSonicatorReadFreqLock(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>state);<sp/>}</highlight></codeline>
<codeline lineno="45" refid="d9/d2e/class_gpio_hal_1a46f64cd8d60d323de47eabefe7b40d4e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d9/d2e/class_gpio_hal_1a46f64cd8d60d323de47eabefe7b40d4e" kindref="member">statusLed</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>state)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::gpioStatusLed(state);<sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal">};</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TEMPLATE-BASED<sp/>ADC<sp/>INTERFACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>HalImpl&gt;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="db/daf/class_adc_hal" kindref="compound">AdcHal</ref><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Core<sp/>ADC<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="db/daf/class_adc_hal_1a76fcb8d9943bff509c94fb7813be6dcc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="db/daf/class_adc_hal_1a76fcb8d9943bff509c94fb7813be6dcc" kindref="member">init</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::adcInit();<sp/>}</highlight></codeline>
<codeline lineno="60" refid="db/daf/class_adc_hal_1ae2010f52b72ee230a65c5bdaa6465b0a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="db/daf/class_adc_hal_1ae2010f52b72ee230a65c5bdaa6465b0a" kindref="member">readChannel</ref>(uint8_t<sp/>channel,<sp/>uint16_t*<sp/>value)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::adcReadChannel(channel,<sp/>value);<sp/>}</highlight></codeline>
<codeline lineno="61" refid="db/daf/class_adc_hal_1a7b0ca7d195cfd337bb64673786df7218" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="db/daf/class_adc_hal_1a7b0ca7d195cfd337bb64673786df7218" kindref="member">startConversion</ref>(uint8_t<sp/>channel)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::adcStartConversion(channel);<sp/>}</highlight></codeline>
<codeline lineno="62" refid="db/daf/class_adc_hal_1a642394dc0b99649881e91b42aaa54ae3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="db/daf/class_adc_hal_1a642394dc0b99649881e91b42aaa54ae3" kindref="member">isConversionComplete</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::adcIsConversionComplete();<sp/>}</highlight></codeline>
<codeline lineno="63" refid="db/daf/class_adc_hal_1a98088769b06fb8037a99c5f410a09aca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="db/daf/class_adc_hal_1a98088769b06fb8037a99c5f410a09aca" kindref="member">rawToVoltage</ref>(uint16_t<sp/>raw)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::adcRawToVoltage(raw);<sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Application-specific<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="db/daf/class_adc_hal_1a7bed6fd2679c7e1d713ee3e2895719a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="db/daf/class_adc_hal_1a7bed6fd2679c7e1d713ee3e2895719a3" kindref="member">readSonicatorPower</ref>(uint8_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>power)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::adcReadSonicatorPower(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>power);<sp/>}</highlight></codeline>
<codeline lineno="67" refid="db/daf/class_adc_hal_1a306ac912f51cc52ea808efff3827b4ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="db/daf/class_adc_hal_1a306ac912f51cc52ea808efff3827b4ab" kindref="member">readFrequency</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>frequency)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::adcReadFrequency(frequency);<sp/>}</highlight></codeline>
<codeline lineno="68" refid="db/daf/class_adc_hal_1a6d231736402ed4d7b2aeda3404054ec1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="db/daf/class_adc_hal_1a6d231736402ed4d7b2aeda3404054ec1" kindref="member">calibrate</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>reference_voltage)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::adcCalibrate(reference_voltage);<sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal">};</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TEMPLATE-BASED<sp/>PWM<sp/>INTERFACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>HalImpl&gt;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d8/d40/class_pwm_hal" kindref="compound">PwmHal</ref><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Core<sp/>PWM<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="d8/d40/class_pwm_hal_1a02e48599f1854809ad2ce48bbdcedbf8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d40/class_pwm_hal_1a02e48599f1854809ad2ce48bbdcedbf8" kindref="member">init</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::pwmInit();<sp/>}</highlight></codeline>
<codeline lineno="83" refid="d8/d40/class_pwm_hal_1a302a20423b92a0bf008ee9171ede75ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d40/class_pwm_hal_1a302a20423b92a0bf008ee9171ede75ff" kindref="member">setFrequency</ref>(uint8_t<sp/>channel,<sp/>uint32_t<sp/>frequency)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::pwmSetFrequency(channel,<sp/>frequency);<sp/>}</highlight></codeline>
<codeline lineno="84" refid="d8/d40/class_pwm_hal_1a70131014a71b50d29ecb75970c40dd1f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d40/class_pwm_hal_1a70131014a71b50d29ecb75970c40dd1f" kindref="member">setDutyCycle</ref>(uint8_t<sp/>channel,<sp/>uint8_t<sp/>duty)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::pwmSetDutyCycle(channel,<sp/>duty);<sp/>}</highlight></codeline>
<codeline lineno="85" refid="d8/d40/class_pwm_hal_1af2050e1221258297228a1529e1e61a6f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d40/class_pwm_hal_1af2050e1221258297228a1529e1e61a6f" kindref="member">enableChannel</ref>(uint8_t<sp/>channel)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::pwmEnableChannel(channel);<sp/>}</highlight></codeline>
<codeline lineno="86" refid="d8/d40/class_pwm_hal_1a81217fb45a922f2a6b62ba4889bc3642" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d40/class_pwm_hal_1a81217fb45a922f2a6b62ba4889bc3642" kindref="member">disableChannel</ref>(uint8_t<sp/>channel)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::pwmDisableChannel(channel);<sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Application-specific<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="d8/d40/class_pwm_hal_1aa0fa9fd798b9e1c7b6dd3d8e8ff75f79" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d40/class_pwm_hal_1aa0fa9fd798b9e1c7b6dd3d8e8ff75f79" kindref="member">setAmplitude</ref>(uint8_t<sp/>amplitude)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::pwmSetAmplitude(amplitude);<sp/>}</highlight></codeline>
<codeline lineno="90" refid="d8/d40/class_pwm_hal_1acc53b0204be1663fcdf068b0d62d923b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d40/class_pwm_hal_1acc53b0204be1663fcdf068b0d62d923b" kindref="member">getAmplitude</ref>(uint8_t*<sp/>amplitude)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::pwmGetAmplitude(amplitude);<sp/>}</highlight></codeline>
<codeline lineno="91" refid="d8/d40/class_pwm_hal_1abf5dd825a90c3ab3e40ff190f6a194d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d40/class_pwm_hal_1abf5dd825a90c3ab3e40ff190f6a194d4" kindref="member">amplitudeRamp</ref>(uint8_t<sp/>target,<sp/>uint16_t<sp/>ramp_time)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::pwmAmplitudeRamp(target,<sp/>ramp_time);<sp/>}</highlight></codeline>
<codeline lineno="92" refid="d8/d40/class_pwm_hal_1a82777c0fad68513174c2ef0f9e910a83" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d40/class_pwm_hal_1a82777c0fad68513174c2ef0f9e910a83" kindref="member">rampComplete</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>complete)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::pwmRampComplete(complete);<sp/>}</highlight></codeline>
<codeline lineno="93" refid="d8/d40/class_pwm_hal_1aad89f8ffbc0b184403a75d82320b7acc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d40/class_pwm_hal_1aad89f8ffbc0b184403a75d82320b7acc" kindref="member">emergencyStop</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::pwmEmergencyStop();<sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Diagnostic<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="d8/d40/class_pwm_hal_1adef8f5f5fe27f1f5ab09a5a5d4cb9081" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d40/class_pwm_hal_1adef8f5f5fe27f1f5ab09a5a5d4cb9081" kindref="member">dutyToVoltage</ref>(uint8_t<sp/>duty,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>voltage)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::pwmDutyToVoltage(duty,<sp/>voltage);<sp/>}</highlight></codeline>
<codeline lineno="97" refid="d8/d40/class_pwm_hal_1a62b1a3d822065526bf871031d1031110" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d40/class_pwm_hal_1a62b1a3d822065526bf871031d1031110" kindref="member">amplitudeToVoltage</ref>(uint8_t<sp/>amplitude,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>voltage)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::pwmAmplitudeToVoltage(amplitude,<sp/>voltage);<sp/>}</highlight></codeline>
<codeline lineno="98" refid="d8/d40/class_pwm_hal_1a7bf57c19891e5ad26bf728973385e8d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d40/class_pwm_hal_1a7bf57c19891e5ad26bf728973385e8d1" kindref="member">testPattern</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::pwmTestPattern();<sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal">};</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TEMPLATE-BASED<sp/>TIMER<sp/>INTERFACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>HalImpl&gt;</highlight></codeline>
<codeline lineno="109" refid="de/d7a/class_timer_hal" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="de/d7a/class_timer_hal" kindref="compound">TimerHal</ref><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Core<sp/>timer<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="de/d7a/class_timer_hal_1af8fcd8c2a926a0d8645b34a97e0efad7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d7a/class_timer_hal_1af8fcd8c2a926a0d8645b34a97e0efad7" kindref="member">init</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::timerInit();<sp/>}</highlight></codeline>
<codeline lineno="113" refid="de/d7a/class_timer_hal_1a1f355e4e0a3dc4d08f0e4f5f059d7a4d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d7a/class_timer_hal_1a1f355e4e0a3dc4d08f0e4f5f059d7a4d" kindref="member">configure</ref>(<ref refid="d5/dd0/timer_8h_1ab46c323c4f73f2150385fead53055392" kindref="member">timer_id_t</ref><sp/>timer_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/de4/structtimer__config__t" kindref="compound">timer_config_t</ref>*<sp/>config)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::timerConfigure(timer_id,<sp/>config);<sp/>}</highlight></codeline>
<codeline lineno="114" refid="de/d7a/class_timer_hal_1a4158b7cf8783d2930b8da20631b8e940" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d7a/class_timer_hal_1a4158b7cf8783d2930b8da20631b8e940" kindref="member">start</ref>(<ref refid="d5/dd0/timer_8h_1ab46c323c4f73f2150385fead53055392" kindref="member">timer_id_t</ref><sp/>timer_id,<sp/>uint32_t<sp/>period_ms)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::timerStart(timer_id,<sp/>period_ms);<sp/>}</highlight></codeline>
<codeline lineno="115" refid="de/d7a/class_timer_hal_1a68e47d77b708f61df62364ad0495b669" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d7a/class_timer_hal_1a68e47d77b708f61df62364ad0495b669" kindref="member">stop</ref>(<ref refid="d5/dd0/timer_8h_1ab46c323c4f73f2150385fead53055392" kindref="member">timer_id_t</ref><sp/>timer_id)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::timerStop(timer_id);<sp/>}</highlight></codeline>
<codeline lineno="116" refid="de/d7a/class_timer_hal_1aa5485ea6f0aab2fdcbfe357403ce8a2a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d7a/class_timer_hal_1aa5485ea6f0aab2fdcbfe357403ce8a2a" kindref="member">expired</ref>(<ref refid="d5/dd0/timer_8h_1ab46c323c4f73f2150385fead53055392" kindref="member">timer_id_t</ref><sp/>timer_id,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/><ref refid="de/d7a/class_timer_hal_1aa5485ea6f0aab2fdcbfe357403ce8a2a" kindref="member">expired</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::timerExpired(timer_id,<sp/><ref refid="de/d7a/class_timer_hal_1aa5485ea6f0aab2fdcbfe357403ce8a2a" kindref="member">expired</ref>);<sp/>}</highlight></codeline>
<codeline lineno="117" refid="de/d7a/class_timer_hal_1ae2b07b9146ba47435b52f8f531d59412" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d7a/class_timer_hal_1ae2b07b9146ba47435b52f8f531d59412" kindref="member">reset</ref>(<ref refid="d5/dd0/timer_8h_1ab46c323c4f73f2150385fead53055392" kindref="member">timer_id_t</ref><sp/>timer_id)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::timerReset(timer_id);<sp/>}</highlight></codeline>
<codeline lineno="118" refid="de/d7a/class_timer_hal_1ae7fe181e0d5af1c5870b7d9102658dc9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d7a/class_timer_hal_1ae7fe181e0d5af1c5870b7d9102658dc9" kindref="member">getValue</ref>(<ref refid="d5/dd0/timer_8h_1ab46c323c4f73f2150385fead53055392" kindref="member">timer_id_t</ref><sp/>timer_id,<sp/>uint16_t*<sp/>value)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::timerGetValue(timer_id,<sp/>value);<sp/>}</highlight></codeline>
<codeline lineno="119" refid="de/d7a/class_timer_hal_1a2fde7f9bc656c91da19fd13b5567b56d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d7a/class_timer_hal_1a2fde7f9bc656c91da19fd13b5567b56d" kindref="member">getElapsed</ref>(<ref refid="d5/dd0/timer_8h_1ab46c323c4f73f2150385fead53055392" kindref="member">timer_id_t</ref><sp/>timer_id,<sp/>uint32_t*<sp/>elapsed_ms)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::timerGetElapsed(timer_id,<sp/>elapsed_ms);<sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>System<sp/>timing<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="de/d7a/class_timer_hal_1af6d740149c197603171a3eeaaf4c149e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d7a/class_timer_hal_1af6d740149c197603171a3eeaaf4c149e" kindref="member">getMillis</ref>(uint32_t*<sp/>uptime_ms)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::timerGetMillis(uptime_ms);<sp/>}</highlight></codeline>
<codeline lineno="123" refid="de/d7a/class_timer_hal_1ab527be8314453f8398efbca07769916c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d7a/class_timer_hal_1ab527be8314453f8398efbca07769916c" kindref="member">getMicros</ref>(uint32_t*<sp/>uptime_us)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::timerGetMicros(uptime_us);<sp/>}</highlight></codeline>
<codeline lineno="124" refid="de/d7a/class_timer_hal_1a32e9a2c0bdc30c84752752b9000492d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d7a/class_timer_hal_1a32e9a2c0bdc30c84752752b9000492d0" kindref="member">delayMs</ref>(uint32_t<sp/>delay_ms)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::timerDelayMs(delay_ms);<sp/>}</highlight></codeline>
<codeline lineno="125" refid="de/d7a/class_timer_hal_1afea82d287f267f5cc75ba8acbf7b6e0b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d7a/class_timer_hal_1afea82d287f267f5cc75ba8acbf7b6e0b" kindref="member">delayUs</ref>(uint32_t<sp/>delay_us)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::timerDelayUs(delay_us);<sp/>}</highlight></codeline>
<codeline lineno="126" refid="de/d7a/class_timer_hal_1a45fafa7f63ca8b7669de560373dc8b8c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d7a/class_timer_hal_1a45fafa7f63ca8b7669de560373dc8b8c" kindref="member">delayComplete</ref>(uint32_t<sp/>start_time_ms,<sp/>uint32_t<sp/>delay_ms,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>complete)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::timerDelayComplete(start_time_ms,<sp/>delay_ms,<sp/>complete);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Scheduler<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="de/d7a/class_timer_hal_1a3073b43a2a0aeaf341f7956b6e7765dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d7a/class_timer_hal_1a3073b43a2a0aeaf341f7956b6e7765dd" kindref="member">schedulerInit</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::timerSchedulerInit();<sp/>}</highlight></codeline>
<codeline lineno="132" refid="de/d7a/class_timer_hal_1a80a3a98d41cb420b4d2c5242876200cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d7a/class_timer_hal_1a80a3a98d41cb420b4d2c5242876200cb" kindref="member">schedulerTick</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>tick_available)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::timerSchedulerTick(tick_available);<sp/>}</highlight></codeline>
<codeline lineno="133" refid="de/d7a/class_timer_hal_1aad7f48593c5e19e54b3b9b61fde6a28a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d7a/class_timer_hal_1aad7f48593c5e19e54b3b9b61fde6a28a" kindref="member">schedulerGetTicks</ref>(uint32_t*<sp/>tick_count)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::timerSchedulerGetTicks(tick_count);<sp/>}</highlight></codeline>
<codeline lineno="134" refid="de/d7a/class_timer_hal_1adbd26ca429d9a7690eaf227b7ccd8d68" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d7a/class_timer_hal_1adbd26ca429d9a7690eaf227b7ccd8d68" kindref="member">schedulerReset</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::timerSchedulerReset();<sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Watchdog<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="de/d7a/class_timer_hal_1a8671d831f684345ae866e5e3e8c75a31" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d7a/class_timer_hal_1a8671d831f684345ae866e5e3e8c75a31" kindref="member">watchdogInit</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::timerWatchdogInit();<sp/>}</highlight></codeline>
<codeline lineno="138" refid="de/d7a/class_timer_hal_1a9dd707d570b9d06088972e3f7222f2e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d7a/class_timer_hal_1a9dd707d570b9d06088972e3f7222f2e1" kindref="member">watchdogReset</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::timerWatchdogReset();<sp/>}</highlight></codeline>
<codeline lineno="139" refid="de/d7a/class_timer_hal_1a2b7b7d613030ae489ce3ed7ee17018d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d7a/class_timer_hal_1a2b7b7d613030ae489ce3ed7ee17018d8" kindref="member">watchdogExpired</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/><ref refid="de/d7a/class_timer_hal_1aa5485ea6f0aab2fdcbfe357403ce8a2a" kindref="member">expired</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::timerWatchdogExpired(<ref refid="de/d7a/class_timer_hal_1aa5485ea6f0aab2fdcbfe357403ce8a2a" kindref="member">expired</ref>);<sp/>}</highlight></codeline>
<codeline lineno="140" refid="de/d7a/class_timer_hal_1a7ec2a57b6e465c64ae8d034c96390879" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d7a/class_timer_hal_1a7ec2a57b6e465c64ae8d034c96390879" kindref="member">watchdogTimeRemaining</ref>(uint32_t*<sp/>time_remaining_ms)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::timerWatchdogTimeRemaining(time_remaining_ms);<sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal">};</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TEMPLATE-BASED<sp/>UART<sp/>INTERFACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>HalImpl&gt;</highlight></codeline>
<codeline lineno="151" refid="dd/ded/class_uart_hal" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="dd/ded/class_uart_hal" kindref="compound">UartHal</ref><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Core<sp/>UART<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="dd/ded/class_uart_hal_1af0f2314bffd745f6d9d71784b41a280c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dd/ded/class_uart_hal_1af0f2314bffd745f6d9d71784b41a280c" kindref="member">init</ref>(uint32_t<sp/>baud_rate)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::uartInit(baud_rate);<sp/>}</highlight></codeline>
<codeline lineno="155" refid="dd/ded/class_uart_hal_1a2412d4f983c48ea33dca5552fdce535d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dd/ded/class_uart_hal_1a2412d4f983c48ea33dca5552fdce535d" kindref="member">setBaudRate</ref>(uint32_t<sp/>baud_rate)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::uartSetBaudRate(baud_rate);<sp/>}</highlight></codeline>
<codeline lineno="156" refid="dd/ded/class_uart_hal_1a5dff7726379cda3c26358dcaa3136382" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dd/ded/class_uart_hal_1a5dff7726379cda3c26358dcaa3136382" kindref="member">sendByte</ref>(uint8_t<sp/>data)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::uartSendByte(data);<sp/>}</highlight></codeline>
<codeline lineno="157" refid="dd/ded/class_uart_hal_1a1cc107fcdc13a8d9c4631152105da66e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dd/ded/class_uart_hal_1a1cc107fcdc13a8d9c4631152105da66e" kindref="member">receiveByte</ref>(uint8_t*<sp/>data)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::uartReceiveByte(data);<sp/>}</highlight></codeline>
<codeline lineno="158" refid="dd/ded/class_uart_hal_1a9dfe781c39a69c925a2e4ca31799cca4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dd/ded/class_uart_hal_1a9dfe781c39a69c925a2e4ca31799cca4" kindref="member">dataAvailable</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>available)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::uartDataAvailable(available);<sp/>}</highlight></codeline>
<codeline lineno="159" refid="dd/ded/class_uart_hal_1a3ad51e918600b13789a55f29e8a8d24d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dd/ded/class_uart_hal_1a3ad51e918600b13789a55f29e8a8d24d" kindref="member">getRxCount</ref>(uint16_t*<sp/>count)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::uartGetRxCount(count);<sp/>}</highlight></codeline>
<codeline lineno="160" refid="dd/ded/class_uart_hal_1a189c19afb87dd8580c5e2bb403cca410" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dd/ded/class_uart_hal_1a189c19afb87dd8580c5e2bb403cca410" kindref="member">sendBuffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>buffer,<sp/>uint16_t<sp/>length)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::uartSendBuffer(buffer,<sp/>length);<sp/>}</highlight></codeline>
<codeline lineno="161" refid="dd/ded/class_uart_hal_1ac7d0176ea2292bd33e07e38ef857012b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dd/ded/class_uart_hal_1ac7d0176ea2292bd33e07e38ef857012b" kindref="member">receiveBuffer</ref>(uint8_t*<sp/>buffer,<sp/>uint16_t<sp/>max_length,<sp/>uint16_t*<sp/>received)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::uartReceiveBuffer(buffer,<sp/>max_length,<sp/>received);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164" refid="dd/ded/class_uart_hal_1a1a8be2df027fd6ff7f9e9a16e25bb21f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dd/ded/class_uart_hal_1a1a8be2df027fd6ff7f9e9a16e25bb21f" kindref="member">flushTx</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::uartFlushTx();<sp/>}</highlight></codeline>
<codeline lineno="165" refid="dd/ded/class_uart_hal_1a50909f26871586530cc34665ed2356d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dd/ded/class_uart_hal_1a50909f26871586530cc34665ed2356d1" kindref="member">flushRx</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::uartFlushRx();<sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MODBUS<sp/>RTU<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="dd/ded/class_uart_hal_1ae3f80876834e055eac76b90f0c9ad74c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dd/ded/class_uart_hal_1ae3f80876834e055eac76b90f0c9ad74c" kindref="member">sendModbusFrame</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>frame,<sp/>uint16_t<sp/>length)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::uartSendModbusFrame(frame,<sp/>length);<sp/>}</highlight></codeline>
<codeline lineno="169" refid="dd/ded/class_uart_hal_1a40b676a7fe0bed95feae2496767b41e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dd/ded/class_uart_hal_1a40b676a7fe0bed95feae2496767b41e4" kindref="member">receiveModbusFrame</ref>(uint8_t*<sp/>frame,<sp/>uint16_t<sp/>max_length,<sp/>uint16_t*<sp/>received,<sp/>uint32_t<sp/>timeout_ms)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::uartReceiveModbusFrame(frame,<sp/>max_length,<sp/>received,<sp/>timeout_ms);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172" refid="dd/ded/class_uart_hal_1a665a38f6d76c69f7919f557975e884cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dd/ded/class_uart_hal_1a665a38f6d76c69f7919f557975e884cd" kindref="member">modbusGapDetected</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>gap_detected)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::uartModbusGapDetected(gap_detected);<sp/>}</highlight></codeline>
<codeline lineno="173" refid="dd/ded/class_uart_hal_1a06fa1f6eb4c098e1ebfd16bdfd08a874" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dd/ded/class_uart_hal_1a06fa1f6eb4c098e1ebfd16bdfd08a874" kindref="member">getIdleTime</ref>(uint32_t*<sp/>time_us)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::uartGetIdleTime(time_us);<sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Diagnostic<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="dd/ded/class_uart_hal_1a05080a7cef17724a0d8dfcedfbb319b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dd/ded/class_uart_hal_1a05080a7cef17724a0d8dfcedfbb319b9" kindref="member">getStatus</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/><ref refid="db/d23/uart_8cpp_1a8b9682c4c0897c35f9e60b20e473210d" kindref="member">tx_busy</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/><ref refid="db/d23/uart_8cpp_1a854e3e6c9be5a2748e88235db8274c03" kindref="member">rx_overflow</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/><ref refid="db/d23/uart_8cpp_1a2e7fe25823c47c43b987be6cf4275282" kindref="member">frame_error</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/><ref refid="db/d23/uart_8cpp_1a024ae533cc0baf8b1dba9f83f10a714c" kindref="member">parity_error</ref>)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::uartGetStatus(<ref refid="db/d23/uart_8cpp_1a8b9682c4c0897c35f9e60b20e473210d" kindref="member">tx_busy</ref>,<sp/><ref refid="db/d23/uart_8cpp_1a854e3e6c9be5a2748e88235db8274c03" kindref="member">rx_overflow</ref>,<sp/><ref refid="db/d23/uart_8cpp_1a2e7fe25823c47c43b987be6cf4275282" kindref="member">frame_error</ref>,<sp/><ref refid="db/d23/uart_8cpp_1a024ae533cc0baf8b1dba9f83f10a714c" kindref="member">parity_error</ref>);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179" refid="dd/ded/class_uart_hal_1abe5f6a24fe2f86436120fb1edb268ae4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dd/ded/class_uart_hal_1abe5f6a24fe2f86436120fb1edb268ae4" kindref="member">getTxFree</ref>(uint16_t*<sp/>free_bytes)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::uartGetTxFree(free_bytes);<sp/>}</highlight></codeline>
<codeline lineno="180" refid="dd/ded/class_uart_hal_1a38ce9314b0315865baf2e4c0e883b6ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dd/ded/class_uart_hal_1a38ce9314b0315865baf2e4c0e883b6ec" kindref="member">clearErrors</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::uartClearErrors();<sp/>}</highlight></codeline>
<codeline lineno="181" refid="dd/ded/class_uart_hal_1a31d3e5d32c0ebba45f18dbec1a466017" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dd/ded/class_uart_hal_1a31d3e5d32c0ebba45f18dbec1a466017" kindref="member">getCharTime</ref>(uint16_t*<sp/><ref refid="db/d23/uart_8cpp_1a8eef656f756f781fd823edd1df257b04" kindref="member">char_time_us</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::uartGetCharTime(<ref refid="db/d23/uart_8cpp_1a8eef656f756f781fd823edd1df257b04" kindref="member">char_time_us</ref>);<sp/>}</highlight></codeline>
<codeline lineno="182" refid="dd/ded/class_uart_hal_1a594fcd35dba543abd5bfad5bfc39690e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dd/ded/class_uart_hal_1a594fcd35dba543abd5bfad5bfc39690e" kindref="member">testLoopback</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>success)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HalImpl::uartTestLoopback(success);<sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal">};</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment">//<sp/>COMPLETE<sp/>HAL<sp/>TEMPLATE<sp/>(COMBINES<sp/>ALL<sp/>PERIPHERALS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>HalImpl&gt;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d1/d54/class_hal_template" kindref="compound">HalTemplate</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="d9/d2e/class_gpio_hal" kindref="compound">GpioHal</ref>&lt;HalImpl&gt;,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="db/daf/class_adc_hal" kindref="compound">AdcHal</ref>&lt;HalImpl&gt;,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="d8/d40/class_pwm_hal" kindref="compound">PwmHal</ref>&lt;HalImpl&gt;,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="de/d7a/class_timer_hal" kindref="compound">TimerHal</ref>&lt;HalImpl&gt;,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="dd/ded/class_uart_hal" kindref="compound">UartHal</ref>&lt;HalImpl&gt;<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Unified<sp/>initialization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="d1/d54/class_hal_template_1a1b7a2bc17bbb126417c3f382d9e340d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d1/d54/class_hal_template_1a1b7a2bc17bbb126417c3f382d9e340d4" kindref="member">begin</ref>()<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gpio_ok<sp/>=<sp/><ref refid="d9/d2e/class_gpio_hal_1a8ebef7395cb2e0c7482ee16a0feb3512" kindref="member">GpioHal&lt;HalImpl&gt;::init</ref>();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>adc_ok<sp/>=<sp/><ref refid="db/daf/class_adc_hal_1a76fcb8d9943bff509c94fb7813be6dcc" kindref="member">AdcHal&lt;HalImpl&gt;::init</ref>();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pwm_ok<sp/>=<sp/><ref refid="d8/d40/class_pwm_hal_1a02e48599f1854809ad2ce48bbdcedbf8" kindref="member">PwmHal&lt;HalImpl&gt;::init</ref>();</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>timer_ok<sp/>=<sp/><ref refid="de/d7a/class_timer_hal_1af8fcd8c2a926a0d8645b34a97e0efad7" kindref="member">TimerHal&lt;HalImpl&gt;::init</ref>();</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>UART<sp/>initialization<sp/>requires<sp/>baud<sp/>rate,<sp/>so<sp/>skip<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gpio_ok<sp/>&amp;&amp;<sp/>adc_ok<sp/>&amp;&amp;<sp/>pwm_ok<sp/>&amp;&amp;<sp/>timer_ok;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Individual<sp/>peripheral<sp/>initialization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="d1/d54/class_hal_template_1a2fc3d748377dd45e14b2a6f4d1bf3357" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d1/d54/class_hal_template_1a2fc3d748377dd45e14b2a6f4d1bf3357" kindref="member">beginGpio</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d9/d2e/class_gpio_hal_1a8ebef7395cb2e0c7482ee16a0feb3512" kindref="member">GpioHal&lt;HalImpl&gt;::init</ref>();<sp/>}</highlight></codeline>
<codeline lineno="214" refid="d1/d54/class_hal_template_1ad01a8f570aa0d245a5723ac9a21edda8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d1/d54/class_hal_template_1ad01a8f570aa0d245a5723ac9a21edda8" kindref="member">beginAdc</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="db/daf/class_adc_hal_1a76fcb8d9943bff509c94fb7813be6dcc" kindref="member">AdcHal&lt;HalImpl&gt;::init</ref>();<sp/>}</highlight></codeline>
<codeline lineno="215" refid="d1/d54/class_hal_template_1acab0ea566b4c515daf2d303e7d4b104c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d1/d54/class_hal_template_1acab0ea566b4c515daf2d303e7d4b104c" kindref="member">beginPwm</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d8/d40/class_pwm_hal_1a02e48599f1854809ad2ce48bbdcedbf8" kindref="member">PwmHal&lt;HalImpl&gt;::init</ref>();<sp/>}</highlight></codeline>
<codeline lineno="216" refid="d1/d54/class_hal_template_1ae3ac4cb690a0ec86d19fbd7671aa1de4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d1/d54/class_hal_template_1ae3ac4cb690a0ec86d19fbd7671aa1de4" kindref="member">beginTimer</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d7a/class_timer_hal_1af8fcd8c2a926a0d8645b34a97e0efad7" kindref="member">TimerHal&lt;HalImpl&gt;::init</ref>();<sp/>}</highlight></codeline>
<codeline lineno="217" refid="d1/d54/class_hal_template_1a7d5453d960486fd8ed18c6e8ffa07e2f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d1/d54/class_hal_template_1a7d5453d960486fd8ed18c6e8ffa07e2f" kindref="member">beginUart</ref>(uint32_t<sp/>baud_rate)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dd/ded/class_uart_hal_1af0f2314bffd745f6d9d71784b41a280c" kindref="member">UartHal&lt;HalImpl&gt;::init</ref>(baud_rate);<sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal">};</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>HAL_TEMPLATE_INTERFACES_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/modules/hal/hal_template_interfaces.h"/>
  </compounddef>
</doxygen>
