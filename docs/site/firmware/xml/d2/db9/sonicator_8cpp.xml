<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="d2/db9/sonicator_8cpp" kind="file" language="C++">
    <compoundname>sonicator.cpp</compoundname>
    <includes refid="de/d13/sonicator__control_8h" local="yes">sonicator_control.h</includes>
    <includes refid="db/d16/config_8h" local="yes">config.h</includes>
    <includes refid="d6/d7c/gpio_8h" local="yes">modules/hal/gpio.h</includes>
    <includes refid="d6/db9/pwm_8h" local="yes">modules/hal/pwm.h</includes>
    <includes refid="d7/d19/adc_8h" local="yes">modules/hal/adc.h</includes>
    <includes local="no">Arduino.h</includes>
    <includes local="no">string.h</includes>
    <incdepgraph>
      <node id="11">
        <label>config.h</label>
        <link refid="db/d16/config_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>sonicator_control.h</label>
        <link refid="de/d13/sonicator__control_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/modules/control/sonicator.cpp</label>
        <link refid="d2/db9/sonicator_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>adc.h</label>
        <link refid="d7/d19/adc_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>gpio.h</label>
        <link refid="d6/d7c/gpio_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>modules/hal/hal.h</label>
        <link refid="d8/d4b/hal_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>pwm.h</label>
        <link refid="d6/db9/pwm_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>timer.h</label>
        <link refid="d5/dd0/timer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>uart.h</label>
        <link refid="d2/d86/uart_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>Arduino.h</label>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="13">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="d2/db9/sonicator_8cpp_1a0b7077f739992ab6c25eb7d02c0899c6" prot="public" static="no">
        <name>SONICATOR_SIMULATION_MODE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/control/sonicator.cpp" line="35" column="9" bodyfile="src/modules/control/sonicator.cpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d2/db9/sonicator_8cpp_1a9b3ce32f980a7abc4dfdbe110f665c8d" prot="public" static="no">
        <name>SONICATOR_LOG</name>
        <param><defname>msg</defname></param>
        <initializer>((void)0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/control/sonicator.cpp" line="42" column="10" bodyfile="src/modules/control/sonicator.cpp" bodystart="42" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="d2/db9/sonicator_8cpp_1a2bc3fad78fedc5ae0e007a5cc4485108" prot="public" static="yes" mutable="no">
        <type><ref refid="df/d70/structsonicator__state__control__t" kindref="compound">sonicator_state_control_t</ref></type>
        <definition>sonicator_state_control_t g_sonicator</definition>
        <argsstring></argsstring>
        <name>g_sonicator</name>
        <initializer>= {
    <ref refid="de/d13/sonicator__control_8h_1ad0aeab8703f3a1439806186cba759315a02f13d1f0ad8e9fc52f93cf9c25ad0cf" kindref="member">SONICATOR_STATE_UNKNOWN</ref>,  
    <ref refid="de/d13/sonicator__control_8h_1ad0aeab8703f3a1439806186cba759315a02f13d1f0ad8e9fc52f93cf9c25ad0cf" kindref="member">SONICATOR_STATE_UNKNOWN</ref>,  
    0,                        
    <ref refid="de/d13/sonicator__control_8h_1abe06b5505cf15123b31cf8b029b59679" kindref="member">SONICATOR_MIN_AMPLITUDE_PERCENT</ref>, 
    false,                    
    false,                    
    false,                    
    false,                    
    false,                    
    false,                    
    0.0f,                     
    0,                        
    <ref refid="de/d13/sonicator__control_8h_1a361c37dbeedf89f2fe09845eab7f0a99a45f67c744f0a84ef961991bbbcee8cb7" kindref="member">SONICATOR_FAULT_NONE</ref>,     
    0,                        
    0,                        
    0,                        
    0,                        
    false,                    
    0,                        
    0,                        
    0                         
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/control/sonicator.cpp" line="49" column="34" bodyfile="src/modules/control/sonicator.cpp" bodystart="49" bodyend="71"/>
      </memberdef>
      <memberdef kind="variable" id="d2/db9/sonicator_8cpp_1ac1fd48a035e83d4c49c15569676b3428" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool g_simulation_mode</definition>
        <argsstring></argsstring>
        <name>g_simulation_mode</name>
        <initializer>= <ref refid="d2/db9/sonicator_8cpp_1a0b7077f739992ab6c25eb7d02c0899c6" kindref="member">SONICATOR_SIMULATION_MODE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/control/sonicator.cpp" line="72" column="13" bodyfile="src/modules/control/sonicator.cpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/db9/sonicator_8cpp_1ae51dbc7e8f836d942c158d75aa6e345b" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool g_initialized</definition>
        <argsstring></argsstring>
        <name>g_initialized</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/control/sonicator.cpp" line="73" column="13" bodyfile="src/modules/control/sonicator.cpp" bodystart="73" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="d2/db9/sonicator_8cpp_1ab73283b0ecebb62fc40528dd0117b5fe" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t get_timestamp_ms</definition>
        <argsstring>(void)</argsstring>
        <name>get_timestamp_ms</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get current system timestamp in milliseconds. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Current timestamp </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/control/sonicator.cpp" line="83" column="24" bodyfile="src/modules/control/sonicator.cpp" bodystart="83" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="d2/db9/sonicator_8cpp_1ad64f181378aff681db9d4113aa0b5a7c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool is_timeout</definition>
        <argsstring>(uint32_t start_time, uint32_t timeout_ms)</argsstring>
        <name>is_timeout</name>
        <param>
          <type>uint32_t</type>
          <declname>start_time</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>timeout_ms</declname>
        </param>
        <briefdescription>
<para>Check if timeout period has elapsed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>start_time</parametername>
</parameternamelist>
<parameterdescription>
<para>Start timestamp </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout_ms</parametername>
</parameternamelist>
<parameterdescription>
<para>Timeout period in milliseconds <linebreak/>
 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if timeout elapsed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/control/sonicator.cpp" line="93" column="20" bodyfile="src/modules/control/sonicator.cpp" bodystart="93" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="d2/db9/sonicator_8cpp_1ab8a2aa3f7760758e71971579d8cacaad" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t clamp_amplitude</definition>
        <argsstring>(uint8_t amplitude)</argsstring>
        <name>clamp_amplitude</name>
        <param>
          <type>uint8_t</type>
          <declname>amplitude</declname>
        </param>
        <briefdescription>
<para>Clamp amplitude to valid range (20-100%) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>amplitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Input amplitude </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Clamped amplitude </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/control/sonicator.cpp" line="102" column="23" bodyfile="src/modules/control/sonicator.cpp" bodystart="102" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="d2/db9/sonicator_8cpp_1a0e114d879aa3d9d4769514bf9552d4b5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t amplitude_to_pwm</definition>
        <argsstring>(uint8_t amplitude_percent)</argsstring>
        <name>amplitude_to_pwm</name>
        <param>
          <type>uint8_t</type>
          <declname>amplitude_percent</declname>
        </param>
        <briefdescription>
<para>Convert amplitude percentage to PWM duty cycle. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>amplitude_percent</parametername>
</parameternamelist>
<parameterdescription>
<para>Amplitude (20-100%) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>PWM value (0-255) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/control/sonicator.cpp" line="117" column="23" bodyfile="src/modules/control/sonicator.cpp" bodystart="117" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="d2/db9/sonicator_8cpp_1ac63cfc1531dfd81f9b26907f6cfca3f3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void hal_gpio_write_safe</definition>
        <argsstring>(uint8_t pin, bool state)</argsstring>
        <name>hal_gpio_write_safe</name>
        <param>
          <type>uint8_t</type>
          <declname>pin</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Write GPIO pin with simulation mode support. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin identifier <linebreak/>
 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin state (true=HIGH, false=LOW) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/control/sonicator.cpp" line="136" column="13" bodyfile="src/modules/control/sonicator.cpp" bodystart="136" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="d2/db9/sonicator_8cpp_1a44f746b3b6005ab7712fa07bbabce3b5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool hal_gpio_read_safe</definition>
        <argsstring>(uint8_t pin)</argsstring>
        <name>hal_gpio_read_safe</name>
        <param>
          <type>uint8_t</type>
          <declname>pin</declname>
        </param>
        <briefdescription>
<para>Read GPIO pin with simulation mode support. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin identifier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pin state (true=HIGH, false=LOW) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/control/sonicator.cpp" line="148" column="13" bodyfile="src/modules/control/sonicator.cpp" bodystart="148" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="d2/db9/sonicator_8cpp_1aeee6577caee2ab0b3abebc40d69e3ecf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void hal_pwm_set_safe</definition>
        <argsstring>(uint8_t pin, uint8_t duty_cycle)</argsstring>
        <name>hal_pwm_set_safe</name>
        <param>
          <type>uint8_t</type>
          <declname>pin</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>duty_cycle</declname>
        </param>
        <briefdescription>
<para>Set PWM duty cycle with simulation mode support. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pin</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM pin identifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>duty_cycle</parametername>
</parameternamelist>
<parameterdescription>
<para>Duty cycle (0-255) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/control/sonicator.cpp" line="165" column="13" bodyfile="src/modules/control/sonicator.cpp" bodystart="165" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="d2/db9/sonicator_8cpp_1a0970e247ed7903117ae0390646f38772" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>static uint16_t hal_adc_read_safe</definition>
        <argsstring>(adc_channel_t channel)</argsstring>
        <name>hal_adc_read_safe</name>
        <param>
          <type><ref refid="d7/d19/adc_8h_1aafc4060027875f8fe46242b0656d7814" kindref="member">adc_channel_t</ref></type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Read ADC channel with simulation mode support. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>ADC channel </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ADC value (0-1023) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/control/sonicator.cpp" line="178" column="17" bodyfile="src/modules/control/sonicator.cpp" bodystart="178" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="d2/db9/sonicator_8cpp_1ada89ba9b127e4beefebcf0437c3d3706" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void update_hardware_outputs</definition>
        <argsstring>(void)</argsstring>
        <name>update_hardware_outputs</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Update hardware outputs based on current state. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/control/sonicator.cpp" line="197" column="13" bodyfile="src/modules/control/sonicator.cpp" bodystart="197" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="d2/db9/sonicator_8cpp_1aef16074da149c14e5667730099c3cd1e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void read_hardware_inputs</definition>
        <argsstring>(void)</argsstring>
        <name>read_hardware_inputs</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Read hardware inputs and update status. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/control/sonicator.cpp" line="234" column="13" bodyfile="src/modules/control/sonicator.cpp" bodystart="234" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="d2/db9/sonicator_8cpp_1a3e5dff7d739c31be62ed6a2517a3101d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="de/d13/sonicator__control_8h_1a361c37dbeedf89f2fe09845eab7f0a99" kindref="member">sonicator_fault_t</ref></type>
        <definition>static sonicator_fault_t check_fault_conditions</definition>
        <argsstring>(void)</argsstring>
        <name>check_fault_conditions</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Check for fault conditions. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Active fault mask </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/control/sonicator.cpp" line="260" column="26" bodyfile="src/modules/control/sonicator.cpp" bodystart="260" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="d2/db9/sonicator_8cpp_1a98449ff464a0585638878fb00728a7fd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void handle_fault_conditions</definition>
        <argsstring>(sonicator_fault_t faults)</argsstring>
        <name>handle_fault_conditions</name>
        <param>
          <type><ref refid="de/d13/sonicator__control_8h_1a361c37dbeedf89f2fe09845eab7f0a99" kindref="member">sonicator_fault_t</ref></type>
          <declname>faults</declname>
        </param>
        <briefdescription>
<para>Handle fault detection and emergency stop. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>faults</parametername>
</parameternamelist>
<parameterdescription>
<para>Active fault conditions </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/control/sonicator.cpp" line="302" column="13" bodyfile="src/modules/control/sonicator.cpp" bodystart="302" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="d2/db9/sonicator_8cpp_1a5899c8af8472545d64087e08378b2a29" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void process_state_machine</definition>
        <argsstring>(void)</argsstring>
        <name>process_state_machine</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Process state machine transitions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/control/sonicator.cpp" line="330" column="13" bodyfile="src/modules/control/sonicator.cpp" bodystart="330" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="d2/db9/sonicator_8cpp_1ac88614577067020f420441ba689e7241" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sonicator_begin</definition>
        <argsstring>(void)</argsstring>
        <name>sonicator_begin</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize sonicator control system. </para>
        </briefdescription>
        <detaileddescription>
<para>Sets up state machine, HAL interfaces, and safety systems. Must be called before any other sonicator control functions.</para>
<para><simplesect kind="return"><para>true if initialization successful, false on error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/control/sonicator.cpp" line="422" column="6" bodyfile="src/modules/control/sonicator.cpp" bodystart="422" bodyend="447"/>
      </memberdef>
      <memberdef kind="function" id="d2/db9/sonicator_8cpp_1aab49fb783e216647f53db17fbb6b62b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sonicator_start</definition>
        <argsstring>(void)</argsstring>
        <name>sonicator_start</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Start sonicator operation. </para>
        </briefdescription>
        <detaileddescription>
<para>Commands sonicator to start with current amplitude setting. State transition: IDLE → STARTING → RUNNING</para>
<para><simplesect kind="return"><para>true if start command accepted, false if unable to start </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/control/sonicator.cpp" line="449" column="6" bodyfile="src/modules/control/sonicator.cpp" bodystart="449" bodyend="463"/>
      </memberdef>
      <memberdef kind="function" id="d2/db9/sonicator_8cpp_1a4c28efedf324a8f71669e203de81ca47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sonicator_stop</definition>
        <argsstring>(void)</argsstring>
        <name>sonicator_stop</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Stop sonicator operation. </para>
        </briefdescription>
        <detaileddescription>
<para>Commands sonicator to stop gracefully. State transition: RUNNING → STOPPING → IDLE</para>
<para><simplesect kind="return"><para>true if stop command accepted, false if already stopped </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/control/sonicator.cpp" line="465" column="6" bodyfile="src/modules/control/sonicator.cpp" bodystart="465" bodyend="479"/>
      </memberdef>
      <memberdef kind="function" id="d2/db9/sonicator_8cpp_1ad48d366d35d3f9fc640589b2b5623aa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sonicator_set_amplitude</definition>
        <argsstring>(uint8_t amplitude_percent)</argsstring>
        <name>sonicator_set_amplitude</name>
        <param>
          <type>uint8_t</type>
          <declname>amplitude_percent</declname>
        </param>
        <briefdescription>
<para>Set sonicator amplitude. </para>
        </briefdescription>
        <detaileddescription>
<para>Sets amplitude setpoint for sonicator operation. Valid range: 20-100% (CT2000 specification)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>amplitude_percent</parametername>
</parameternamelist>
<parameterdescription>
<para>Amplitude setting (20-100%) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if amplitude set successfully, false if out of range </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/control/sonicator.cpp" line="481" column="6" bodyfile="src/modules/control/sonicator.cpp" bodystart="481" bodyend="490"/>
      </memberdef>
      <memberdef kind="function" id="d2/db9/sonicator_8cpp_1a21c76fda64cb8f4ddaf2f55f3567ec5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sonicator_reset_overload</definition>
        <argsstring>(void)</argsstring>
        <name>sonicator_reset_overload</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Reset overload condition. </para>
        </briefdescription>
        <detaileddescription>
<para>Sends reset pulse to clear overload fault condition. Only effective when sonicator is in FAULT state due to overload.</para>
<para><simplesect kind="return"><para>true if reset command sent, false if not applicable </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/control/sonicator.cpp" line="492" column="6" bodyfile="src/modules/control/sonicator.cpp" bodystart="492" bodyend="510"/>
      </memberdef>
      <memberdef kind="function" id="d2/db9/sonicator_8cpp_1a626ecb2d4d66e32401478259cfe3595f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sonicator_emergency_stop</definition>
        <argsstring>(void)</argsstring>
        <name>sonicator_emergency_stop</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Emergency stop (immediate) </para>
        </briefdescription>
        <detaileddescription>
<para>Immediately stops sonicator regardless of current state. Used for safety-critical situations.</para>
<para><simplesect kind="return"><para>true always (cannot fail) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/control/sonicator.cpp" line="512" column="6" bodyfile="src/modules/control/sonicator.cpp" bodystart="512" bodyend="532"/>
      </memberdef>
      <memberdef kind="function" id="d2/db9/sonicator_8cpp_1adfd3a8b6450a1a09bf17d4865c32569c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="de/d13/sonicator__control_8h_1ad0aeab8703f3a1439806186cba759315" kindref="member">sonicator_state_t</ref></type>
        <definition>sonicator_state_t sonicator_update</definition>
        <argsstring>(void)</argsstring>
        <name>sonicator_update</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Main control update function. </para>
        </briefdescription>
        <detaileddescription>
<para><bold>CRITICAL</bold>: Must be called at 1kHz (every 1ms) from main loop. Handles state machine transitions, safety monitoring, and telemetry updates.</para>
<para>Non-blocking execution guaranteed &lt;100μs typical.</para>
<para><simplesect kind="return"><para>Current sonicator state after update </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/control/sonicator.cpp" line="534" column="19" bodyfile="src/modules/control/sonicator.cpp" bodystart="534" bodyend="562"/>
      </memberdef>
      <memberdef kind="function" id="d2/db9/sonicator_8cpp_1a1ecfcd93a4b2bd32c9cab9f359b831ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="df/d70/structsonicator__state__control__t" kindref="compound">sonicator_state_control_t</ref> *</type>
        <definition>const sonicator_state_control_t * sonicator_get_status</definition>
        <argsstring>(void)</argsstring>
        <name>sonicator_get_status</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get current sonicator status. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns complete sonicator status structure for MODBUS or diagnostics. Safe to call from any context.</para>
<para><simplesect kind="return"><para>Pointer to current status structure (read-only) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/control/sonicator.cpp" line="564" column="33" bodyfile="src/modules/control/sonicator.cpp" bodystart="564" bodyend="566"/>
      </memberdef>
      <memberdef kind="function" id="d2/db9/sonicator_8cpp_1abe828539c1f97df3497b972c3c72c75f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * sonicator_state_to_string</definition>
        <argsstring>(sonicator_state_t state)</argsstring>
        <name>sonicator_state_to_string</name>
        <param>
          <type><ref refid="de/d13/sonicator__control_8h_1ad0aeab8703f3a1439806186cba759315" kindref="member">sonicator_state_t</ref></type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Get current state as string (for debugging) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>State to convert </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>String representation of state </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/control/sonicator.cpp" line="568" column="12" bodyfile="src/modules/control/sonicator.cpp" bodystart="568" bodyend="578"/>
      </memberdef>
      <memberdef kind="function" id="d2/db9/sonicator_8cpp_1a2309ace8e76b3132b8b2f0e7d0df9956" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sonicator_is_safe</definition>
        <argsstring>(void)</argsstring>
        <name>sonicator_is_safe</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Check if sonicator is in safe state. </para>
        </briefdescription>
        <detaileddescription>
<para>Verifies all safety conditions are met:<itemizedlist>
<listitem><para>No active faults</para>
</listitem><listitem><para>Watchdog not expired</para>
</listitem><listitem><para>Communication active</para>
</listitem><listitem><para>Hardware responding</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="return"><para>true if safe, false if safety concern exists </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/control/sonicator.cpp" line="580" column="6" bodyfile="src/modules/control/sonicator.cpp" bodystart="580" bodyend="594"/>
      </memberdef>
      <memberdef kind="function" id="d2/db9/sonicator_8cpp_1a85b84eadaf4c625391673e214901144f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sonicator_reset_statistics</definition>
        <argsstring>(void)</argsstring>
        <name>sonicator_reset_statistics</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Reset all statistics and counters. </para>
        </briefdescription>
        <detaileddescription>
<para>Clears runtime counters, fault counts, and statistics. Does not affect current operational state. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/control/sonicator.cpp" line="596" column="6" bodyfile="src/modules/control/sonicator.cpp" bodystart="596" bodyend="609"/>
      </memberdef>
      <memberdef kind="function" id="d2/db9/sonicator_8cpp_1a4519e53de39614ddb883a4c2db06ea19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sonicator_force_state</definition>
        <argsstring>(sonicator_state_t new_state)</argsstring>
        <name>sonicator_force_state</name>
        <param>
          <type><ref refid="de/d13/sonicator__control_8h_1ad0aeab8703f3a1439806186cba759315" kindref="member">sonicator_state_t</ref></type>
          <declname>new_state</declname>
        </param>
        <briefdescription>
<para>Force state transition (testing only) </para>
        </briefdescription>
        <detaileddescription>
<para><bold>WARNING</bold>: Bypasses safety checks. Use only for unit testing.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>new_state</parametername>
</parameternamelist>
<parameterdescription>
<para>Target state </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if transition completed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/control/sonicator.cpp" line="615" column="6" bodyfile="src/modules/control/sonicator.cpp" bodystart="615" bodyend="627"/>
      </memberdef>
      <memberdef kind="function" id="d2/db9/sonicator_8cpp_1a79b77d91a6416dd0447f9c6c9741ec36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sonicator_inject_fault</definition>
        <argsstring>(sonicator_fault_t fault_mask)</argsstring>
        <name>sonicator_inject_fault</name>
        <param>
          <type><ref refid="de/d13/sonicator__control_8h_1a361c37dbeedf89f2fe09845eab7f0a99" kindref="member">sonicator_fault_t</ref></type>
          <declname>fault_mask</declname>
        </param>
        <briefdescription>
<para>Inject fault condition (testing only) </para>
        </briefdescription>
        <detaileddescription>
<para><bold>WARNING</bold>: For testing only. Injects artificial fault condition.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fault_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Fault condition to inject </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if fault injected </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/control/sonicator.cpp" line="629" column="6" bodyfile="src/modules/control/sonicator.cpp" bodystart="629" bodyend="637"/>
      </memberdef>
      <memberdef kind="function" id="d2/db9/sonicator_8cpp_1abe9ba511a647d9236e12897ce8cf7271" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sonicator_set_simulation_mode</definition>
        <argsstring>(bool enable)</argsstring>
        <name>sonicator_set_simulation_mode</name>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable/disable simulation mode. </para>
        </briefdescription>
        <detaileddescription>
<para>When enabled, bypasses HAL calls for unit testing.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>enable</parametername>
</parameternamelist>
<parameterdescription>
<para>true to enable simulation, false for normal operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/control/sonicator.cpp" line="639" column="6" bodyfile="src/modules/control/sonicator.cpp" bodystart="639" bodyend="642"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Single Sonicator Control Implementation for Epic 1 Story 1.4. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Cannasol Technologies <linebreak/>
 </para>
</simplesect>
<simplesect kind="date"><para>2025-09-12 </para>
</simplesect>
<simplesect kind="version"><para>1.0.0</para>
</simplesect>
Implementation of single sonicator control logic with state machine, safety monitoring, and HAL integration. Designed for Sonicator 4 (zero-based ID 3) per pin matrix configuration.</para>
<para>Features:<itemizedlist>
<listitem><para>Non-blocking state machine for 1kHz execution</para>
</listitem><listitem><para>Hardware abstraction via HAL interfaces <linebreak/>
</para>
</listitem><listitem><para>Safety monitoring with fault detection</para>
</listitem><listitem><para>MODBUS register integration ready</para>
</listitem><listitem><para>Comprehensive error handling and recovery </para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="de/d13/sonicator__control_8h" kindref="compound">sonicator_control.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="db/d16/config_8h" kindref="compound">config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d6/d7c/gpio_8h" kindref="compound">modules/hal/gpio.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d6/db9/pwm_8h" kindref="compound">modules/hal/pwm.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d7/d19/adc_8h" kindref="compound">modules/hal/adc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Arduino.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>For<sp/>millis()<sp/>timing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>For<sp/>memset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>COMPILE-TIME<sp/>CONFIGURATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Enable<sp/>simulation<sp/>mode<sp/>for<sp/>unit<sp/>testing<sp/>(bypasses<sp/>HAL<sp/>calls)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SONICATOR_SIMULATION_MODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SONICATOR_SIMULATION_MODE<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Debug<sp/>logging<sp/>(only<sp/>in<sp/>DEBUG<sp/>builds)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_MODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SONICATOR_LOG(msg)<sp/>Serial.println(msg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SONICATOR_LOG(msg)<sp/>((void)0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>STATIC<sp/>VARIABLES<sp/>(single<sp/>sonicator<sp/>instance)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="df/d70/structsonicator__state__control__t" kindref="compound">sonicator_state_control_t</ref><sp/><ref refid="d2/db9/sonicator_8cpp_1a2bc3fad78fedc5ae0e007a5cc4485108" kindref="member">g_sonicator</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/d13/sonicator__control_8h_1ad0aeab8703f3a1439806186cba759315a02f13d1f0ad8e9fc52f93cf9c25ad0cf" kindref="member">SONICATOR_STATE_UNKNOWN</ref>,<sp/><sp/></highlight><highlight class="comment">//<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/d13/sonicator__control_8h_1ad0aeab8703f3a1439806186cba759315a02f13d1f0ad8e9fc52f93cf9c25ad0cf" kindref="member">SONICATOR_STATE_UNKNOWN</ref>,<sp/><sp/></highlight><highlight class="comment">//<sp/>previous_state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>state_entry_time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/d13/sonicator__control_8h_1abe06b5505cf15123b31cf8b029b59679" kindref="member">SONICATOR_MIN_AMPLITUDE_PERCENT</ref>,<sp/></highlight><highlight class="comment">//<sp/>amplitude_percent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>start_requested</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stop_requested</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset_requested</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is_running</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>overload_active</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>frequency_locked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>0.0f,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>power_watts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>frequency_hz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/d13/sonicator__control_8h_1a361c37dbeedf89f2fe09845eab7f0a99a45f67c744f0a84ef961991bbbcee8cb7" kindref="member">SONICATOR_FAULT_NONE</ref>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>active_faults</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fault_count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>last_fault_time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>last_update_time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>watchdog_last_reset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>safety_override</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>start_count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>total_runtime_ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>last_start_time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/db9/sonicator_8cpp_1ac1fd48a035e83d4c49c15569676b3428" kindref="member">g_simulation_mode</ref><sp/>=<sp/><ref refid="d2/db9/sonicator_8cpp_1a0b7077f739992ab6c25eb7d02c0899c6" kindref="member">SONICATOR_SIMULATION_MODE</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/db9/sonicator_8cpp_1ae51dbc7e8f836d942c158d75aa6e345b" kindref="member">g_initialized</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/>UTILITY<sp/>FUNCTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="d2/db9/sonicator_8cpp_1ab73283b0ecebb62fc40528dd0117b5fe" kindref="member">get_timestamp_ms</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>millis();</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/db9/sonicator_8cpp_1ad64f181378aff681db9d4113aa0b5a7c" kindref="member">is_timeout</ref>(uint32_t<sp/>start_time,<sp/>uint32_t<sp/>timeout_ms)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="d2/db9/sonicator_8cpp_1ab73283b0ecebb62fc40528dd0117b5fe" kindref="member">get_timestamp_ms</ref>()<sp/>-<sp/>start_time)<sp/>&gt;=<sp/>timeout_ms;</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="d2/db9/sonicator_8cpp_1ab8a2aa3f7760758e71971579d8cacaad" kindref="member">clamp_amplitude</ref>(uint8_t<sp/>amplitude)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(amplitude<sp/>&lt;<sp/><ref refid="de/d13/sonicator__control_8h_1abe06b5505cf15123b31cf8b029b59679" kindref="member">SONICATOR_MIN_AMPLITUDE_PERCENT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d13/sonicator__control_8h_1abe06b5505cf15123b31cf8b029b59679" kindref="member">SONICATOR_MIN_AMPLITUDE_PERCENT</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(amplitude<sp/>&gt;<sp/><ref refid="de/d13/sonicator__control_8h_1a9266e0128c993063b7b3aac98faf4e9b" kindref="member">SONICATOR_MAX_AMPLITUDE_PERCENT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d13/sonicator__control_8h_1a9266e0128c993063b7b3aac98faf4e9b" kindref="member">SONICATOR_MAX_AMPLITUDE_PERCENT</ref>;<sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>amplitude;</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="d2/db9/sonicator_8cpp_1a0e114d879aa3d9d4769514bf9552d4b5" kindref="member">amplitude_to_pwm</ref>(uint8_t<sp/>amplitude_percent)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Scale<sp/>20-100%<sp/>to<sp/>0-255<sp/>PWM<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PWM<sp/>=<sp/>(amplitude<sp/>-<sp/>20)<sp/>*<sp/>255<sp/>/<sp/>(100<sp/>-<sp/>20)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(amplitude_percent<sp/>&lt;<sp/><ref refid="de/d13/sonicator__control_8h_1abe06b5505cf15123b31cf8b029b59679" kindref="member">SONICATOR_MIN_AMPLITUDE_PERCENT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((amplitude_percent<sp/>-<sp/><ref refid="de/d13/sonicator__control_8h_1abe06b5505cf15123b31cf8b029b59679" kindref="member">SONICATOR_MIN_AMPLITUDE_PERCENT</ref>)<sp/>*<sp/>255)<sp/>/<sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="de/d13/sonicator__control_8h_1a9266e0128c993063b7b3aac98faf4e9b" kindref="member">SONICATOR_MAX_AMPLITUDE_PERCENT</ref><sp/>-<sp/><ref refid="de/d13/sonicator__control_8h_1abe06b5505cf15123b31cf8b029b59679" kindref="member">SONICATOR_MIN_AMPLITUDE_PERCENT</ref>);</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">//<sp/>HAL<sp/>INTERFACE<sp/>WRAPPERS<sp/>(with<sp/>simulation<sp/>mode<sp/>support)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d2/db9/sonicator_8cpp_1ac63cfc1531dfd81f9b26907f6cfca3f3" kindref="member">hal_gpio_write_safe</ref>(uint8_t<sp/>pin,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>state)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d2/db9/sonicator_8cpp_1ac1fd48a035e83d4c49c15569676b3428" kindref="member">g_simulation_mode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/d31/gpio_8cpp_1a3356861ebced78ebc885c06a9abad081" kindref="member">gpio_write_pin</ref>(pin,<sp/>state<sp/>?<sp/><ref refid="d6/d7c/gpio_8h_1a2ff5468d5ab752db6fa1fb95363392a6ab05c5a854da4602143b6bd6096d86c4d" kindref="member">GPIO_HIGH</ref><sp/>:<sp/><ref refid="d6/d7c/gpio_8h_1a2ff5468d5ab752db6fa1fb95363392a6ad41cdd897d9b8714ef45ed6e9eba0dfa" kindref="member">GPIO_LOW</ref>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/db9/sonicator_8cpp_1a9b3ce32f980a7abc4dfdbe110f665c8d" kindref="member">SONICATOR_LOG</ref>(state<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;GPIO<sp/>HIGH&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;GPIO<sp/>LOW&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/db9/sonicator_8cpp_1a44f746b3b6005ab7712fa07bbabce3b5" kindref="member">hal_gpio_read_safe</ref>(uint8_t<sp/>pin)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d2/db9/sonicator_8cpp_1ac1fd48a035e83d4c49c15569676b3428" kindref="member">g_simulation_mode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>simulation<sp/>mode,<sp/>return<sp/>safe<sp/>defaults</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pin<sp/>==<sp/><ref refid="dd/d28/group___sonicator4_1ga786fd798d58acee8c64231ceee026427" kindref="member">SON4_OVERLOAD_PIN</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>No<sp/>overload</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pin<sp/>==<sp/><ref refid="dd/d28/group___sonicator4_1gacd39ea816c2641f2f23d9df198bf018d" kindref="member">SON4_FREQ_LOCK_PIN</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Frequency<sp/>locked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/d7c/gpio_8h_1a2ff5468d5ab752db6fa1fb95363392a6" kindref="member">gpio_state_t</ref><sp/>state;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/d31/gpio_8cpp_1af23d343920eacb1d974f8d9bed1c2fec" kindref="member">gpio_read_pin</ref>(pin,<sp/>&amp;state);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(state<sp/>==<sp/><ref refid="d6/d7c/gpio_8h_1a2ff5468d5ab752db6fa1fb95363392a6ab05c5a854da4602143b6bd6096d86c4d" kindref="member">GPIO_HIGH</ref>);</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d2/db9/sonicator_8cpp_1aeee6577caee2ab0b3abebc40d69e3ecf" kindref="member">hal_pwm_set_safe</ref>(uint8_t<sp/>pin,<sp/>uint8_t<sp/>duty_cycle)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)pin;<sp/></highlight><highlight class="comment">//<sp/>Suppress<sp/>unused<sp/>parameter<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d2/db9/sonicator_8cpp_1ac1fd48a035e83d4c49c15569676b3428" kindref="member">g_simulation_mode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/d84/pwm_8cpp_1a5d04f0bab99a934ca262108b3cbccea4" kindref="member">pwm_set_duty_cycle</ref>(<ref refid="d6/db9/pwm_8h_1a5113beb40c2e296de6af562228064afcafe8a051665f6462aa7dcf27f651ad6d9" kindref="member">PWM_CHANNEL_AMPLITUDE</ref>,<sp/>duty_cycle);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/db9/sonicator_8cpp_1a9b3ce32f980a7abc4dfdbe110f665c8d" kindref="member">SONICATOR_LOG</ref>(</highlight><highlight class="stringliteral">&quot;PWM<sp/>SET&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="d2/db9/sonicator_8cpp_1a0970e247ed7903117ae0390646f38772" kindref="member">hal_adc_read_safe</ref>(<ref refid="d7/d19/adc_8h_1aafc4060027875f8fe46242b0656d7814" kindref="member">adc_channel_t</ref><sp/>channel)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d2/db9/sonicator_8cpp_1ac1fd48a035e83d4c49c15569676b3428" kindref="member">g_simulation_mode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>simulated<sp/>power<sp/>reading<sp/>(500W)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint16_t)((500UL<sp/>*<sp/>1023UL)<sp/>/<sp/>2000UL);<sp/></highlight><highlight class="comment">//<sp/>Scale<sp/>to<sp/>ADC<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>value;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="db/d33/adc_8cpp_1a97f090840a901f0e030625d8e6d3a35c" kindref="member">adc_read_channel</ref>(channel,<sp/>&amp;value)<sp/>==<sp/><ref refid="d7/d19/adc_8h_1a2e870a0e6f5efcac7b66ad2ede52ee52a58c6c49250945a68ba73bfe0428bc8b9" kindref="member">ADC_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment">//<sp/>HARDWARE<sp/>INTERFACE<sp/>FUNCTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d2/db9/sonicator_8cpp_1ada89ba9b127e4beefebcf0437c3d3706" kindref="member">update_hardware_outputs</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/d70/structsonicator__state__control__t" kindref="compound">sonicator_state_control_t</ref>*<sp/>ctrl<sp/>=<sp/>&amp;<ref refid="d2/db9/sonicator_8cpp_1a2bc3fad78fedc5ae0e007a5cc4485108" kindref="member">g_sonicator</ref>;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>START<sp/>signal<sp/>(PC0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>start_signal<sp/>=<sp/>(ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a6cd8bcb50e1b5c930526cb95e0a268ce" kindref="member">state</ref><sp/>==<sp/><ref refid="de/d13/sonicator__control_8h_1ad0aeab8703f3a1439806186cba759315aefd4187011c854e789baa073995f0def" kindref="member">SONICATOR_STATE_RUNNING</ref><sp/>||</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a6cd8bcb50e1b5c930526cb95e0a268ce" kindref="member">state</ref><sp/>==<sp/><ref refid="de/d13/sonicator__control_8h_1ad0aeab8703f3a1439806186cba759315a34a68840cf8e7502193a12370a443e01" kindref="member">SONICATOR_STATE_STARTING</ref>);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/db9/sonicator_8cpp_1ac63cfc1531dfd81f9b26907f6cfca3f3" kindref="member">hal_gpio_write_safe</ref>(<ref refid="dd/d28/group___sonicator4_1ga984840f9d3a5e89fbaedc95dbb27d454" kindref="member">SON4_START_PIN</ref>,<sp/>start_signal);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>amplitude<sp/>PWM<sp/>(PD7)<sp/>-<sp/>shared<sp/>for<sp/>all<sp/>sonicators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>pwm_value<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a6cd8bcb50e1b5c930526cb95e0a268ce" kindref="member">state</ref><sp/>==<sp/><ref refid="de/d13/sonicator__control_8h_1ad0aeab8703f3a1439806186cba759315aefd4187011c854e789baa073995f0def" kindref="member">SONICATOR_STATE_RUNNING</ref>)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwm_value<sp/>=<sp/><ref refid="d2/db9/sonicator_8cpp_1a0e114d879aa3d9d4769514bf9552d4b5" kindref="member">amplitude_to_pwm</ref>(ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1afcd4300c11230d9f9b052e12e3f2e112" kindref="member">amplitude_percent</ref>);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/db9/sonicator_8cpp_1aeee6577caee2ab0b3abebc40d69e3ecf" kindref="member">hal_pwm_set_safe</ref>(<ref refid="da/d6a/group___p_w_m_control_1ga0aa83389edb245f5b1ae129e07f474f7" kindref="member">PWM_AMPLITUDE_CONTROL_PIN</ref>,<sp/>pwm_value);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>reset<sp/>pulse<sp/>timing<sp/>(PC1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>reset_pulse_start<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reset_pulse_active<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a564ae0b4b90fc1410ad2ca17b78419ea" kindref="member">reset_requested</ref><sp/>&amp;&amp;<sp/>!reset_pulse_active)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/db9/sonicator_8cpp_1ac63cfc1531dfd81f9b26907f6cfca3f3" kindref="member">hal_gpio_write_safe</ref>(<ref refid="dd/d28/group___sonicator4_1gaffd40dfb916a5b6133e06da57654bd0a" kindref="member">SON4_RESET_PIN</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reset_pulse_start<sp/>=<sp/><ref refid="d2/db9/sonicator_8cpp_1ab73283b0ecebb62fc40528dd0117b5fe" kindref="member">get_timestamp_ms</ref>();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reset_pulse_active<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a564ae0b4b90fc1410ad2ca17b78419ea" kindref="member">reset_requested</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/db9/sonicator_8cpp_1a9b3ce32f980a7abc4dfdbe110f665c8d" kindref="member">SONICATOR_LOG</ref>(</highlight><highlight class="stringliteral">&quot;Reset<sp/>pulse<sp/>started&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reset_pulse_active<sp/>&amp;&amp;<sp/><ref refid="d2/db9/sonicator_8cpp_1ad64f181378aff681db9d4113aa0b5a7c" kindref="member">is_timeout</ref>(reset_pulse_start,<sp/><ref refid="de/d13/sonicator__control_8h_1a91c49141120b41b4039582f54a59d839" kindref="member">SONICATOR_RESET_PULSE_MS</ref>))<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/db9/sonicator_8cpp_1ac63cfc1531dfd81f9b26907f6cfca3f3" kindref="member">hal_gpio_write_safe</ref>(<ref refid="dd/d28/group___sonicator4_1gaffd40dfb916a5b6133e06da57654bd0a" kindref="member">SON4_RESET_PIN</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reset_pulse_active<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/db9/sonicator_8cpp_1a9b3ce32f980a7abc4dfdbe110f665c8d" kindref="member">SONICATOR_LOG</ref>(</highlight><highlight class="stringliteral">&quot;Reset<sp/>pulse<sp/>ended&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d2/db9/sonicator_8cpp_1aef16074da149c14e5667730099c3cd1e" kindref="member">read_hardware_inputs</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/d70/structsonicator__state__control__t" kindref="compound">sonicator_state_control_t</ref>*<sp/>ctrl<sp/>=<sp/>&amp;<ref refid="d2/db9/sonicator_8cpp_1a2bc3fad78fedc5ae0e007a5cc4485108" kindref="member">g_sonicator</ref>;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>overload<sp/>status<sp/>(PD3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a97a7e3df02d7732869f5bd7ce6bbe263" kindref="member">overload_active</ref><sp/>=<sp/><ref refid="d2/db9/sonicator_8cpp_1a44f746b3b6005ab7712fa07bbabce3b5" kindref="member">hal_gpio_read_safe</ref>(<ref refid="dd/d28/group___sonicator4_1ga786fd798d58acee8c64231ceee026427" kindref="member">SON4_OVERLOAD_PIN</ref>);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>frequency<sp/>lock<sp/>status<sp/>(PB4)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a3995a54ccc06cc04d3279b6cba29caae" kindref="member">frequency_locked</ref><sp/>=<sp/><ref refid="d2/db9/sonicator_8cpp_1a44f746b3b6005ab7712fa07bbabce3b5" kindref="member">hal_gpio_read_safe</ref>(<ref refid="dd/d28/group___sonicator4_1gacd39ea816c2641f2f23d9df198bf018d" kindref="member">SON4_FREQ_LOCK_PIN</ref>);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>power<sp/>measurement<sp/>(PA7)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>adc_value<sp/>=<sp/><ref refid="d2/db9/sonicator_8cpp_1a0970e247ed7903117ae0390646f38772" kindref="member">hal_adc_read_safe</ref>(<ref refid="d7/d19/adc_8h_1aafc4060027875f8fe46242b0656d7814ad6ef86ca1b448f220905d771f258586a" kindref="member">ADC_CHANNEL_7</ref>);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>ADC<sp/>to<sp/>watts:<sp/>ADC<sp/>range<sp/>0-1023<sp/>maps<sp/>to<sp/>0-2000W</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1abcaae5e9e93498e549afd71298e9096b" kindref="member">power_watts</ref><sp/>=<sp/>(float)(adc_value<sp/>*<sp/>2000)<sp/>/<sp/>1023.0f;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Frequency<sp/>measurement<sp/>(simplified<sp/>-<sp/>would<sp/>need<sp/>timer<sp/>capture<sp/>in<sp/>full<sp/>implementation)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a3995a54ccc06cc04d3279b6cba29caae" kindref="member">frequency_locked</ref>)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a3021ec989df15e775e6cd13891369875" kindref="member">frequency_hz</ref><sp/>=<sp/>20000;<sp/></highlight><highlight class="comment">//<sp/>Nominal<sp/>CT2000<sp/>frequency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a3021ec989df15e775e6cd13891369875" kindref="member">frequency_hz</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="de/d13/sonicator__control_8h_1a361c37dbeedf89f2fe09845eab7f0a99" kindref="member">sonicator_fault_t</ref><sp/><ref refid="d2/db9/sonicator_8cpp_1a3e5dff7d739c31be62ed6a2517a3101d" kindref="member">check_fault_conditions</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/d70/structsonicator__state__control__t" kindref="compound">sonicator_state_control_t</ref>*<sp/>ctrl<sp/>=<sp/>&amp;<ref refid="d2/db9/sonicator_8cpp_1a2bc3fad78fedc5ae0e007a5cc4485108" kindref="member">g_sonicator</ref>;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/d13/sonicator__control_8h_1a361c37dbeedf89f2fe09845eab7f0a99" kindref="member">sonicator_fault_t</ref><sp/>faults<sp/>=<sp/><ref refid="de/d13/sonicator__control_8h_1a361c37dbeedf89f2fe09845eab7f0a99a45f67c744f0a84ef961991bbbcee8cb7" kindref="member">SONICATOR_FAULT_NONE</ref>;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>now<sp/>=<sp/><ref refid="d2/db9/sonicator_8cpp_1ab73283b0ecebb62fc40528dd0117b5fe" kindref="member">get_timestamp_ms</ref>();</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>overload<sp/>condition<sp/>with<sp/>debouncing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>overload_detected_time<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>overload_debounce<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a97a7e3df02d7732869f5bd7ce6bbe263" kindref="member">overload_active</ref><sp/>&amp;&amp;<sp/>!overload_debounce)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>overload_detected_time<sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>overload_debounce<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a97a7e3df02d7732869f5bd7ce6bbe263" kindref="member">overload_active</ref>)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>overload_debounce<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(overload_debounce<sp/>&amp;&amp;<sp/><ref refid="d2/db9/sonicator_8cpp_1ad64f181378aff681db9d4113aa0b5a7c" kindref="member">is_timeout</ref>(overload_detected_time,<sp/><ref refid="de/d13/sonicator__control_8h_1aa1c769c234868a66d06b393acfbf20cb" kindref="member">SONICATOR_FAULT_DEBOUNCE_MS</ref>))<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>faults<sp/>=<sp/>(<ref refid="de/d13/sonicator__control_8h_1a361c37dbeedf89f2fe09845eab7f0a99" kindref="member">sonicator_fault_t</ref>)(faults<sp/>|<sp/><ref refid="de/d13/sonicator__control_8h_1a361c37dbeedf89f2fe09845eab7f0a99a73567def603bb6f8f77826552276d5ec" kindref="member">SONICATOR_FAULT_OVERLOAD</ref>);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>frequency<sp/>lock<sp/>loss<sp/>(only<sp/>when<sp/>running)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a6cd8bcb50e1b5c930526cb95e0a268ce" kindref="member">state</ref><sp/>==<sp/><ref refid="de/d13/sonicator__control_8h_1ad0aeab8703f3a1439806186cba759315aefd4187011c854e789baa073995f0def" kindref="member">SONICATOR_STATE_RUNNING</ref>)<sp/>&amp;&amp;<sp/>!ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a3995a54ccc06cc04d3279b6cba29caae" kindref="member">frequency_locked</ref>)<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>faults<sp/>=<sp/>(<ref refid="de/d13/sonicator__control_8h_1a361c37dbeedf89f2fe09845eab7f0a99" kindref="member">sonicator_fault_t</ref>)(faults<sp/>|<sp/><ref refid="de/d13/sonicator__control_8h_1a361c37dbeedf89f2fe09845eab7f0a99a5de4021b7d7257f7229804ea8c159aa8" kindref="member">SONICATOR_FAULT_FREQ_UNLOCK</ref>);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>communication<sp/>timeout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d2/db9/sonicator_8cpp_1ad64f181378aff681db9d4113aa0b5a7c" kindref="member">is_timeout</ref>(ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1aa7007812c1aa0b399b4e7624727b5e0d" kindref="member">last_update_time</ref>,<sp/><ref refid="de/d13/sonicator__control_8h_1a3a8bcea46ab85058d6fd1ad4c3c32ad4" kindref="member">SONICATOR_COMM_TIMEOUT_MS</ref>))<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>faults<sp/>=<sp/>(<ref refid="de/d13/sonicator__control_8h_1a361c37dbeedf89f2fe09845eab7f0a99" kindref="member">sonicator_fault_t</ref>)(faults<sp/>|<sp/><ref refid="de/d13/sonicator__control_8h_1a361c37dbeedf89f2fe09845eab7f0a99a6b2e009dc023f729b34c1387dd3ec373" kindref="member">SONICATOR_FAULT_COMM_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>watchdog<sp/>timeout<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d2/db9/sonicator_8cpp_1ad64f181378aff681db9d4113aa0b5a7c" kindref="member">is_timeout</ref>(ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a81faba2b646684d9911224bccf329353" kindref="member">watchdog_last_reset</ref>,<sp/><ref refid="de/d13/sonicator__control_8h_1aafedba2f7dd17703f2fee746b1096bcf" kindref="member">SONICATOR_WATCHDOG_TIMEOUT_MS</ref>))<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>faults<sp/>=<sp/>(<ref refid="de/d13/sonicator__control_8h_1a361c37dbeedf89f2fe09845eab7f0a99" kindref="member">sonicator_fault_t</ref>)(faults<sp/>|<sp/><ref refid="de/d13/sonicator__control_8h_1a361c37dbeedf89f2fe09845eab7f0a99ab5b14d7067e124bcf3c19b309db532e1" kindref="member">SONICATOR_FAULT_WATCHDOG</ref>);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>faults;</highlight></codeline>
<codeline lineno="296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d2/db9/sonicator_8cpp_1a98449ff464a0585638878fb00728a7fd" kindref="member">handle_fault_conditions</ref>(<ref refid="de/d13/sonicator__control_8h_1a361c37dbeedf89f2fe09845eab7f0a99" kindref="member">sonicator_fault_t</ref><sp/>faults)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/d70/structsonicator__state__control__t" kindref="compound">sonicator_state_control_t</ref>*<sp/>ctrl<sp/>=<sp/>&amp;<ref refid="d2/db9/sonicator_8cpp_1a2bc3fad78fedc5ae0e007a5cc4485108" kindref="member">g_sonicator</ref>;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(faults<sp/>!=<sp/><ref refid="de/d13/sonicator__control_8h_1a361c37dbeedf89f2fe09845eab7f0a99a45f67c744f0a84ef961991bbbcee8cb7" kindref="member">SONICATOR_FAULT_NONE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Emergency<sp/>stop<sp/>-<sp/>immediate<sp/>hardware<sp/>shutdown</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/db9/sonicator_8cpp_1ac63cfc1531dfd81f9b26907f6cfca3f3" kindref="member">hal_gpio_write_safe</ref>(<ref refid="dd/d28/group___sonicator4_1ga984840f9d3a5e89fbaedc95dbb27d454" kindref="member">SON4_START_PIN</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/db9/sonicator_8cpp_1aeee6577caee2ab0b3abebc40d69e3ecf" kindref="member">hal_pwm_set_safe</ref>(<ref refid="da/d6a/group___p_w_m_control_1ga0aa83389edb245f5b1ae129e07f474f7" kindref="member">PWM_AMPLITUDE_CONTROL_PIN</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>state<sp/>and<sp/>fault<sp/>tracking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a901de2eae303626f6398b04a41e1c0bf" kindref="member">previous_state</ref><sp/>=<sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a6cd8bcb50e1b5c930526cb95e0a268ce" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a6cd8bcb50e1b5c930526cb95e0a268ce" kindref="member">state</ref><sp/>=<sp/><ref refid="de/d13/sonicator__control_8h_1ad0aeab8703f3a1439806186cba759315a7ef335199557a3658616b70275094a47" kindref="member">SONICATOR_STATE_FAULT</ref>;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1ac9189d4a7addd0a1424450e59036e713" kindref="member">state_entry_time</ref><sp/>=<sp/><ref refid="d2/db9/sonicator_8cpp_1ab73283b0ecebb62fc40528dd0117b5fe" kindref="member">get_timestamp_ms</ref>();</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1aea26e6db5046274c9b121183c4d1abd8" kindref="member">active_faults</ref><sp/>=<sp/>faults;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a0faeb93a22f6239bd9ac1803cfda4ee9" kindref="member">fault_count</ref>++;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1ac810ff8433cec8225356eefabcdcf810" kindref="member">last_fault_time</ref><sp/>=<sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1ac9189d4a7addd0a1424450e59036e713" kindref="member">state_entry_time</ref>;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a0d5c51ab2346e7db197ae25fc7260907" kindref="member">is_running</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/db9/sonicator_8cpp_1a9b3ce32f980a7abc4dfdbe110f665c8d" kindref="member">SONICATOR_LOG</ref>(</highlight><highlight class="stringliteral">&quot;FAULT<sp/>DETECTED<sp/>-<sp/>Emergency<sp/>stop<sp/>activated&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="comment">//<sp/>STATE<sp/>MACHINE<sp/>IMPLEMENTATION<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d2/db9/sonicator_8cpp_1a5899c8af8472545d64087e08378b2a29" kindref="member">process_state_machine</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/d70/structsonicator__state__control__t" kindref="compound">sonicator_state_control_t</ref>*<sp/>ctrl<sp/>=<sp/>&amp;<ref refid="d2/db9/sonicator_8cpp_1a2bc3fad78fedc5ae0e007a5cc4485108" kindref="member">g_sonicator</ref>;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>now<sp/>=<sp/><ref refid="d2/db9/sonicator_8cpp_1ab73283b0ecebb62fc40528dd0117b5fe" kindref="member">get_timestamp_ms</ref>();</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>state_duration<sp/>=<sp/>now<sp/>-<sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1ac9189d4a7addd0a1424450e59036e713" kindref="member">state_entry_time</ref>;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a6cd8bcb50e1b5c930526cb95e0a268ce" kindref="member">state</ref>)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="de/d13/sonicator__control_8h_1ad0aeab8703f3a1439806186cba759315a8aaaacd92fec828be10c02ef2696f0b7" kindref="member">SONICATOR_STATE_IDLE</ref>:</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a0d5c51ab2346e7db197ae25fc7260907" kindref="member">is_running</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Transition:<sp/>IDLE<sp/>→<sp/>STARTING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1aa84df142871608374a7fa8c1896fe4b3" kindref="member">start_requested</ref><sp/>&amp;&amp;<sp/>(ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1aea26e6db5046274c9b121183c4d1abd8" kindref="member">active_faults</ref><sp/>==<sp/><ref refid="de/d13/sonicator__control_8h_1a361c37dbeedf89f2fe09845eab7f0a99a45f67c744f0a84ef961991bbbcee8cb7" kindref="member">SONICATOR_FAULT_NONE</ref>))<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a901de2eae303626f6398b04a41e1c0bf" kindref="member">previous_state</ref><sp/>=<sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a6cd8bcb50e1b5c930526cb95e0a268ce" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a6cd8bcb50e1b5c930526cb95e0a268ce" kindref="member">state</ref><sp/>=<sp/><ref refid="de/d13/sonicator__control_8h_1ad0aeab8703f3a1439806186cba759315a34a68840cf8e7502193a12370a443e01" kindref="member">SONICATOR_STATE_STARTING</ref>;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1ac9189d4a7addd0a1424450e59036e713" kindref="member">state_entry_time</ref><sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1aa84df142871608374a7fa8c1896fe4b3" kindref="member">start_requested</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/db9/sonicator_8cpp_1a9b3ce32f980a7abc4dfdbe110f665c8d" kindref="member">SONICATOR_LOG</ref>(</highlight><highlight class="stringliteral">&quot;State:<sp/>IDLE<sp/>-&gt;<sp/>STARTING&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="de/d13/sonicator__control_8h_1ad0aeab8703f3a1439806186cba759315a34a68840cf8e7502193a12370a443e01" kindref="member">SONICATOR_STATE_STARTING</ref>:</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a0d5c51ab2346e7db197ae25fc7260907" kindref="member">is_running</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Transition:<sp/>STARTING<sp/>→<sp/>RUNNING<sp/>(after<sp/>delay)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state_duration<sp/>&gt;=<sp/><ref refid="de/d13/sonicator__control_8h_1a73ff3fa20f363956206243467723cfdb" kindref="member">SONICATOR_START_DELAY_MS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a901de2eae303626f6398b04a41e1c0bf" kindref="member">previous_state</ref><sp/>=<sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a6cd8bcb50e1b5c930526cb95e0a268ce" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a6cd8bcb50e1b5c930526cb95e0a268ce" kindref="member">state</ref><sp/>=<sp/><ref refid="de/d13/sonicator__control_8h_1ad0aeab8703f3a1439806186cba759315aefd4187011c854e789baa073995f0def" kindref="member">SONICATOR_STATE_RUNNING</ref>;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1ac9189d4a7addd0a1424450e59036e713" kindref="member">state_entry_time</ref><sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a0d5c51ab2346e7db197ae25fc7260907" kindref="member">is_running</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a189d2cb7b5214386dead8021cbccdfa7" kindref="member">start_count</ref>++;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1aef9c8009b1353420849b57fd8629cf2c" kindref="member">last_start_time</ref><sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/db9/sonicator_8cpp_1a9b3ce32f980a7abc4dfdbe110f665c8d" kindref="member">SONICATOR_LOG</ref>(</highlight><highlight class="stringliteral">&quot;State:<sp/>STARTING<sp/>-&gt;<sp/>RUNNING&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="de/d13/sonicator__control_8h_1ad0aeab8703f3a1439806186cba759315aefd4187011c854e789baa073995f0def" kindref="member">SONICATOR_STATE_RUNNING</ref>:</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a0d5c51ab2346e7db197ae25fc7260907" kindref="member">is_running</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>runtime<sp/>statistics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>last_runtime_update<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(now<sp/>-<sp/>last_runtime_update<sp/>&gt;=<sp/>1000)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Update<sp/>every<sp/>second</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a9b3b5c28ba93ade6dd7a6b89ec2386d7" kindref="member">total_runtime_ms</ref><sp/>+=<sp/>(now<sp/>-<sp/>last_runtime_update);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_runtime_update<sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Transition:<sp/>RUNNING<sp/>→<sp/>STOPPING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1ab8ced15f04b13bb1d6a77a5afc2be801" kindref="member">stop_requested</ref>)<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a901de2eae303626f6398b04a41e1c0bf" kindref="member">previous_state</ref><sp/>=<sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a6cd8bcb50e1b5c930526cb95e0a268ce" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a6cd8bcb50e1b5c930526cb95e0a268ce" kindref="member">state</ref><sp/>=<sp/><ref refid="de/d13/sonicator__control_8h_1ad0aeab8703f3a1439806186cba759315a68fc7fb7e15c844aa2c6cda43bcc8d09" kindref="member">SONICATOR_STATE_STOPPING</ref>;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1ac9189d4a7addd0a1424450e59036e713" kindref="member">state_entry_time</ref><sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1ab8ced15f04b13bb1d6a77a5afc2be801" kindref="member">stop_requested</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/db9/sonicator_8cpp_1a9b3ce32f980a7abc4dfdbe110f665c8d" kindref="member">SONICATOR_LOG</ref>(</highlight><highlight class="stringliteral">&quot;State:<sp/>RUNNING<sp/>-&gt;<sp/>STOPPING&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="de/d13/sonicator__control_8h_1ad0aeab8703f3a1439806186cba759315a68fc7fb7e15c844aa2c6cda43bcc8d09" kindref="member">SONICATOR_STATE_STOPPING</ref>:</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a0d5c51ab2346e7db197ae25fc7260907" kindref="member">is_running</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Transition:<sp/>STOPPING<sp/>→<sp/>IDLE<sp/>(after<sp/>delay)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state_duration<sp/>&gt;=<sp/><ref refid="de/d13/sonicator__control_8h_1a0f1d094ebabfc54ecb3292163fbb97b7" kindref="member">SONICATOR_STOP_DELAY_MS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a901de2eae303626f6398b04a41e1c0bf" kindref="member">previous_state</ref><sp/>=<sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a6cd8bcb50e1b5c930526cb95e0a268ce" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a6cd8bcb50e1b5c930526cb95e0a268ce" kindref="member">state</ref><sp/>=<sp/><ref refid="de/d13/sonicator__control_8h_1ad0aeab8703f3a1439806186cba759315a8aaaacd92fec828be10c02ef2696f0b7" kindref="member">SONICATOR_STATE_IDLE</ref>;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1ac9189d4a7addd0a1424450e59036e713" kindref="member">state_entry_time</ref><sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/db9/sonicator_8cpp_1a9b3ce32f980a7abc4dfdbe110f665c8d" kindref="member">SONICATOR_LOG</ref>(</highlight><highlight class="stringliteral">&quot;State:<sp/>STOPPING<sp/>-&gt;<sp/>IDLE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="de/d13/sonicator__control_8h_1ad0aeab8703f3a1439806186cba759315a7ef335199557a3658616b70275094a47" kindref="member">SONICATOR_STATE_FAULT</ref>:</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a0d5c51ab2346e7db197ae25fc7260907" kindref="member">is_running</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Transition:<sp/>FAULT<sp/>→<sp/>IDLE<sp/>(when<sp/>faults<sp/>cleared)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1aea26e6db5046274c9b121183c4d1abd8" kindref="member">active_faults</ref><sp/>==<sp/><ref refid="de/d13/sonicator__control_8h_1a361c37dbeedf89f2fe09845eab7f0a99a45f67c744f0a84ef961991bbbcee8cb7" kindref="member">SONICATOR_FAULT_NONE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a901de2eae303626f6398b04a41e1c0bf" kindref="member">previous_state</ref><sp/>=<sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a6cd8bcb50e1b5c930526cb95e0a268ce" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a6cd8bcb50e1b5c930526cb95e0a268ce" kindref="member">state</ref><sp/>=<sp/><ref refid="de/d13/sonicator__control_8h_1ad0aeab8703f3a1439806186cba759315a8aaaacd92fec828be10c02ef2696f0b7" kindref="member">SONICATOR_STATE_IDLE</ref>;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1ac9189d4a7addd0a1424450e59036e713" kindref="member">state_entry_time</ref><sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/db9/sonicator_8cpp_1a9b3ce32f980a7abc4dfdbe110f665c8d" kindref="member">SONICATOR_LOG</ref>(</highlight><highlight class="stringliteral">&quot;State:<sp/>FAULT<sp/>-&gt;<sp/>IDLE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Unknown<sp/>state<sp/>-<sp/>go<sp/>to<sp/>fault</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a6cd8bcb50e1b5c930526cb95e0a268ce" kindref="member">state</ref><sp/>=<sp/><ref refid="de/d13/sonicator__control_8h_1ad0aeab8703f3a1439806186cba759315a7ef335199557a3658616b70275094a47" kindref="member">SONICATOR_STATE_FAULT</ref>;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1ac9189d4a7addd0a1424450e59036e713" kindref="member">state_entry_time</ref><sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1aea26e6db5046274c9b121183c4d1abd8" kindref="member">active_faults</ref><sp/>=<sp/>(<ref refid="de/d13/sonicator__control_8h_1a361c37dbeedf89f2fe09845eab7f0a99" kindref="member">sonicator_fault_t</ref>)(ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1aea26e6db5046274c9b121183c4d1abd8" kindref="member">active_faults</ref><sp/>|<sp/><ref refid="de/d13/sonicator__control_8h_1a361c37dbeedf89f2fe09845eab7f0a99a46b1755f047e81751b29ae6787e7d594" kindref="member">SONICATOR_FAULT_HARDWARE</ref>);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/db9/sonicator_8cpp_1a9b3ce32f980a7abc4dfdbe110f665c8d" kindref="member">SONICATOR_LOG</ref>(</highlight><highlight class="stringliteral">&quot;State:<sp/>UNKNOWN<sp/>-&gt;<sp/>FAULT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal">}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PUBLIC<sp/>API<sp/>IMPLEMENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/db9/sonicator_8cpp_1ac88614577067020f420441ba689e7241" kindref="member">sonicator_begin</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d2/db9/sonicator_8cpp_1ae51dbc7e8f836d942c158d75aa6e345b" kindref="member">g_initialized</ref>)<sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>control<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;<ref refid="d2/db9/sonicator_8cpp_1a2bc3fad78fedc5ae0e007a5cc4485108" kindref="member">g_sonicator</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d2/db9/sonicator_8cpp_1a2bc3fad78fedc5ae0e007a5cc4485108" kindref="member">g_sonicator</ref>));</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/db9/sonicator_8cpp_1a2bc3fad78fedc5ae0e007a5cc4485108" kindref="member">g_sonicator</ref>.state<sp/>=<sp/><ref refid="de/d13/sonicator__control_8h_1ad0aeab8703f3a1439806186cba759315a8aaaacd92fec828be10c02ef2696f0b7" kindref="member">SONICATOR_STATE_IDLE</ref>;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/db9/sonicator_8cpp_1a2bc3fad78fedc5ae0e007a5cc4485108" kindref="member">g_sonicator</ref>.previous_state<sp/>=<sp/><ref refid="de/d13/sonicator__control_8h_1ad0aeab8703f3a1439806186cba759315a02f13d1f0ad8e9fc52f93cf9c25ad0cf" kindref="member">SONICATOR_STATE_UNKNOWN</ref>;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/db9/sonicator_8cpp_1a2bc3fad78fedc5ae0e007a5cc4485108" kindref="member">g_sonicator</ref>.state_entry_time<sp/>=<sp/><ref refid="d2/db9/sonicator_8cpp_1ab73283b0ecebb62fc40528dd0117b5fe" kindref="member">get_timestamp_ms</ref>();</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/db9/sonicator_8cpp_1a2bc3fad78fedc5ae0e007a5cc4485108" kindref="member">g_sonicator</ref>.amplitude_percent<sp/>=<sp/><ref refid="de/d13/sonicator__control_8h_1abe06b5505cf15123b31cf8b029b59679" kindref="member">SONICATOR_MIN_AMPLITUDE_PERCENT</ref>;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/db9/sonicator_8cpp_1a2bc3fad78fedc5ae0e007a5cc4485108" kindref="member">g_sonicator</ref>.last_update_time<sp/>=<sp/><ref refid="d2/db9/sonicator_8cpp_1a2bc3fad78fedc5ae0e007a5cc4485108" kindref="member">g_sonicator</ref>.state_entry_time;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/db9/sonicator_8cpp_1a2bc3fad78fedc5ae0e007a5cc4485108" kindref="member">g_sonicator</ref>.watchdog_last_reset<sp/>=<sp/><ref refid="d2/db9/sonicator_8cpp_1a2bc3fad78fedc5ae0e007a5cc4485108" kindref="member">g_sonicator</ref>.state_entry_time;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>HAL<sp/>if<sp/>not<sp/>in<sp/>simulation<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d2/db9/sonicator_8cpp_1ac1fd48a035e83d4c49c15569676b3428" kindref="member">g_simulation_mode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dc/db6/hal_8cpp_1aa09745b395496b11ba076700d91d8e21" kindref="member">hal_init</ref>()<sp/>!=<sp/><ref refid="d8/d4b/hal_8h_1ace8e76cd091b757cacd51778764dd9a6a6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/db9/sonicator_8cpp_1a9b3ce32f980a7abc4dfdbe110f665c8d" kindref="member">SONICATOR_LOG</ref>(</highlight><highlight class="stringliteral">&quot;HAL<sp/>initialization<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/db9/sonicator_8cpp_1ae51dbc7e8f836d942c158d75aa6e345b" kindref="member">g_initialized</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/db9/sonicator_8cpp_1a9b3ce32f980a7abc4dfdbe110f665c8d" kindref="member">SONICATOR_LOG</ref>(</highlight><highlight class="stringliteral">&quot;Sonicator<sp/>control<sp/>initialized&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="447"><highlight class="normal">}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/db9/sonicator_8cpp_1aab49fb783e216647f53db17fbb6b62b1" kindref="member">sonicator_start</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d2/db9/sonicator_8cpp_1ae51dbc7e8f836d942c158d75aa6e345b" kindref="member">g_initialized</ref>)<sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/d70/structsonicator__state__control__t" kindref="compound">sonicator_state_control_t</ref>*<sp/>ctrl<sp/>=<sp/>&amp;<ref refid="d2/db9/sonicator_8cpp_1a2bc3fad78fedc5ae0e007a5cc4485108" kindref="member">g_sonicator</ref>;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Can<sp/>only<sp/>start<sp/>from<sp/>IDLE<sp/>state<sp/>with<sp/>no<sp/>active<sp/>faults</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a6cd8bcb50e1b5c930526cb95e0a268ce" kindref="member">state</ref><sp/>!=<sp/><ref refid="de/d13/sonicator__control_8h_1ad0aeab8703f3a1439806186cba759315a8aaaacd92fec828be10c02ef2696f0b7" kindref="member">SONICATOR_STATE_IDLE</ref><sp/>||<sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1aea26e6db5046274c9b121183c4d1abd8" kindref="member">active_faults</ref><sp/>!=<sp/><ref refid="de/d13/sonicator__control_8h_1a361c37dbeedf89f2fe09845eab7f0a99a45f67c744f0a84ef961991bbbcee8cb7" kindref="member">SONICATOR_FAULT_NONE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1aa84df142871608374a7fa8c1896fe4b3" kindref="member">start_requested</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/db9/sonicator_8cpp_1a4c28efedf324a8f71669e203de81ca47" kindref="member">sonicator_stop</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d2/db9/sonicator_8cpp_1ae51dbc7e8f836d942c158d75aa6e345b" kindref="member">g_initialized</ref>)<sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/d70/structsonicator__state__control__t" kindref="compound">sonicator_state_control_t</ref>*<sp/>ctrl<sp/>=<sp/>&amp;<ref refid="d2/db9/sonicator_8cpp_1a2bc3fad78fedc5ae0e007a5cc4485108" kindref="member">g_sonicator</ref>;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Can<sp/>stop<sp/>from<sp/>RUNNING<sp/>or<sp/>STARTING<sp/>states</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a6cd8bcb50e1b5c930526cb95e0a268ce" kindref="member">state</ref><sp/>==<sp/><ref refid="de/d13/sonicator__control_8h_1ad0aeab8703f3a1439806186cba759315aefd4187011c854e789baa073995f0def" kindref="member">SONICATOR_STATE_RUNNING</ref><sp/>||<sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a6cd8bcb50e1b5c930526cb95e0a268ce" kindref="member">state</ref><sp/>==<sp/><ref refid="de/d13/sonicator__control_8h_1ad0aeab8703f3a1439806186cba759315a34a68840cf8e7502193a12370a443e01" kindref="member">SONICATOR_STATE_STARTING</ref>)<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1ab8ced15f04b13bb1d6a77a5afc2be801" kindref="member">stop_requested</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="479"><highlight class="normal">}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/db9/sonicator_8cpp_1ad48d366d35d3f9fc640589b2b5623aa2" kindref="member">sonicator_set_amplitude</ref>(uint8_t<sp/>amplitude_percent)<sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d2/db9/sonicator_8cpp_1ae51dbc7e8f836d942c158d75aa6e345b" kindref="member">g_initialized</ref>)<sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>clamped_amplitude<sp/>=<sp/><ref refid="d2/db9/sonicator_8cpp_1ab8a2aa3f7760758e71971579d8cacaad" kindref="member">clamp_amplitude</ref>(amplitude_percent);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/db9/sonicator_8cpp_1a2bc3fad78fedc5ae0e007a5cc4485108" kindref="member">g_sonicator</ref>.amplitude_percent<sp/>=<sp/>clamped_amplitude;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(clamped_amplitude<sp/>==<sp/>amplitude_percent);<sp/></highlight><highlight class="comment">//<sp/>Return<sp/>false<sp/>if<sp/>clamping<sp/>occurred</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal">}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/db9/sonicator_8cpp_1a21c76fda64cb8f4ddaf2f55f3567ec5e" kindref="member">sonicator_reset_overload</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d2/db9/sonicator_8cpp_1ae51dbc7e8f836d942c158d75aa6e345b" kindref="member">g_initialized</ref>)<sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/d70/structsonicator__state__control__t" kindref="compound">sonicator_state_control_t</ref>*<sp/>ctrl<sp/>=<sp/>&amp;<ref refid="d2/db9/sonicator_8cpp_1a2bc3fad78fedc5ae0e007a5cc4485108" kindref="member">g_sonicator</ref>;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Can<sp/>only<sp/>reset<sp/>if<sp/>in<sp/>FAULT<sp/>state<sp/>due<sp/>to<sp/>overload</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a6cd8bcb50e1b5c930526cb95e0a268ce" kindref="member">state</ref><sp/>==<sp/><ref refid="de/d13/sonicator__control_8h_1ad0aeab8703f3a1439806186cba759315a7ef335199557a3658616b70275094a47" kindref="member">SONICATOR_STATE_FAULT</ref><sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1aea26e6db5046274c9b121183c4d1abd8" kindref="member">active_faults</ref><sp/>&amp;<sp/><ref refid="de/d13/sonicator__control_8h_1a361c37dbeedf89f2fe09845eab7f0a99a73567def603bb6f8f77826552276d5ec" kindref="member">SONICATOR_FAULT_OVERLOAD</ref>))<sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>overload<sp/>fault<sp/>and<sp/>request<sp/>reset<sp/>pulse</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1aea26e6db5046274c9b121183c4d1abd8" kindref="member">active_faults</ref><sp/>=<sp/>(<ref refid="de/d13/sonicator__control_8h_1a361c37dbeedf89f2fe09845eab7f0a99" kindref="member">sonicator_fault_t</ref>)(ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1aea26e6db5046274c9b121183c4d1abd8" kindref="member">active_faults</ref><sp/>&amp;<sp/>~<ref refid="de/d13/sonicator__control_8h_1a361c37dbeedf89f2fe09845eab7f0a99a73567def603bb6f8f77826552276d5ec" kindref="member">SONICATOR_FAULT_OVERLOAD</ref>);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a564ae0b4b90fc1410ad2ca17b78419ea" kindref="member">reset_requested</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="510"><highlight class="normal">}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/db9/sonicator_8cpp_1a626ecb2d4d66e32401478259cfe3595f" kindref="member">sonicator_emergency_stop</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d2/db9/sonicator_8cpp_1ae51dbc7e8f836d942c158d75aa6e345b" kindref="member">g_initialized</ref>)<sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/d70/structsonicator__state__control__t" kindref="compound">sonicator_state_control_t</ref>*<sp/>ctrl<sp/>=<sp/>&amp;<ref refid="d2/db9/sonicator_8cpp_1a2bc3fad78fedc5ae0e007a5cc4485108" kindref="member">g_sonicator</ref>;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Immediate<sp/>emergency<sp/>stop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/db9/sonicator_8cpp_1ac63cfc1531dfd81f9b26907f6cfca3f3" kindref="member">hal_gpio_write_safe</ref>(<ref refid="dd/d28/group___sonicator4_1ga984840f9d3a5e89fbaedc95dbb27d454" kindref="member">SON4_START_PIN</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/db9/sonicator_8cpp_1aeee6577caee2ab0b3abebc40d69e3ecf" kindref="member">hal_pwm_set_safe</ref>(<ref refid="da/d6a/group___p_w_m_control_1ga0aa83389edb245f5b1ae129e07f474f7" kindref="member">PWM_AMPLITUDE_CONTROL_PIN</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Force<sp/>to<sp/>FAULT<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a901de2eae303626f6398b04a41e1c0bf" kindref="member">previous_state</ref><sp/>=<sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a6cd8bcb50e1b5c930526cb95e0a268ce" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a6cd8bcb50e1b5c930526cb95e0a268ce" kindref="member">state</ref><sp/>=<sp/><ref refid="de/d13/sonicator__control_8h_1ad0aeab8703f3a1439806186cba759315a7ef335199557a3658616b70275094a47" kindref="member">SONICATOR_STATE_FAULT</ref>;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1ac9189d4a7addd0a1424450e59036e713" kindref="member">state_entry_time</ref><sp/>=<sp/><ref refid="d2/db9/sonicator_8cpp_1ab73283b0ecebb62fc40528dd0117b5fe" kindref="member">get_timestamp_ms</ref>();</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1aea26e6db5046274c9b121183c4d1abd8" kindref="member">active_faults</ref><sp/>=<sp/>(<ref refid="de/d13/sonicator__control_8h_1a361c37dbeedf89f2fe09845eab7f0a99" kindref="member">sonicator_fault_t</ref>)(ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1aea26e6db5046274c9b121183c4d1abd8" kindref="member">active_faults</ref><sp/>|<sp/><ref refid="de/d13/sonicator__control_8h_1a361c37dbeedf89f2fe09845eab7f0a99a46b1755f047e81751b29ae6787e7d594" kindref="member">SONICATOR_FAULT_HARDWARE</ref>);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a0d5c51ab2346e7db197ae25fc7260907" kindref="member">is_running</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/db9/sonicator_8cpp_1a9b3ce32f980a7abc4dfdbe110f665c8d" kindref="member">SONICATOR_LOG</ref>(</highlight><highlight class="stringliteral">&quot;EMERGENCY<sp/>STOP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="532"><highlight class="normal">}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><ref refid="de/d13/sonicator__control_8h_1ad0aeab8703f3a1439806186cba759315" kindref="member">sonicator_state_t</ref><sp/><ref refid="d2/db9/sonicator_8cpp_1adfd3a8b6450a1a09bf17d4865c32569c" kindref="member">sonicator_update</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d2/db9/sonicator_8cpp_1ae51dbc7e8f836d942c158d75aa6e345b" kindref="member">g_initialized</ref>)<sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d13/sonicator__control_8h_1ad0aeab8703f3a1439806186cba759315a02f13d1f0ad8e9fc52f93cf9c25ad0cf" kindref="member">SONICATOR_STATE_UNKNOWN</ref>;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>now<sp/>=<sp/><ref refid="d2/db9/sonicator_8cpp_1ab73283b0ecebb62fc40528dd0117b5fe" kindref="member">get_timestamp_ms</ref>();</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/d70/structsonicator__state__control__t" kindref="compound">sonicator_state_control_t</ref>*<sp/>ctrl<sp/>=<sp/>&amp;<ref refid="d2/db9/sonicator_8cpp_1a2bc3fad78fedc5ae0e007a5cc4485108" kindref="member">g_sonicator</ref>;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>timestamps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1aa7007812c1aa0b399b4e7624727b5e0d" kindref="member">last_update_time</ref><sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a81faba2b646684d9911224bccf329353" kindref="member">watchdog_last_reset</ref><sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>hardware<sp/>inputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/db9/sonicator_8cpp_1aef16074da149c14e5667730099c3cd1e" kindref="member">read_hardware_inputs</ref>();</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>fault<sp/>conditions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/d13/sonicator__control_8h_1a361c37dbeedf89f2fe09845eab7f0a99" kindref="member">sonicator_fault_t</ref><sp/>faults<sp/>=<sp/><ref refid="d2/db9/sonicator_8cpp_1a3e5dff7d739c31be62ed6a2517a3101d" kindref="member">check_fault_conditions</ref>();</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(faults<sp/>!=<sp/><ref refid="de/d13/sonicator__control_8h_1a361c37dbeedf89f2fe09845eab7f0a99a45f67c744f0a84ef961991bbbcee8cb7" kindref="member">SONICATOR_FAULT_NONE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/db9/sonicator_8cpp_1a98449ff464a0585638878fb00728a7fd" kindref="member">handle_fault_conditions</ref>(faults);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Process<sp/>state<sp/>machine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/db9/sonicator_8cpp_1a5899c8af8472545d64087e08378b2a29" kindref="member">process_state_machine</ref>();</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>hardware<sp/>outputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/db9/sonicator_8cpp_1ada89ba9b127e4beefebcf0437c3d3706" kindref="member">update_hardware_outputs</ref>();</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a6cd8bcb50e1b5c930526cb95e0a268ce" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="562"><highlight class="normal">}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="df/d70/structsonicator__state__control__t" kindref="compound">sonicator_state_control_t</ref>*<sp/><ref refid="d2/db9/sonicator_8cpp_1a1ecfcd93a4b2bd32c9cab9f359b831ba" kindref="member">sonicator_get_status</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d2/db9/sonicator_8cpp_1ae51dbc7e8f836d942c158d75aa6e345b" kindref="member">g_initialized</ref><sp/>?<sp/>&amp;<ref refid="d2/db9/sonicator_8cpp_1a2bc3fad78fedc5ae0e007a5cc4485108" kindref="member">g_sonicator</ref><sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="566"><highlight class="normal">}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="d2/db9/sonicator_8cpp_1abe828539c1f97df3497b972c3c72c75f" kindref="member">sonicator_state_to_string</ref>(<ref refid="de/d13/sonicator__control_8h_1ad0aeab8703f3a1439806186cba759315" kindref="member">sonicator_state_t</ref><sp/>state)<sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(state)<sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="de/d13/sonicator__control_8h_1ad0aeab8703f3a1439806186cba759315a8aaaacd92fec828be10c02ef2696f0b7" kindref="member">SONICATOR_STATE_IDLE</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;IDLE&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="de/d13/sonicator__control_8h_1ad0aeab8703f3a1439806186cba759315a34a68840cf8e7502193a12370a443e01" kindref="member">SONICATOR_STATE_STARTING</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;STARTING&quot;</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="de/d13/sonicator__control_8h_1ad0aeab8703f3a1439806186cba759315aefd4187011c854e789baa073995f0def" kindref="member">SONICATOR_STATE_RUNNING</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;RUNNING&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="de/d13/sonicator__control_8h_1ad0aeab8703f3a1439806186cba759315a68fc7fb7e15c844aa2c6cda43bcc8d09" kindref="member">SONICATOR_STATE_STOPPING</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;STOPPING&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="de/d13/sonicator__control_8h_1ad0aeab8703f3a1439806186cba759315a7ef335199557a3658616b70275094a47" kindref="member">SONICATOR_STATE_FAULT</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;FAULT&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="de/d13/sonicator__control_8h_1ad0aeab8703f3a1439806186cba759315a02f13d1f0ad8e9fc52f93cf9c25ad0cf" kindref="member">SONICATOR_STATE_UNKNOWN</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;UNKNOWN&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;INVALID&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/db9/sonicator_8cpp_1a2309ace8e76b3132b8b2f0e7d0df9956" kindref="member">sonicator_is_safe</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d2/db9/sonicator_8cpp_1ae51dbc7e8f836d942c158d75aa6e345b" kindref="member">g_initialized</ref>)<sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="df/d70/structsonicator__state__control__t" kindref="compound">sonicator_state_control_t</ref>*<sp/>ctrl<sp/>=<sp/>&amp;<ref refid="d2/db9/sonicator_8cpp_1a2bc3fad78fedc5ae0e007a5cc4485108" kindref="member">g_sonicator</ref>;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>all<sp/>safety<sp/>conditions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>no_faults<sp/>=<sp/>(ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1aea26e6db5046274c9b121183c4d1abd8" kindref="member">active_faults</ref><sp/>==<sp/><ref refid="de/d13/sonicator__control_8h_1a361c37dbeedf89f2fe09845eab7f0a99a45f67c744f0a84ef961991bbbcee8cb7" kindref="member">SONICATOR_FAULT_NONE</ref>);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>watchdog_ok<sp/>=<sp/>!<ref refid="d2/db9/sonicator_8cpp_1ad64f181378aff681db9d4113aa0b5a7c" kindref="member">is_timeout</ref>(ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a81faba2b646684d9911224bccf329353" kindref="member">watchdog_last_reset</ref>,<sp/><ref refid="de/d13/sonicator__control_8h_1aafedba2f7dd17703f2fee746b1096bcf" kindref="member">SONICATOR_WATCHDOG_TIMEOUT_MS</ref>);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>comm_ok<sp/>=<sp/>!<ref refid="d2/db9/sonicator_8cpp_1ad64f181378aff681db9d4113aa0b5a7c" kindref="member">is_timeout</ref>(ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1aa7007812c1aa0b399b4e7624727b5e0d" kindref="member">last_update_time</ref>,<sp/><ref refid="de/d13/sonicator__control_8h_1a3a8bcea46ab85058d6fd1ad4c3c32ad4" kindref="member">SONICATOR_COMM_TIMEOUT_MS</ref>);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>state_ok<sp/>=<sp/>(ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a6cd8bcb50e1b5c930526cb95e0a268ce" kindref="member">state</ref><sp/>!=<sp/><ref refid="de/d13/sonicator__control_8h_1ad0aeab8703f3a1439806186cba759315a7ef335199557a3658616b70275094a47" kindref="member">SONICATOR_STATE_FAULT</ref><sp/>&amp;&amp;<sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a6cd8bcb50e1b5c930526cb95e0a268ce" kindref="member">state</ref><sp/>!=<sp/><ref refid="de/d13/sonicator__control_8h_1ad0aeab8703f3a1439806186cba759315a02f13d1f0ad8e9fc52f93cf9c25ad0cf" kindref="member">SONICATOR_STATE_UNKNOWN</ref>);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>no_faults<sp/>&amp;&amp;<sp/>watchdog_ok<sp/>&amp;&amp;<sp/>comm_ok<sp/>&amp;&amp;<sp/>state_ok;</highlight></codeline>
<codeline lineno="594"><highlight class="normal">}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d2/db9/sonicator_8cpp_1a85b84eadaf4c625391673e214901144f" kindref="member">sonicator_reset_statistics</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d2/db9/sonicator_8cpp_1ae51dbc7e8f836d942c158d75aa6e345b" kindref="member">g_initialized</ref>)<sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/d70/structsonicator__state__control__t" kindref="compound">sonicator_state_control_t</ref>*<sp/>ctrl<sp/>=<sp/>&amp;<ref refid="d2/db9/sonicator_8cpp_1a2bc3fad78fedc5ae0e007a5cc4485108" kindref="member">g_sonicator</ref>;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>statistics<sp/>but<sp/>preserve<sp/>current<sp/>operational<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a189d2cb7b5214386dead8021cbccdfa7" kindref="member">start_count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a9b3b5c28ba93ade6dd7a6b89ec2386d7" kindref="member">total_runtime_ms</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a0faeb93a22f6239bd9ac1803cfda4ee9" kindref="member">fault_count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1ac810ff8433cec8225356eefabcdcf810" kindref="member">last_fault_time</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1aef9c8009b1353420849b57fd8629cf2c" kindref="member">last_start_time</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="609"><highlight class="normal">}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ADVANCED<sp/>FUNCTIONS<sp/>(testing<sp/>and<sp/>diagnostics)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/db9/sonicator_8cpp_1a4519e53de39614ddb883a4c2db06ea19" kindref="member">sonicator_force_state</ref>(<ref refid="de/d13/sonicator__control_8h_1ad0aeab8703f3a1439806186cba759315" kindref="member">sonicator_state_t</ref><sp/>new_state)<sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d2/db9/sonicator_8cpp_1ae51dbc7e8f836d942c158d75aa6e345b" kindref="member">g_initialized</ref>)<sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/d70/structsonicator__state__control__t" kindref="compound">sonicator_state_control_t</ref>*<sp/>ctrl<sp/>=<sp/>&amp;<ref refid="d2/db9/sonicator_8cpp_1a2bc3fad78fedc5ae0e007a5cc4485108" kindref="member">g_sonicator</ref>;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a901de2eae303626f6398b04a41e1c0bf" kindref="member">previous_state</ref><sp/>=<sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a6cd8bcb50e1b5c930526cb95e0a268ce" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1a6cd8bcb50e1b5c930526cb95e0a268ce" kindref="member">state</ref><sp/>=<sp/>new_state;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="df/d70/structsonicator__state__control__t_1ac9189d4a7addd0a1424450e59036e713" kindref="member">state_entry_time</ref><sp/>=<sp/><ref refid="d2/db9/sonicator_8cpp_1ab73283b0ecebb62fc40528dd0117b5fe" kindref="member">get_timestamp_ms</ref>();</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/db9/sonicator_8cpp_1a9b3ce32f980a7abc4dfdbe110f665c8d" kindref="member">SONICATOR_LOG</ref>(</highlight><highlight class="stringliteral">&quot;FORCED<sp/>STATE<sp/>CHANGE<sp/>(TESTING)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="627"><highlight class="normal">}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/db9/sonicator_8cpp_1a79b77d91a6416dd0447f9c6c9741ec36" kindref="member">sonicator_inject_fault</ref>(<ref refid="de/d13/sonicator__control_8h_1a361c37dbeedf89f2fe09845eab7f0a99" kindref="member">sonicator_fault_t</ref><sp/>fault_mask)<sp/>{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d2/db9/sonicator_8cpp_1ae51dbc7e8f836d942c158d75aa6e345b" kindref="member">g_initialized</ref>)<sp/>{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/db9/sonicator_8cpp_1a2bc3fad78fedc5ae0e007a5cc4485108" kindref="member">g_sonicator</ref>.active_faults<sp/>=<sp/>(<ref refid="de/d13/sonicator__control_8h_1a361c37dbeedf89f2fe09845eab7f0a99" kindref="member">sonicator_fault_t</ref>)(<ref refid="d2/db9/sonicator_8cpp_1a2bc3fad78fedc5ae0e007a5cc4485108" kindref="member">g_sonicator</ref>.active_faults<sp/>|<sp/>fault_mask);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/db9/sonicator_8cpp_1a9b3ce32f980a7abc4dfdbe110f665c8d" kindref="member">SONICATOR_LOG</ref>(</highlight><highlight class="stringliteral">&quot;FAULT<sp/>INJECTED<sp/>(TESTING)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="637"><highlight class="normal">}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d2/db9/sonicator_8cpp_1abe9ba511a647d9236e12897ce8cf7271" kindref="member">sonicator_set_simulation_mode</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)<sp/>{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/db9/sonicator_8cpp_1ac1fd48a035e83d4c49c15569676b3428" kindref="member">g_simulation_mode</ref><sp/>=<sp/>enable;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/db9/sonicator_8cpp_1a9b3ce32f980a7abc4dfdbe110f665c8d" kindref="member">SONICATOR_LOG</ref>(enable<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Simulation<sp/>mode<sp/>enabled&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;Simulation<sp/>mode<sp/>disabled&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="642"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/modules/control/sonicator.cpp"/>
  </compounddef>
</doxygen>
