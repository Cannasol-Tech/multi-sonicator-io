<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="d8/d00/modbus_8cpp" kind="file" language="C++">
    <compoundname>modbus.cpp</compoundname>
    <includes refid="da/dae/modbus_8h" local="yes">modbus.h</includes>
    <includes refid="d4/d9a/modbus__registers_8h" local="yes">modbus_registers.h</includes>
    <includes local="yes">multi_sonicator.h</includes>
    <includes local="no">Arduino.h</includes>
    <includes refid="dd/df5/modbus__register__manager_8h" local="yes">modbus_register_manager.h</includes>
    <incdepgraph>
      <node id="2">
        <label>modbus.h</label>
        <link refid="da/dae/modbus_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>modbus_register_manager.h</label>
        <link refid="dd/df5/modbus__register__manager_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>modbus_registers.h</label>
        <link refid="d4/d9a/modbus__registers_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/modules/communication/modbus.cpp</label>
        <link refid="d8/d00/modbus_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>Arduino.h</label>
      </node>
      <node id="6">
        <label>multi_sonicator.h</label>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="d8/d00/modbus_8cpp_1aad9fe918741e66afae8c5aaacfc73e82" prot="public" static="no">
        <name>REGMAP</name>
        <param></param>
        <initializer>(<ref refid="db/d0f/modbus__register__manager_8cpp_1ab07eb4458680115587cf910a7532e6d3" kindref="member">register_manager_get_map</ref>())</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/communication/modbus.cpp" line="46" column="11" bodyfile="src/modules/communication/modbus.cpp" bodystart="46" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="d8/d00/modbus_8cpp_1a66193f2ecdb36e7c08aae865766630a0" prot="public" static="yes" mutable="no">
        <type><ref refid="d5/dea/structmodbus__config__t" kindref="compound">modbus_config_t</ref></type>
        <definition>modbus_config_t modbus_config</definition>
        <argsstring></argsstring>
        <name>modbus_config</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/communication/modbus.cpp" line="36" column="24" bodyfile="src/modules/communication/modbus.cpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d00/modbus_8cpp_1ab53f4bfea0ccc98c591cf1e679f72db4" prot="public" static="yes" mutable="no">
        <type><ref refid="d3/d0c/structmodbus__statistics__t" kindref="compound">modbus_statistics_t</ref></type>
        <definition>modbus_statistics_t modbus_stats</definition>
        <argsstring></argsstring>
        <name>modbus_stats</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/communication/modbus.cpp" line="37" column="28" bodyfile="src/modules/communication/modbus.cpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d00/modbus_8cpp_1a5e3059d398e534d01a730420495ab79f" prot="public" static="yes" mutable="no">
        <type><ref refid="da/dae/modbus_8h_1afec312b4c8bf1dd2b9b68c21bbfd7450" kindref="member">modbus_state_t</ref></type>
        <definition>modbus_state_t modbus_current_state</definition>
        <argsstring></argsstring>
        <name>modbus_current_state</name>
        <initializer>= <ref refid="da/dae/modbus_8h_1afec312b4c8bf1dd2b9b68c21bbfd7450a5549ed95eb5fccae99b5ba7d3ef55d88" kindref="member">MODBUS_STATE_IDLE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/communication/modbus.cpp" line="38" column="23" bodyfile="src/modules/communication/modbus.cpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d00/modbus_8cpp_1a104086346bf05a48f455537637baa1f3" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool modbus_enabled</definition>
        <argsstring></argsstring>
        <name>modbus_enabled</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/communication/modbus.cpp" line="39" column="13" bodyfile="src/modules/communication/modbus.cpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d00/modbus_8cpp_1a25ff31535482e4bb2b4835ff9ed66ee5" prot="public" static="yes" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t last_communication_time</definition>
        <argsstring></argsstring>
        <name>last_communication_time</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/communication/modbus.cpp" line="40" column="17" bodyfile="src/modules/communication/modbus.cpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d00/modbus_8cpp_1a33dc1347e05a0883f55b4489e8ae3b76" prot="public" static="yes" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t request_start_time</definition>
        <argsstring></argsstring>
        <name>request_start_time</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/communication/modbus.cpp" line="41" column="17" bodyfile="src/modules/communication/modbus.cpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d00/modbus_8cpp_1a004a0fcb6c93970c88f150c66add249f" prot="public" static="yes" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t rx_buffer[128]</definition>
        <argsstring>[128]</argsstring>
        <name>rx_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/communication/modbus.cpp" line="49" column="16" bodyfile="src/modules/communication/modbus.cpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d00/modbus_8cpp_1a9ce595b3296a1dd2cfd6e8bf3f9360d1" prot="public" static="yes" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t rx_length</definition>
        <argsstring></argsstring>
        <name>rx_length</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/communication/modbus.cpp" line="50" column="17" bodyfile="src/modules/communication/modbus.cpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d00/modbus_8cpp_1ae840344c23f22df92cf8c83b4e69c26b" prot="public" static="yes" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t tx_buffer[128]</definition>
        <argsstring>[128]</argsstring>
        <name>tx_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/communication/modbus.cpp" line="51" column="16" bodyfile="src/modules/communication/modbus.cpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d00/modbus_8cpp_1a3e4e7f33013aea5c32450e6a30e4a7b2" prot="public" static="yes" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t tx_length</definition>
        <argsstring></argsstring>
        <name>tx_length</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/communication/modbus.cpp" line="52" column="17" bodyfile="src/modules/communication/modbus.cpp" bodystart="52" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="d8/d00/modbus_8cpp_1a1505fbc6dedb0a9f3516fb2aff8cfb5e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>static uint16_t modbus_read_register_internal</definition>
        <argsstring>(uint16_t address)</argsstring>
        <name>modbus_read_register_internal</name>
        <param>
          <type>uint16_t</type>
          <declname>address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/communication/modbus.cpp" line="243" column="17" bodyfile="src/modules/communication/modbus.cpp" bodystart="243" bodyend="279" declfile="src/modules/communication/modbus.cpp" declline="67" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="d8/d00/modbus_8cpp_1a4319b53b6b2a269db6659e79502ccceb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool modbus_write_register_internal</definition>
        <argsstring>(uint16_t address, uint16_t value)</argsstring>
        <name>modbus_write_register_internal</name>
        <param>
          <type>uint16_t</type>
          <declname>address</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/communication/modbus.cpp" line="281" column="13" bodyfile="src/modules/communication/modbus.cpp" bodystart="281" bodyend="361" declfile="src/modules/communication/modbus.cpp" declline="68" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="d8/d00/modbus_8cpp_1abc2e936e610ff1ff83ddf842a1426464" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void modbus_update_statistics</definition>
        <argsstring>(void)</argsstring>
        <name>modbus_update_statistics</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/communication/modbus.cpp" line="363" column="13" bodyfile="src/modules/communication/modbus.cpp" bodystart="363" bodyend="372" declfile="src/modules/communication/modbus.cpp" declline="69" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="d8/d00/modbus_8cpp_1a79d6003f903330ac2ea01fbb7f99cd18" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void modbus_handle_timeout</definition>
        <argsstring>(void)</argsstring>
        <name>modbus_handle_timeout</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/communication/modbus.cpp" line="374" column="13" bodyfile="src/modules/communication/modbus.cpp" bodystart="374" bodyend="385" declfile="src/modules/communication/modbus.cpp" declline="70" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="d8/d00/modbus_8cpp_1a85cd4b12a6c9f4a25584a62222a2f23d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void modbus_handle_error</definition>
        <argsstring>(modbus_error_t error)</argsstring>
        <name>modbus_handle_error</name>
        <param>
          <type><ref refid="da/dae/modbus_8h_1a2e498f171730dc5b51e62483fe2f977e" kindref="member">modbus_error_t</ref></type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/communication/modbus.cpp" line="387" column="13" bodyfile="src/modules/communication/modbus.cpp" bodystart="387" bodyend="410" declfile="src/modules/communication/modbus.cpp" declline="71" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="d8/d00/modbus_8cpp_1a7e73a6a0501d70ea806614da27f12a0e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>static uint16_t modbus_process_frame</definition>
        <argsstring>(uint8_t *frame, uint16_t length)</argsstring>
        <name>modbus_process_frame</name>
        <param>
          <type>uint8_t *</type>
          <declname>frame</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/communication/modbus.cpp" line="436" column="17" bodyfile="src/modules/communication/modbus.cpp" bodystart="436" bodyend="518" declfile="src/modules/communication/modbus.cpp" declline="72" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="d8/d00/modbus_8cpp_1a3fbcd7eae5e87852813f39c625fbc64a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool modbus_validate_frame</definition>
        <argsstring>(uint8_t *frame, uint16_t length)</argsstring>
        <name>modbus_validate_frame</name>
        <param>
          <type>uint8_t *</type>
          <declname>frame</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/communication/modbus.cpp" line="413" column="13" bodyfile="src/modules/communication/modbus.cpp" bodystart="413" bodyend="434" declfile="src/modules/communication/modbus.cpp" declline="73" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="d8/d00/modbus_8cpp_1a9713277eaf362fb046bac801cee5a529" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="da/dae/modbus_8h_1a2e498f171730dc5b51e62483fe2f977e" kindref="member">modbus_error_t</ref></type>
        <definition>modbus_error_t modbus_init</definition>
        <argsstring>(const modbus_config_t *config)</argsstring>
        <name>modbus_init</name>
        <param>
          <type>const <ref refid="d5/dea/structmodbus__config__t" kindref="compound">modbus_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Initialize MODBUS RTU communication. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>MODBUS configuration structure </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>MODBUS_OK on success, error code on failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/communication/modbus.cpp" line="79" column="16" bodyfile="src/modules/communication/modbus.cpp" bodystart="79" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="d8/d00/modbus_8cpp_1a5fd500ab836fc4f5f8704d8c709163c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="da/dae/modbus_8h_1afec312b4c8bf1dd2b9b68c21bbfd7450" kindref="member">modbus_state_t</ref></type>
        <definition>modbus_state_t modbus_process</definition>
        <argsstring>(void)</argsstring>
        <name>modbus_process</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Process MODBUS communication (call from main loop) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Current MODBUS state </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/communication/modbus.cpp" line="110" column="16" bodyfile="src/modules/communication/modbus.cpp" bodystart="110" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="d8/d00/modbus_8cpp_1a8a7d7933723cdf4d7d2663a479acc18e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool modbus_is_timeout</definition>
        <argsstring>(void)</argsstring>
        <name>modbus_is_timeout</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Check if communication timeout occurred. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if timeout detected, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/communication/modbus.cpp" line="161" column="6" bodyfile="src/modules/communication/modbus.cpp" bodystart="161" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="d8/d00/modbus_8cpp_1aac1e55025fc39022813c3301193475f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void modbus_reset_timeout</definition>
        <argsstring>(void)</argsstring>
        <name>modbus_reset_timeout</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Reset communication timeout timer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/communication/modbus.cpp" line="166" column="6" bodyfile="src/modules/communication/modbus.cpp" bodystart="166" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="d8/d00/modbus_8cpp_1a6448441f6c9c07a5f0aa9fd9cfd3df04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="d3/d0c/structmodbus__statistics__t" kindref="compound">modbus_statistics_t</ref> *</type>
        <definition>const modbus_statistics_t * modbus_get_statistics</definition>
        <argsstring>(void)</argsstring>
        <name>modbus_get_statistics</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get MODBUS communication statistics. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Pointer to statistics structure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/communication/modbus.cpp" line="170" column="27" bodyfile="src/modules/communication/modbus.cpp" bodystart="170" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="d8/d00/modbus_8cpp_1ab2b0c68a0945f77de7365473d0556004" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void modbus_reset_statistics</definition>
        <argsstring>(void)</argsstring>
        <name>modbus_reset_statistics</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Reset MODBUS communication statistics. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/communication/modbus.cpp" line="174" column="6" bodyfile="src/modules/communication/modbus.cpp" bodystart="174" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="d8/d00/modbus_8cpp_1ab54e698995237d7cbd3e499e7bc90c98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="da/dae/modbus_8h_1afec312b4c8bf1dd2b9b68c21bbfd7450" kindref="member">modbus_state_t</ref></type>
        <definition>modbus_state_t modbus_get_state</definition>
        <argsstring>(void)</argsstring>
        <name>modbus_get_state</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get current MODBUS state. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Current communication state </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/communication/modbus.cpp" line="178" column="16" bodyfile="src/modules/communication/modbus.cpp" bodystart="178" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="d8/d00/modbus_8cpp_1a018a8ad71c133ab6479c7482e20978a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void modbus_force_error</definition>
        <argsstring>(modbus_error_t error_code)</argsstring>
        <name>modbus_force_error</name>
        <param>
          <type><ref refid="da/dae/modbus_8h_1a2e498f171730dc5b51e62483fe2f977e" kindref="member">modbus_error_t</ref></type>
          <declname>error_code</declname>
        </param>
        <briefdescription>
<para>Force MODBUS into error state for testing. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>error_code</parametername>
</parameternamelist>
<parameterdescription>
<para>Error code to simulate </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/communication/modbus.cpp" line="182" column="6" bodyfile="src/modules/communication/modbus.cpp" bodystart="182" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="d8/d00/modbus_8cpp_1a6c74499e6c161114e88e278d87fd3462" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool modbus_validate_address</definition>
        <argsstring>(uint16_t address, uint8_t function_code)</argsstring>
        <name>modbus_validate_address</name>
        <param>
          <type>uint16_t</type>
          <declname>address</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>function_code</declname>
        </param>
        <briefdescription>
<para>Validate MODBUS register address. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>address</parametername>
</parameternamelist>
<parameterdescription>
<para>Register address to validate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>function_code</parametername>
</parameternamelist>
<parameterdescription>
<para>MODBUS function code </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if address is valid for the function, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/communication/modbus.cpp" line="186" column="6" bodyfile="src/modules/communication/modbus.cpp" bodystart="186" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="d8/d00/modbus_8cpp_1a7fd85103f18a4fd1c2e58d69470088e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t modbus_calculate_crc</definition>
        <argsstring>(const uint8_t *data, uint16_t length)</argsstring>
        <name>modbus_calculate_crc</name>
        <param>
          <type>const uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Calculate CRC-16 for MODBUS frame. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to data buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of data in bytes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Calculated CRC-16 value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/communication/modbus.cpp" line="202" column="10" bodyfile="src/modules/communication/modbus.cpp" bodystart="202" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="d8/d00/modbus_8cpp_1a61c9b77bd9ac121e66f4689104ca9520" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void modbus_set_enabled</definition>
        <argsstring>(bool enabled)</argsstring>
        <name>modbus_set_enabled</name>
        <param>
          <type>bool</type>
          <declname>enabled</declname>
        </param>
        <briefdescription>
<para>Enable/disable MODBUS communication. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>enabled</parametername>
</parameternamelist>
<parameterdescription>
<para>true to enable, false to disable </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/communication/modbus.cpp" line="225" column="6" bodyfile="src/modules/communication/modbus.cpp" bodystart="225" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="d8/d00/modbus_8cpp_1a597eaa69c6f1718adc29b91dcd4cddbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool modbus_is_enabled</definition>
        <argsstring>(void)</argsstring>
        <name>modbus_is_enabled</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Check if MODBUS communication is enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if enabled, false if disabled </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/communication/modbus.cpp" line="235" column="6" bodyfile="src/modules/communication/modbus.cpp" bodystart="235" bodyend="237"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>MODBUS RTU Communication Framework Implementation. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Cannasol Technologies </para>
</simplesect>
<simplesect kind="date"><para>2025-09-02 </para>
</simplesect>
<simplesect kind="version"><para>1.0.0</para>
</simplesect>
Arduino Framework implementation of MODBUS RTU slave using native Serial communication. Provides register-based interface for sonicator control and monitoring via PLC/HMI systems. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="da/dae/modbus_8h" kindref="compound">modbus.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d4/d9a/modbus__registers_8h" kindref="compound">modbus_registers.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;multi_sonicator.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNIT_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctime&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Mock<sp/>Arduino<sp/>functions<sp/>for<sp/>unit<sp/>testing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>millis()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>clock()<sp/>/<sp/>(CLOCKS_PER_SEC<sp/>/<sp/>1000);<sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>delay(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ms)<sp/>{<sp/>(void)ms;<sp/></highlight><highlight class="comment">/*<sp/>stub<sp/>*/</highlight><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Serial<sp/>std::cout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Arduino.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GLOBAL<sp/>VARIABLES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d5/dea/structmodbus__config__t" kindref="compound">modbus_config_t</ref><sp/><ref refid="d8/d00/modbus_8cpp_1a66193f2ecdb36e7c08aae865766630a0" kindref="member">modbus_config</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d3/d0c/structmodbus__statistics__t" kindref="compound">modbus_statistics_t</ref><sp/><ref refid="d8/d00/modbus_8cpp_1ab53f4bfea0ccc98c591cf1e679f72db4" kindref="member">modbus_stats</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="da/dae/modbus_8h_1afec312b4c8bf1dd2b9b68c21bbfd7450" kindref="member">modbus_state_t</ref><sp/><ref refid="d8/d00/modbus_8cpp_1a5e3059d398e534d01a730420495ab79f" kindref="member">modbus_current_state</ref><sp/>=<sp/><ref refid="da/dae/modbus_8h_1afec312b4c8bf1dd2b9b68c21bbfd7450a5549ed95eb5fccae99b5ba7d3ef55d88" kindref="member">MODBUS_STATE_IDLE</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d00/modbus_8cpp_1a104086346bf05a48f455537637baa1f3" kindref="member">modbus_enabled</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="d8/d00/modbus_8cpp_1a25ff31535482e4bb2b4835ff9ed66ee5" kindref="member">last_communication_time</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="d8/d00/modbus_8cpp_1a33dc1347e05a0883f55b4489e8ae3b76" kindref="member">request_start_time</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Register<sp/>map<sp/>storage<sp/>is<sp/>owned<sp/>by<sp/>Register<sp/>Manager<sp/>(single<sp/>source<sp/>of<sp/>truth)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>maintain<sp/>a<sp/>separate<sp/>copy<sp/>here;<sp/>always<sp/>operate<sp/>on<sp/>the<sp/>shared<sp/>map.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dd/df5/modbus__register__manager_8h" kindref="compound">modbus_register_manager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>REGMAP()<sp/>(register_manager_get_map())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Communication<sp/>buffers<sp/>(reduced<sp/>to<sp/>save<sp/>RAM)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="d8/d00/modbus_8cpp_1a004a0fcb6c93970c88f150c66add249f" kindref="member">rx_buffer</ref>[128];</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="d8/d00/modbus_8cpp_1a9ce595b3296a1dd2cfd6e8bf3f9360d1" kindref="member">rx_length</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="d8/d00/modbus_8cpp_1ae840344c23f22df92cf8c83b4e69c26b" kindref="member">tx_buffer</ref>[128];</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="d8/d00/modbus_8cpp_1a3e4e7f33013aea5c32450e6a30e4a7b2" kindref="member">tx_length</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Suppress<sp/>unused<sp/>variable<sp/>warnings<sp/>for<sp/>unit<sp/>testing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNIT_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">__attribute__((unused))<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>suppress_unused_warnings()<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<ref refid="d8/d00/modbus_8cpp_1a004a0fcb6c93970c88f150c66add249f" kindref="member">rx_buffer</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<ref refid="d8/d00/modbus_8cpp_1a9ce595b3296a1dd2cfd6e8bf3f9360d1" kindref="member">rx_length</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<ref refid="d8/d00/modbus_8cpp_1a3e4e7f33013aea5c32450e6a30e4a7b2" kindref="member">tx_length</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PRIVATE<sp/>FUNCTION<sp/>DECLARATIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="d8/d00/modbus_8cpp_1a1505fbc6dedb0a9f3516fb2aff8cfb5e" kindref="member">modbus_read_register_internal</ref>(uint16_t<sp/>address);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d00/modbus_8cpp_1a4319b53b6b2a269db6659e79502ccceb" kindref="member">modbus_write_register_internal</ref>(uint16_t<sp/>address,<sp/>uint16_t<sp/>value);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d00/modbus_8cpp_1abc2e936e610ff1ff83ddf842a1426464" kindref="member">modbus_update_statistics</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d00/modbus_8cpp_1a79d6003f903330ac2ea01fbb7f99cd18" kindref="member">modbus_handle_timeout</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d00/modbus_8cpp_1a85cd4b12a6c9f4a25584a62222a2f23d" kindref="member">modbus_handle_error</ref>(<ref refid="da/dae/modbus_8h_1a2e498f171730dc5b51e62483fe2f977e" kindref="member">modbus_error_t</ref><sp/>error);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="d8/d00/modbus_8cpp_1a7e73a6a0501d70ea806614da27f12a0e" kindref="member">modbus_process_frame</ref>(uint8_t*<sp/>frame,<sp/>uint16_t<sp/>length);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d00/modbus_8cpp_1a3fbcd7eae5e87852813f39c625fbc64a" kindref="member">modbus_validate_frame</ref>(uint8_t*<sp/>frame,<sp/>uint16_t<sp/>length);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PUBLIC<sp/>FUNCTION<sp/>IMPLEMENTATIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><ref refid="da/dae/modbus_8h_1a2e498f171730dc5b51e62483fe2f977e" kindref="member">modbus_error_t</ref><sp/><ref refid="d8/d00/modbus_8cpp_1a9713277eaf362fb046bac801cee5a529" kindref="member">modbus_init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/dea/structmodbus__config__t" kindref="compound">modbus_config_t</ref>*<sp/>config)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!config)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="da/dae/modbus_8h_1a2e498f171730dc5b51e62483fe2f977ea00d0aa97c9b2e9dae729cf2a35649461" kindref="member">MODBUS_ERROR_INVALID_LENGTH</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1a66193f2ecdb36e7c08aae865766630a0" kindref="member">modbus_config</ref><sp/>=<sp/>*config;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>statistics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;<ref refid="d8/d00/modbus_8cpp_1ab53f4bfea0ccc98c591cf1e679f72db4" kindref="member">modbus_stats</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d8/d00/modbus_8cpp_1ab53f4bfea0ccc98c591cf1e679f72db4" kindref="member">modbus_stats</ref>));</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>and<sp/>access<sp/>the<sp/>shared<sp/>register<sp/>map<sp/>via<sp/>Register<sp/>Manager</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d0f/modbus__register__manager_8cpp_1a87e393a356f5b647a98e8decf5574601" kindref="member">register_manager_init</ref>();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/d1a/structmodbus__register__map__t" kindref="compound">modbus_register_map_t</ref>*<sp/><ref refid="db/d0f/modbus__register__manager_8cpp_1ab704923b41c873dce4dce6bae32a386d" kindref="member">register_map</ref><sp/>=<sp/><ref refid="d8/d00/modbus_8cpp_1aad9fe918741e66afae8c5aaacfc73e82" kindref="member">REGMAP</ref>();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>baseline<sp/>system<sp/>status<sp/>sane</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d0f/modbus__register__manager_8cpp_1ab704923b41c873dce4dce6bae32a386d" kindref="member">register_map</ref>-&gt;system_status.system_status<sp/>|=<sp/><ref refid="d4/d9a/modbus__registers_8h_1ad524cda9b661253eee2af59560c51fb7" kindref="member">SYSTEM_STATUS_OK</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d0f/modbus__register__manager_8cpp_1ab704923b41c873dce4dce6bae32a386d" kindref="member">register_map</ref>-&gt;system_status.watchdog_status<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>Watchdog<sp/>OK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNIT_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>Serial<sp/>for<sp/>MODBUS<sp/>communication</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.begin(config-&gt;<ref refid="d5/dea/structmodbus__config__t_1a0657f618b7298a2d04c31dd2d1469409" kindref="member">baud_rate</ref>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1a104086346bf05a48f455537637baa1f3" kindref="member">modbus_enabled</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1a5e3059d398e534d01a730420495ab79f" kindref="member">modbus_current_state</ref><sp/>=<sp/><ref refid="da/dae/modbus_8h_1afec312b4c8bf1dd2b9b68c21bbfd7450a5549ed95eb5fccae99b5ba7d3ef55d88" kindref="member">MODBUS_STATE_IDLE</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1a25ff31535482e4bb2b4835ff9ed66ee5" kindref="member">last_communication_time</ref><sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="da/dae/modbus_8h_1a2e498f171730dc5b51e62483fe2f977eafbb178df49063323a6dcbf03dd0d88d2" kindref="member">MODBUS_OK</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><ref refid="da/dae/modbus_8h_1afec312b4c8bf1dd2b9b68c21bbfd7450" kindref="member">modbus_state_t</ref><sp/><ref refid="d8/d00/modbus_8cpp_1a5fd500ab836fc4f5f8704d8c709163c1" kindref="member">modbus_process</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d8/d00/modbus_8cpp_1a104086346bf05a48f455537637baa1f3" kindref="member">modbus_enabled</ref>)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="da/dae/modbus_8h_1afec312b4c8bf1dd2b9b68c21bbfd7450a5549ed95eb5fccae99b5ba7d3ef55d88" kindref="member">MODBUS_STATE_IDLE</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>communication<sp/>timeout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>current_time<sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((current_time<sp/>-<sp/><ref refid="d8/d00/modbus_8cpp_1a25ff31535482e4bb2b4835ff9ed66ee5" kindref="member">last_communication_time</ref>)<sp/>&gt;<sp/><ref refid="d8/d00/modbus_8cpp_1a66193f2ecdb36e7c08aae865766630a0" kindref="member">modbus_config</ref>.timeout_ms)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1a79d6003f903330ac2ea01fbb7f99cd18" kindref="member">modbus_handle_timeout</ref>();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="da/dae/modbus_8h_1afec312b4c8bf1dd2b9b68c21bbfd7450a33f1a1b3e94766200bc586cbfab5c909" kindref="member">MODBUS_STATE_TIMEOUT</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNIT_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>incoming<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Serial.available())<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1a5e3059d398e534d01a730420495ab79f" kindref="member">modbus_current_state</ref><sp/>=<sp/><ref refid="da/dae/modbus_8h_1afec312b4c8bf1dd2b9b68c21bbfd7450aaec8fed787da2875e9d52a57fdc6dd4c" kindref="member">MODBUS_STATE_RECEIVING</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1a25ff31535482e4bb2b4835ff9ed66ee5" kindref="member">last_communication_time</ref><sp/>=<sp/>current_time;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Simple<sp/>frame<sp/>reading<sp/>(production<sp/>would<sp/>need<sp/>proper<sp/>RTU<sp/>timing)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(Serial.available()<sp/>&amp;&amp;<sp/><ref refid="d8/d00/modbus_8cpp_1a9ce595b3296a1dd2cfd6e8bf3f9360d1" kindref="member">rx_length</ref><sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d8/d00/modbus_8cpp_1a004a0fcb6c93970c88f150c66add249f" kindref="member">rx_buffer</ref>))<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1a004a0fcb6c93970c88f150c66add249f" kindref="member">rx_buffer</ref>[<ref refid="d8/d00/modbus_8cpp_1a9ce595b3296a1dd2cfd6e8bf3f9360d1" kindref="member">rx_length</ref>++]<sp/>=<sp/>Serial.read();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delay(1);<sp/></highlight><highlight class="comment">//<sp/>Simple<sp/>inter-character<sp/>delay</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Refresh<sp/>shared<sp/>register<sp/>map<sp/>pointer<sp/>in<sp/>case<sp/>of<sp/>reinitialization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/d1a/structmodbus__register__map__t" kindref="compound">modbus_register_map_t</ref>*<sp/><ref refid="db/d0f/modbus__register__manager_8cpp_1ab704923b41c873dce4dce6bae32a386d" kindref="member">register_map</ref><sp/>=<sp/><ref refid="d8/d00/modbus_8cpp_1aad9fe918741e66afae8c5aaacfc73e82" kindref="member">REGMAP</ref>();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d8/d00/modbus_8cpp_1a9ce595b3296a1dd2cfd6e8bf3f9360d1" kindref="member">rx_length</ref><sp/>&gt;=<sp/>4)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Minimum<sp/>MODBUS<sp/>frame<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1a5e3059d398e534d01a730420495ab79f" kindref="member">modbus_current_state</ref><sp/>=<sp/><ref refid="da/dae/modbus_8h_1afec312b4c8bf1dd2b9b68c21bbfd7450a645eda5ec22879da61838ebfe6cd2d60" kindref="member">MODBUS_STATE_PROCESSING</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d8/d00/modbus_8cpp_1a3fbcd7eae5e87852813f39c625fbc64a" kindref="member">modbus_validate_frame</ref>(<ref refid="d8/d00/modbus_8cpp_1a004a0fcb6c93970c88f150c66add249f" kindref="member">rx_buffer</ref>,<sp/><ref refid="d8/d00/modbus_8cpp_1a9ce595b3296a1dd2cfd6e8bf3f9360d1" kindref="member">rx_length</ref>))<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1a3e4e7f33013aea5c32450e6a30e4a7b2" kindref="member">tx_length</ref><sp/>=<sp/><ref refid="d8/d00/modbus_8cpp_1a7e73a6a0501d70ea806614da27f12a0e" kindref="member">modbus_process_frame</ref>(<ref refid="d8/d00/modbus_8cpp_1a004a0fcb6c93970c88f150c66add249f" kindref="member">rx_buffer</ref>,<sp/><ref refid="d8/d00/modbus_8cpp_1a9ce595b3296a1dd2cfd6e8bf3f9360d1" kindref="member">rx_length</ref>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d8/d00/modbus_8cpp_1a3e4e7f33013aea5c32450e6a30e4a7b2" kindref="member">tx_length</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1a5e3059d398e534d01a730420495ab79f" kindref="member">modbus_current_state</ref><sp/>=<sp/><ref refid="da/dae/modbus_8h_1afec312b4c8bf1dd2b9b68c21bbfd7450a03ac19e85d12e7c90b074e3c6db491c7" kindref="member">MODBUS_STATE_RESPONDING</ref>;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.write(<ref refid="d8/d00/modbus_8cpp_1ae840344c23f22df92cf8c83b4e69c26b" kindref="member">tx_buffer</ref>,<sp/><ref refid="d8/d00/modbus_8cpp_1a3e4e7f33013aea5c32450e6a30e4a7b2" kindref="member">tx_length</ref>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1ab53f4bfea0ccc98c591cf1e679f72db4" kindref="member">modbus_stats</ref>.responses_sent++;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1a9ce595b3296a1dd2cfd6e8bf3f9360d1" kindref="member">rx_length</ref><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>for<sp/>next<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d8/d00/modbus_8cpp_1a5e3059d398e534d01a730420495ab79f" kindref="member">modbus_current_state</ref><sp/>!=<sp/><ref refid="da/dae/modbus_8h_1afec312b4c8bf1dd2b9b68c21bbfd7450a33f1a1b3e94766200bc586cbfab5c909" kindref="member">MODBUS_STATE_TIMEOUT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1a5e3059d398e534d01a730420495ab79f" kindref="member">modbus_current_state</ref><sp/>=<sp/><ref refid="da/dae/modbus_8h_1afec312b4c8bf1dd2b9b68c21bbfd7450a5549ed95eb5fccae99b5ba7d3ef55d88" kindref="member">MODBUS_STATE_IDLE</ref>;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d8/d00/modbus_8cpp_1a5e3059d398e534d01a730420495ab79f" kindref="member">modbus_current_state</ref>;</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d00/modbus_8cpp_1a8a7d7933723cdf4d7d2663a479acc18e" kindref="member">modbus_is_timeout</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>current_time<sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((current_time<sp/>-<sp/><ref refid="d8/d00/modbus_8cpp_1a25ff31535482e4bb2b4835ff9ed66ee5" kindref="member">last_communication_time</ref>)<sp/>&gt;<sp/><ref refid="d8/d00/modbus_8cpp_1a66193f2ecdb36e7c08aae865766630a0" kindref="member">modbus_config</ref>.timeout_ms);</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d00/modbus_8cpp_1aac1e55025fc39022813c3301193475f4" kindref="member">modbus_reset_timeout</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1a25ff31535482e4bb2b4835ff9ed66ee5" kindref="member">last_communication_time</ref><sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d3/d0c/structmodbus__statistics__t" kindref="compound">modbus_statistics_t</ref>*<sp/><ref refid="d8/d00/modbus_8cpp_1a6448441f6c9c07a5f0aa9fd9cfd3df04" kindref="member">modbus_get_statistics</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;<ref refid="d8/d00/modbus_8cpp_1ab53f4bfea0ccc98c591cf1e679f72db4" kindref="member">modbus_stats</ref>;</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d00/modbus_8cpp_1ab2b0c68a0945f77de7365473d0556004" kindref="member">modbus_reset_statistics</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;<ref refid="d8/d00/modbus_8cpp_1ab53f4bfea0ccc98c591cf1e679f72db4" kindref="member">modbus_stats</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d8/d00/modbus_8cpp_1ab53f4bfea0ccc98c591cf1e679f72db4" kindref="member">modbus_stats</ref>));</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><ref refid="da/dae/modbus_8h_1afec312b4c8bf1dd2b9b68c21bbfd7450" kindref="member">modbus_state_t</ref><sp/><ref refid="d8/d00/modbus_8cpp_1ab54e698995237d7cbd3e499e7bc90c98" kindref="member">modbus_get_state</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d8/d00/modbus_8cpp_1a5e3059d398e534d01a730420495ab79f" kindref="member">modbus_current_state</ref>;</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d00/modbus_8cpp_1a018a8ad71c133ab6479c7482e20978a8" kindref="member">modbus_force_error</ref>(<ref refid="da/dae/modbus_8h_1a2e498f171730dc5b51e62483fe2f977e" kindref="member">modbus_error_t</ref><sp/>error_code)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1a85cd4b12a6c9f4a25584a62222a2f23d" kindref="member">modbus_handle_error</ref>(error_code);</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d00/modbus_8cpp_1a6c74499e6c161114e88e278d87fd3462" kindref="member">modbus_validate_address</ref>(uint16_t<sp/>address,<sp/>uint8_t<sp/>function_code)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>address<sp/>is<sp/>within<sp/>valid<sp/>ranges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d4/d9a/modbus__registers_8h_1ae1a92d0edd2471906be4fdf387b1e263" kindref="member">IS_VALID_REGISTER_ADDR</ref>(address))<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>write<sp/>operations,<sp/>check<sp/>if<sp/>register<sp/>is<sp/>writable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((function_code<sp/>==<sp/><ref refid="da/dae/modbus_8h_1aa4f55f8699ff87400fbcdc849d9c7721" kindref="member">MODBUS_FC_WRITE_SINGLE</ref><sp/>||<sp/></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>function_code<sp/>==<sp/><ref refid="da/dae/modbus_8h_1a70a5f0a4a6a6c487962b4b8b39f5aeaf" kindref="member">MODBUS_FC_WRITE_MULTIPLE</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d9a/modbus__registers_8h_1a3c9869c3729bb4947e12e4b5ce5a3a7e" kindref="member">IS_READONLY_REGISTER</ref>(address))<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal">uint16_t<sp/><ref refid="d8/d00/modbus_8cpp_1a7fd85103f18a4fd1c2e58d69470088e3" kindref="member">modbus_calculate_crc</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>data,<sp/>uint16_t<sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!data<sp/>||<sp/>length<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0xFFFF;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>crc<sp/>=<sp/>0xFFFF;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint16_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>length;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crc<sp/>^=<sp/>data[i];</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>8;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(crc<sp/>&amp;<sp/>0x0001)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crc<sp/>&gt;&gt;=<sp/>1;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crc<sp/>^=<sp/>0xA001;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crc<sp/>&gt;&gt;=<sp/>1;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>crc;</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d00/modbus_8cpp_1a61c9b77bd9ac121e66f4689104ca9520" kindref="member">modbus_set_enabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1a104086346bf05a48f455537637baa1f3" kindref="member">modbus_enabled</ref><sp/>=<sp/>enabled;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enabled)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1a5e3059d398e534d01a730420495ab79f" kindref="member">modbus_current_state</ref><sp/>=<sp/><ref refid="da/dae/modbus_8h_1afec312b4c8bf1dd2b9b68c21bbfd7450a5549ed95eb5fccae99b5ba7d3ef55d88" kindref="member">MODBUS_STATE_IDLE</ref>;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1a25ff31535482e4bb2b4835ff9ed66ee5" kindref="member">last_communication_time</ref><sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1a5e3059d398e534d01a730420495ab79f" kindref="member">modbus_current_state</ref><sp/>=<sp/><ref refid="da/dae/modbus_8h_1afec312b4c8bf1dd2b9b68c21bbfd7450a2556f398ffc8e2d0b8a59a881ff0051c" kindref="member">MODBUS_STATE_ERROR</ref>;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d00/modbus_8cpp_1a597eaa69c6f1718adc29b91dcd4cddbc" kindref="member">modbus_is_enabled</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d8/d00/modbus_8cpp_1a104086346bf05a48f455537637baa1f3" kindref="member">modbus_enabled</ref>;</highlight></codeline>
<codeline lineno="237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PRIVATE<sp/>FUNCTION<sp/>IMPLEMENTATIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="d8/d00/modbus_8cpp_1a1505fbc6dedb0a9f3516fb2aff8cfb5e" kindref="member">modbus_read_register_internal</ref>(uint16_t<sp/>address)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>System<sp/>Status<sp/>Registers<sp/>(0x0000-0x000F)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(address<sp/>&lt;=<sp/>0x000F)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/d1a/structmodbus__register__map__t" kindref="compound">modbus_register_map_t</ref>*<sp/><ref refid="db/d0f/modbus__register__manager_8cpp_1ab704923b41c873dce4dce6bae32a386d" kindref="member">register_map</ref><sp/>=<sp/><ref refid="d8/d00/modbus_8cpp_1aad9fe918741e66afae8c5aaacfc73e82" kindref="member">REGMAP</ref>();</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t*<sp/>status_regs<sp/>=<sp/>(uint16_t*)&amp;<ref refid="db/d0f/modbus__register__manager_8cpp_1ab704923b41c873dce4dce6bae32a386d" kindref="member">register_map</ref>-&gt;system_status;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status_regs[address];</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Global<sp/>Control<sp/>Registers<sp/>(0x0010-0x001F)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(address<sp/>&gt;=<sp/>0x0010<sp/>&amp;&amp;<sp/>address<sp/>&lt;=<sp/>0x001F)<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/d1a/structmodbus__register__map__t" kindref="compound">modbus_register_map_t</ref>*<sp/><ref refid="db/d0f/modbus__register__manager_8cpp_1ab704923b41c873dce4dce6bae32a386d" kindref="member">register_map</ref><sp/>=<sp/><ref refid="d8/d00/modbus_8cpp_1aad9fe918741e66afae8c5aaacfc73e82" kindref="member">REGMAP</ref>();</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t*<sp/>control_regs<sp/>=<sp/>(uint16_t*)&amp;<ref refid="db/d0f/modbus__register__manager_8cpp_1ab704923b41c873dce4dce6bae32a386d" kindref="member">register_map</ref>-&gt;global_control;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>control_regs[address<sp/>-<sp/>0x0010];</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Per-Sonicator<sp/>Registers<sp/>(0x0100-0x041F)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(address<sp/>&gt;=<sp/>0x0100<sp/>&amp;&amp;<sp/>address<sp/>&lt;=<sp/>0x041F)<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>sonicator_id<sp/>=<sp/>(address<sp/>-<sp/>0x0100)<sp/>/<sp/><ref refid="d4/d9a/modbus__registers_8h_1a49b04e457218d872167de9d4cb98eca6" kindref="member">MODBUS_REG_SONICATOR_STRIDE</ref>;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>reg_offset<sp/>=<sp/>(address<sp/>-<sp/>0x0100)<sp/>%<sp/><ref refid="d4/d9a/modbus__registers_8h_1a49b04e457218d872167de9d4cb98eca6" kindref="member">MODBUS_REG_SONICATOR_STRIDE</ref>;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sonicator_id<sp/>&lt;<sp/><ref refid="d4/d9a/modbus__registers_8h_1a82619b7f1a537ff2798d4f5658318761" kindref="member">MODBUS_MAX_SONICATORS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/d1a/structmodbus__register__map__t" kindref="compound">modbus_register_map_t</ref>*<sp/><ref refid="db/d0f/modbus__register__manager_8cpp_1ab704923b41c873dce4dce6bae32a386d" kindref="member">register_map</ref><sp/>=<sp/><ref refid="d8/d00/modbus_8cpp_1aad9fe918741e66afae8c5aaacfc73e82" kindref="member">REGMAP</ref>();</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t*<sp/>son_regs<sp/>=<sp/>(uint16_t*)&amp;<ref refid="db/d0f/modbus__register__manager_8cpp_1ab704923b41c873dce4dce6bae32a386d" kindref="member">register_map</ref>-&gt;sonicators[sonicator_id];</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>son_regs[reg_offset];</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>callback<sp/>if<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d8/d00/modbus_8cpp_1a66193f2ecdb36e7c08aae865766630a0" kindref="member">modbus_config</ref>.read_callback)<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>value<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d8/d00/modbus_8cpp_1a66193f2ecdb36e7c08aae865766630a0" kindref="member">modbus_config</ref>.read_callback(address,<sp/>&amp;value)<sp/>==<sp/><ref refid="da/dae/modbus_8h_1a2e498f171730dc5b51e62483fe2f977eafbb178df49063323a6dcbf03dd0d88d2" kindref="member">MODBUS_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Default<sp/>value<sp/>for<sp/>invalid<sp/>addresses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d00/modbus_8cpp_1a4319b53b6b2a269db6659e79502ccceb" kindref="member">modbus_write_register_internal</ref>(uint16_t<sp/>address,<sp/>uint16_t<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Global<sp/>Control<sp/>Registers<sp/>(0x0010-0x001F)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(address<sp/>&gt;=<sp/>0x0010<sp/>&amp;&amp;<sp/>address<sp/>&lt;=<sp/>0x001F)<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/d1a/structmodbus__register__map__t" kindref="compound">modbus_register_map_t</ref>*<sp/><ref refid="db/d0f/modbus__register__manager_8cpp_1ab704923b41c873dce4dce6bae32a386d" kindref="member">register_map</ref><sp/>=<sp/><ref refid="d8/d00/modbus_8cpp_1aad9fe918741e66afae8c5aaacfc73e82" kindref="member">REGMAP</ref>();</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t*<sp/>control_regs<sp/>=<sp/>(uint16_t*)&amp;<ref refid="db/d0f/modbus__register__manager_8cpp_1ab704923b41c873dce4dce6bae32a386d" kindref="member">register_map</ref>-&gt;global_control;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>control_regs[address<sp/>-<sp/>0x0010]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>special<sp/>control<sp/>commands</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(address)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d5/d0f/group__global__control__registers_1gaa7bc9f873d93d522cb31d1ab66400555" kindref="member">MODBUS_REG_GLOBAL_ENABLE</ref>:</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value)<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/d1a/structmodbus__register__map__t" kindref="compound">modbus_register_map_t</ref>*<sp/><ref refid="db/d0f/modbus__register__manager_8cpp_1ab704923b41c873dce4dce6bae32a386d" kindref="member">register_map</ref><sp/>=<sp/><ref refid="d8/d00/modbus_8cpp_1aad9fe918741e66afae8c5aaacfc73e82" kindref="member">REGMAP</ref>();</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/d0f/modbus__register__manager_8cpp_1ab704923b41c873dce4dce6bae32a386d" kindref="member">register_map</ref>-&gt;system_status.system_status<sp/>|=<sp/><ref refid="d4/d9a/modbus__registers_8h_1ad524cda9b661253eee2af59560c51fb7" kindref="member">SYSTEM_STATUS_OK</ref>;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/d1a/structmodbus__register__map__t" kindref="compound">modbus_register_map_t</ref>*<sp/><ref refid="db/d0f/modbus__register__manager_8cpp_1ab704923b41c873dce4dce6bae32a386d" kindref="member">register_map</ref><sp/>=<sp/><ref refid="d8/d00/modbus_8cpp_1aad9fe918741e66afae8c5aaacfc73e82" kindref="member">REGMAP</ref>();</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/d0f/modbus__register__manager_8cpp_1ab704923b41c873dce4dce6bae32a386d" kindref="member">register_map</ref>-&gt;system_status.system_status<sp/>&amp;=<sp/><ref refid="d4/d9a/modbus__registers_8h_1ad524cda9b661253eee2af59560c51fb7" kindref="member">~SYSTEM_STATUS_OK</ref>;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Snapshot<sp/>a<sp/>normal<sp/>shutdown<sp/>event<sp/>if<sp/>disabling<sp/>globally</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/d0f/modbus__register__manager_8cpp_1ab704923b41c873dce4dce6bae32a386d" kindref="member">register_map</ref>-&gt;system_status.prev_active_mask<sp/>=<sp/><ref refid="db/d0f/modbus__register__manager_8cpp_1ab704923b41c873dce4dce6bae32a386d" kindref="member">register_map</ref>-&gt;system_status.active_mask;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/d0f/modbus__register__manager_8cpp_1ab704923b41c873dce4dce6bae32a386d" kindref="member">register_map</ref>-&gt;system_status.last_shutdown_reason<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>normal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d5/d0f/group__global__control__registers_1ga5f7977d9e3f6247551f1eae1b0c6abab" kindref="member">MODBUS_REG_EMERGENCY_STOP</ref>:</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value)<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/d1a/structmodbus__register__map__t" kindref="compound">modbus_register_map_t</ref>*<sp/><ref refid="db/d0f/modbus__register__manager_8cpp_1ab704923b41c873dce4dce6bae32a386d" kindref="member">register_map</ref><sp/>=<sp/><ref refid="d8/d00/modbus_8cpp_1aad9fe918741e66afae8c5aaacfc73e82" kindref="member">REGMAP</ref>();</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/d0f/modbus__register__manager_8cpp_1ab704923b41c873dce4dce6bae32a386d" kindref="member">register_map</ref>-&gt;system_status.system_status<sp/>|=<sp/><ref refid="d4/d9a/modbus__registers_8h_1a45bea6277e05c6ef5b746c7244cf6ee0" kindref="member">SYSTEM_STATUS_EMERGENCY_STOP</ref>;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Snapshot<sp/>previous-state<sp/>context<sp/>for<sp/>diagnostics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/d0f/modbus__register__manager_8cpp_1ab704923b41c873dce4dce6bae32a386d" kindref="member">register_map</ref>-&gt;system_status.prev_active_mask<sp/>=<sp/><ref refid="db/d0f/modbus__register__manager_8cpp_1ab704923b41c873dce4dce6bae32a386d" kindref="member">register_map</ref>-&gt;system_status.active_mask;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/d0f/modbus__register__manager_8cpp_1ab704923b41c873dce4dce6bae32a386d" kindref="member">register_map</ref>-&gt;system_status.last_shutdown_reason<sp/>=<sp/>3;<sp/></highlight><highlight class="comment">//<sp/>e-stop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Persist<sp/>per-unit<sp/>previous<sp/>state<sp/>and<sp/>amplitude</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="d4/d9a/modbus__registers_8h_1a82619b7f1a537ff2798d4f5658318761" kindref="member">MODBUS_MAX_SONICATORS</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>flags<sp/>=<sp/><ref refid="db/d0f/modbus__register__manager_8cpp_1ab704923b41c873dce4dce6bae32a386d" kindref="member">register_map</ref>-&gt;sonicators[i].status_flags;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>running<sp/>=<sp/>(flags<sp/>&amp;<sp/><ref refid="d4/d9a/modbus__registers_8h_1aee1bf5e1be326c7918d8c78d21020a0e" kindref="member">SON_STATUS_RUNNING</ref>)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/d0f/modbus__register__manager_8cpp_1ab704923b41c873dce4dce6bae32a386d" kindref="member">register_map</ref>-&gt;sonicators[i].prev_state<sp/>=<sp/>running<sp/>?<sp/>2<sp/></highlight><highlight class="comment">/*RUNNING*/</highlight><highlight class="normal"><sp/>:<sp/>0<sp/></highlight><highlight class="comment">/*STOPPED*/</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/d0f/modbus__register__manager_8cpp_1ab704923b41c873dce4dce6bae32a386d" kindref="member">register_map</ref>-&gt;sonicators[i].persisted_amplitude<sp/>=<sp/><ref refid="db/d0f/modbus__register__manager_8cpp_1ab704923b41c873dce4dce6bae32a386d" kindref="member">register_map</ref>-&gt;sonicators[i].amplitude_setpoint;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Leave<sp/>last_fault_code/timestamp<sp/>as-is<sp/>for<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="d5/d0f/group__global__control__registers_1ga28130f05fa4a0281529738c0e7956487" kindref="member">MODBUS_REG_TEST_START_INHIBIT</ref>:<sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>per-unit<sp/>start<sp/>inhibit<sp/>based<sp/>on<sp/>bitmask<sp/>b0..b3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>mask<sp/>=<sp/>value<sp/>&amp;<sp/>0x000F;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inhibit<sp/>=<sp/>((mask<sp/>&gt;&gt;<sp/>i)<sp/>&amp;<sp/>0x1u)<sp/>!=<sp/>0u;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multi_sonicator_set_start_inhibit(i,<sp/>inhibit);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Per-Sonicator<sp/>Control<sp/>Registers<sp/>(0xN00-0xN0F)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(address<sp/>&gt;=<sp/>0x0100<sp/>&amp;&amp;<sp/>address<sp/>&lt;=<sp/>0x041F)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>sonicator_id<sp/>=<sp/>(address<sp/>-<sp/>0x0100)<sp/>/<sp/><ref refid="d4/d9a/modbus__registers_8h_1a49b04e457218d872167de9d4cb98eca6" kindref="member">MODBUS_REG_SONICATOR_STRIDE</ref>;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>reg_offset<sp/>=<sp/>(address<sp/>-<sp/>0x0100)<sp/>%<sp/><ref refid="d4/d9a/modbus__registers_8h_1a49b04e457218d872167de9d4cb98eca6" kindref="member">MODBUS_REG_SONICATOR_STRIDE</ref>;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sonicator_id<sp/>&lt;<sp/><ref refid="d4/d9a/modbus__registers_8h_1a82619b7f1a537ff2798d4f5658318761" kindref="member">MODBUS_MAX_SONICATORS</ref><sp/>&amp;&amp;<sp/>reg_offset<sp/>&lt;<sp/>0x10)<sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/d1a/structmodbus__register__map__t" kindref="compound">modbus_register_map_t</ref>*<sp/><ref refid="db/d0f/modbus__register__manager_8cpp_1ab704923b41c873dce4dce6bae32a386d" kindref="member">register_map</ref><sp/>=<sp/><ref refid="d8/d00/modbus_8cpp_1aad9fe918741e66afae8c5aaacfc73e82" kindref="member">REGMAP</ref>();</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t*<sp/>son_regs<sp/>=<sp/>(uint16_t*)&amp;<ref refid="db/d0f/modbus__register__manager_8cpp_1ab704923b41c873dce4dce6bae32a386d" kindref="member">register_map</ref>-&gt;sonicators[sonicator_id];</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>son_regs[reg_offset]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Map<sp/>per-unit<sp/>start/stop<sp/>control<sp/>to<sp/>multi-unit<sp/>controller</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reg_offset<sp/>==<sp/><ref refid="d4/d9a/modbus__registers_8h_1a7c0241be1c209f82af3c322fc38a3e7d" kindref="member">MODBUS_REG_SON_START_STOP</ref>)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)multi_sonicator_request_unit_start((uint8_t)sonicator_id);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)multi_sonicator_request_unit_stop((uint8_t)sonicator_id);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>callback<sp/>if<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d8/d00/modbus_8cpp_1a66193f2ecdb36e7c08aae865766630a0" kindref="member">modbus_config</ref>.write_callback)<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="d8/d00/modbus_8cpp_1a66193f2ecdb36e7c08aae865766630a0" kindref="member">modbus_config</ref>.write_callback(address,<sp/>value)<sp/>==<sp/><ref refid="da/dae/modbus_8h_1a2e498f171730dc5b51e62483fe2f977eafbb178df49063323a6dcbf03dd0d88d2" kindref="member">MODBUS_OK</ref>);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="361"><highlight class="normal">}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d00/modbus_8cpp_1abc2e936e610ff1ff83ddf842a1426464" kindref="member">modbus_update_statistics</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1ab53f4bfea0ccc98c591cf1e679f72db4" kindref="member">modbus_stats</ref>.responses_sent++;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>response_time<sp/>=<sp/>millis()<sp/>-<sp/><ref refid="d8/d00/modbus_8cpp_1a33dc1347e05a0883f55b4489e8ae3b76" kindref="member">request_start_time</ref>;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(response_time<sp/>&gt;<sp/><ref refid="d8/d00/modbus_8cpp_1ab53f4bfea0ccc98c591cf1e679f72db4" kindref="member">modbus_stats</ref>.max_response_time)<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1ab53f4bfea0ccc98c591cf1e679f72db4" kindref="member">modbus_stats</ref>.max_response_time<sp/>=<sp/>response_time;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1ab53f4bfea0ccc98c591cf1e679f72db4" kindref="member">modbus_stats</ref>.last_request_time<sp/>=<sp/><ref refid="d8/d00/modbus_8cpp_1a33dc1347e05a0883f55b4489e8ae3b76" kindref="member">request_start_time</ref>;</highlight></codeline>
<codeline lineno="372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d00/modbus_8cpp_1a79d6003f903330ac2ea01fbb7f99cd18" kindref="member">modbus_handle_timeout</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1ab53f4bfea0ccc98c591cf1e679f72db4" kindref="member">modbus_stats</ref>.timeout_errors++;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1a5e3059d398e534d01a730420495ab79f" kindref="member">modbus_current_state</ref><sp/>=<sp/><ref refid="da/dae/modbus_8h_1afec312b4c8bf1dd2b9b68c21bbfd7450a33f1a1b3e94766200bc586cbfab5c909" kindref="member">MODBUS_STATE_TIMEOUT</ref>;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/d1a/structmodbus__register__map__t" kindref="compound">modbus_register_map_t</ref>*<sp/><ref refid="db/d0f/modbus__register__manager_8cpp_1ab704923b41c873dce4dce6bae32a386d" kindref="member">register_map</ref><sp/>=<sp/><ref refid="d8/d00/modbus_8cpp_1aad9fe918741e66afae8c5aaacfc73e82" kindref="member">REGMAP</ref>();</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d0f/modbus__register__manager_8cpp_1ab704923b41c873dce4dce6bae32a386d" kindref="member">register_map</ref>-&gt;system_status.system_status<sp/>|=<sp/><ref refid="d4/d9a/modbus__registers_8h_1a837d78990d3a8326898c3a8980c223ff" kindref="member">SYSTEM_STATUS_COMM_FAULT</ref>;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d0f/modbus__register__manager_8cpp_1ab704923b41c873dce4dce6bae32a386d" kindref="member">register_map</ref>-&gt;system_status.comm_errors++;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d8/d00/modbus_8cpp_1a66193f2ecdb36e7c08aae865766630a0" kindref="member">modbus_config</ref>.timeout_callback)<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1a66193f2ecdb36e7c08aae865766630a0" kindref="member">modbus_config</ref>.timeout_callback();</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal">}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d00/modbus_8cpp_1a85cd4b12a6c9f4a25584a62222a2f23d" kindref="member">modbus_handle_error</ref>(<ref refid="da/dae/modbus_8h_1a2e498f171730dc5b51e62483fe2f977e" kindref="member">modbus_error_t</ref><sp/>error)<sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1a5e3059d398e534d01a730420495ab79f" kindref="member">modbus_current_state</ref><sp/>=<sp/><ref refid="da/dae/modbus_8h_1afec312b4c8bf1dd2b9b68c21bbfd7450a2556f398ffc8e2d0b8a59a881ff0051c" kindref="member">MODBUS_STATE_ERROR</ref>;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(error)<sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="da/dae/modbus_8h_1a2e498f171730dc5b51e62483fe2f977ea30e0fa05d0cd54528b75d0b1a217ca99" kindref="member">MODBUS_ERROR_CRC</ref>:</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1ab53f4bfea0ccc98c591cf1e679f72db4" kindref="member">modbus_stats</ref>.crc_errors++;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="da/dae/modbus_8h_1a2e498f171730dc5b51e62483fe2f977ea5170c8fd52bca089584396b5afecea31" kindref="member">MODBUS_ERROR_ILLEGAL_FUNCTION</ref>:</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1ab53f4bfea0ccc98c591cf1e679f72db4" kindref="member">modbus_stats</ref>.illegal_function_errors++;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="da/dae/modbus_8h_1a2e498f171730dc5b51e62483fe2f977ea0f4d5543accf517df02f9ace9bba8472" kindref="member">MODBUS_ERROR_ILLEGAL_ADDRESS</ref>:</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1ab53f4bfea0ccc98c591cf1e679f72db4" kindref="member">modbus_stats</ref>.illegal_address_errors++;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="da/dae/modbus_8h_1a2e498f171730dc5b51e62483fe2f977ea6004e8d1493f3ffab63af86f76b3d072" kindref="member">MODBUS_ERROR_SLAVE_FAILURE</ref>:</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1ab53f4bfea0ccc98c591cf1e679f72db4" kindref="member">modbus_stats</ref>.slave_failure_errors++;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d8/d00/modbus_8cpp_1a66193f2ecdb36e7c08aae865766630a0" kindref="member">modbus_config</ref>.error_callback)<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1a66193f2ecdb36e7c08aae865766630a0" kindref="member">modbus_config</ref>.error_callback(error);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNIT_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d00/modbus_8cpp_1a3fbcd7eae5e87852813f39c625fbc64a" kindref="member">modbus_validate_frame</ref>(uint8_t*<sp/>frame,<sp/>uint16_t<sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!frame<sp/>||<sp/>length<sp/>&lt;<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>slave<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frame[0]<sp/>!=<sp/><ref refid="d8/d00/modbus_8cpp_1a66193f2ecdb36e7c08aae865766630a0" kindref="member">modbus_config</ref>.slave_id)<sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>CRC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>received_crc<sp/>=<sp/>(frame[length-1]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>frame[length-2];</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>calculated_crc<sp/>=<sp/><ref refid="d8/d00/modbus_8cpp_1a7fd85103f18a4fd1c2e58d69470088e3" kindref="member">modbus_calculate_crc</ref>(frame,<sp/>length-2);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(received_crc<sp/>!=<sp/>calculated_crc)<sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1ab53f4bfea0ccc98c591cf1e679f72db4" kindref="member">modbus_stats</ref>.crc_errors++;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1ab53f4bfea0ccc98c591cf1e679f72db4" kindref="member">modbus_stats</ref>.requests_received++;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="434"><highlight class="normal">}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="d8/d00/modbus_8cpp_1a7e73a6a0501d70ea806614da27f12a0e" kindref="member">modbus_process_frame</ref>(uint8_t*<sp/>frame,<sp/>uint16_t<sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)length;<sp/></highlight><highlight class="comment">//<sp/>Suppress<sp/>unused<sp/>parameter<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1a33dc1347e05a0883f55b4489e8ae3b76" kindref="member">request_start_time</ref><sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>function_code<sp/>=<sp/>frame[1];</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>response_length<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>response<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1ae840344c23f22df92cf8c83b4e69c26b" kindref="member">tx_buffer</ref>[0]<sp/>=<sp/><ref refid="d8/d00/modbus_8cpp_1a66193f2ecdb36e7c08aae865766630a0" kindref="member">modbus_config</ref>.slave_id;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1ae840344c23f22df92cf8c83b4e69c26b" kindref="member">tx_buffer</ref>[1]<sp/>=<sp/>function_code;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(function_code)<sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="da/dae/modbus_8h_1acd8df4bf20e3cb7820977f5615c437b7" kindref="member">MODBUS_FC_READ_HOLDING</ref>:<sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>start_addr<sp/>=<sp/>(frame[2]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>frame[3];</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>count<sp/>=<sp/>(frame[4]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>frame[5];</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count<sp/>&gt;<sp/>125)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Maximum<sp/>registers<sp/>per<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1ae840344c23f22df92cf8c83b4e69c26b" kindref="member">tx_buffer</ref>[1]<sp/>|=<sp/>0x80;<sp/></highlight><highlight class="comment">//<sp/>Error<sp/>response</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1ae840344c23f22df92cf8c83b4e69c26b" kindref="member">tx_buffer</ref>[2]<sp/>=<sp/><ref refid="da/dae/modbus_8h_1a2e498f171730dc5b51e62483fe2f977eac6009826490fee81b3373ca8142ae9d3" kindref="member">MODBUS_ERROR_ILLEGAL_VALUE</ref>;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_length<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1ae840344c23f22df92cf8c83b4e69c26b" kindref="member">tx_buffer</ref>[2]<sp/>=<sp/>count<sp/>*<sp/>2;<sp/></highlight><highlight class="comment">//<sp/>Byte<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_length<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint16_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>count;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>addr<sp/>=<sp/>start_addr<sp/>+<sp/>i;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d8/d00/modbus_8cpp_1a6c74499e6c161114e88e278d87fd3462" kindref="member">modbus_validate_address</ref>(addr,<sp/>function_code))<sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>value<sp/>=<sp/><ref refid="d8/d00/modbus_8cpp_1a1505fbc6dedb0a9f3516fb2aff8cfb5e" kindref="member">modbus_read_register_internal</ref>(addr);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1ae840344c23f22df92cf8c83b4e69c26b" kindref="member">tx_buffer</ref>[response_length++]<sp/>=<sp/>(value<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1ae840344c23f22df92cf8c83b4e69c26b" kindref="member">tx_buffer</ref>[response_length++]<sp/>=<sp/>value<sp/>&amp;<sp/>0xFF;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1ae840344c23f22df92cf8c83b4e69c26b" kindref="member">tx_buffer</ref>[1]<sp/>|=<sp/>0x80;<sp/></highlight><highlight class="comment">//<sp/>Error<sp/>response</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1ae840344c23f22df92cf8c83b4e69c26b" kindref="member">tx_buffer</ref>[2]<sp/>=<sp/><ref refid="da/dae/modbus_8h_1a2e498f171730dc5b51e62483fe2f977ea0f4d5543accf517df02f9ace9bba8472" kindref="member">MODBUS_ERROR_ILLEGAL_ADDRESS</ref>;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_length<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="da/dae/modbus_8h_1aa4f55f8699ff87400fbcdc849d9c7721" kindref="member">MODBUS_FC_WRITE_SINGLE</ref>:<sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>addr<sp/>=<sp/>(frame[2]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>frame[3];</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>value<sp/>=<sp/>(frame[4]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>frame[5];</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d8/d00/modbus_8cpp_1a6c74499e6c161114e88e278d87fd3462" kindref="member">modbus_validate_address</ref>(addr,<sp/>function_code))<sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d8/d00/modbus_8cpp_1a4319b53b6b2a269db6659e79502ccceb" kindref="member">modbus_write_register_internal</ref>(addr,<sp/>value))<sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Echo<sp/>request<sp/>for<sp/>successful<sp/>write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1ae840344c23f22df92cf8c83b4e69c26b" kindref="member">tx_buffer</ref>[2]<sp/>=<sp/>frame[2];</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1ae840344c23f22df92cf8c83b4e69c26b" kindref="member">tx_buffer</ref>[3]<sp/>=<sp/>frame[3];</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1ae840344c23f22df92cf8c83b4e69c26b" kindref="member">tx_buffer</ref>[4]<sp/>=<sp/>frame[4];</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1ae840344c23f22df92cf8c83b4e69c26b" kindref="member">tx_buffer</ref>[5]<sp/>=<sp/>frame[5];</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_length<sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1ae840344c23f22df92cf8c83b4e69c26b" kindref="member">tx_buffer</ref>[1]<sp/>|=<sp/>0x80;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1ae840344c23f22df92cf8c83b4e69c26b" kindref="member">tx_buffer</ref>[2]<sp/>=<sp/><ref refid="da/dae/modbus_8h_1a2e498f171730dc5b51e62483fe2f977ea6004e8d1493f3ffab63af86f76b3d072" kindref="member">MODBUS_ERROR_SLAVE_FAILURE</ref>;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_length<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1ae840344c23f22df92cf8c83b4e69c26b" kindref="member">tx_buffer</ref>[1]<sp/>|=<sp/>0x80;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1ae840344c23f22df92cf8c83b4e69c26b" kindref="member">tx_buffer</ref>[2]<sp/>=<sp/><ref refid="da/dae/modbus_8h_1a2e498f171730dc5b51e62483fe2f977ea0f4d5543accf517df02f9ace9bba8472" kindref="member">MODBUS_ERROR_ILLEGAL_ADDRESS</ref>;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_length<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1ae840344c23f22df92cf8c83b4e69c26b" kindref="member">tx_buffer</ref>[1]<sp/>|=<sp/>0x80;<sp/></highlight><highlight class="comment">//<sp/>Error<sp/>response</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1ae840344c23f22df92cf8c83b4e69c26b" kindref="member">tx_buffer</ref>[2]<sp/>=<sp/><ref refid="da/dae/modbus_8h_1a2e498f171730dc5b51e62483fe2f977ea5170c8fd52bca089584396b5afecea31" kindref="member">MODBUS_ERROR_ILLEGAL_FUNCTION</ref>;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_length<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>CRC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>crc<sp/>=<sp/><ref refid="d8/d00/modbus_8cpp_1a7fd85103f18a4fd1c2e58d69470088e3" kindref="member">modbus_calculate_crc</ref>(<ref refid="d8/d00/modbus_8cpp_1ae840344c23f22df92cf8c83b4e69c26b" kindref="member">tx_buffer</ref>,<sp/>response_length);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1ae840344c23f22df92cf8c83b4e69c26b" kindref="member">tx_buffer</ref>[response_length++]<sp/>=<sp/>crc<sp/>&amp;<sp/>0xFF;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1ae840344c23f22df92cf8c83b4e69c26b" kindref="member">tx_buffer</ref>[response_length++]<sp/>=<sp/>(crc<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d00/modbus_8cpp_1abc2e936e610ff1ff83ddf842a1426464" kindref="member">modbus_update_statistics</ref>();</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>response_length;</highlight></codeline>
<codeline lineno="518"><highlight class="normal">}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>!UNIT_TEST</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/modules/communication/modbus.cpp"/>
  </compounddef>
</doxygen>
