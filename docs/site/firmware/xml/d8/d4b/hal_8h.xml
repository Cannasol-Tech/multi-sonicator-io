<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="d8/d4b/hal_8h" kind="file" language="C++">
    <compoundname>hal.h</compoundname>
    <includes refid="d6/d7c/gpio_8h" local="yes">gpio.h</includes>
    <includes refid="d7/d19/adc_8h" local="yes">adc.h</includes>
    <includes refid="d6/db9/pwm_8h" local="yes">pwm.h</includes>
    <includes refid="d2/d86/uart_8h" local="yes">uart.h</includes>
    <includes refid="d5/dd0/timer_8h" local="yes">timer.h</includes>
    <includedby refid="dc/d16/sonicator_8h" local="yes">include/sonicator/sonicator.h</includedby>
    <includedby refid="d9/d49/types_8h" local="yes">include/types.h</includedby>
    <includedby refid="df/d0a/main_8cpp" local="yes">src/main.cpp</includedby>
    <includedby refid="dc/db6/hal_8cpp" local="yes">src/modules/hal/hal.cpp</includedby>
    <incdepgraph>
      <node id="5">
        <label>adc.h</label>
        <link refid="d7/d19/adc_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>gpio.h</label>
        <link refid="d6/d7c/gpio_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/modules/hal/hal.h</label>
        <link refid="d8/d4b/hal_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>pwm.h</label>
        <link refid="d6/db9/pwm_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>timer.h</label>
        <link refid="d5/dd0/timer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>uart.h</label>
        <link refid="d2/d86/uart_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>include/multiplexer/Multiplexer.h</label>
        <link refid="dc/dc2/_multiplexer_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>include/sonicator/sonicator.h</label>
        <link refid="dc/d16/sonicator_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>include/types.h</label>
        <link refid="d9/d49/types_8h"/>
      </node>
      <node id="4">
        <label>src/main.cpp</label>
        <link refid="df/d0a/main_8cpp"/>
      </node>
      <node id="5">
        <label>src/modules/control/Multiplexer.cpp</label>
        <link refid="d8/d25/_multiplexer_8cpp"/>
      </node>
      <node id="6">
        <label>src/modules/control/sonicator.cpp</label>
        <link refid="d2/db9/sonicator_8cpp"/>
      </node>
      <node id="8">
        <label>src/modules/hal/hal.cpp</label>
        <link refid="dc/db6/hal_8cpp"/>
      </node>
      <node id="1">
        <label>src/modules/hal/hal.h</label>
        <link refid="d8/d4b/hal_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="dc/db3/structhal__sonicator__control__t" prot="public">hal_sonicator_control_t</innerclass>
    <innerclass refid="db/de2/structhal__sonicator__status__t" prot="public">hal_sonicator_status_t</innerclass>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="d8/d4b/hal_8h_1ace8e76cd091b757cacd51778764dd9a6" prot="public" static="no" strong="no">
        <type></type>
        <name>hal_result_t</name>
        <enumvalue id="d8/d4b/hal_8h_1ace8e76cd091b757cacd51778764dd9a6a6eb724a07061d89a4a2052744e5a3632" prot="public">
          <name>HAL_OK</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d8/d4b/hal_8h_1ace8e76cd091b757cacd51778764dd9a6acba2484c22dba92b9ab60b25529fdd1e" prot="public">
          <name>HAL_ERROR_GPIO</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d8/d4b/hal_8h_1ace8e76cd091b757cacd51778764dd9a6a3ed53de8a6fc2a9d2a66095a69855a19" prot="public">
          <name>HAL_ERROR_ADC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d8/d4b/hal_8h_1ace8e76cd091b757cacd51778764dd9a6a5be823d22fb7a02a528e521b3ab94a41" prot="public">
          <name>HAL_ERROR_PWM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d8/d4b/hal_8h_1ace8e76cd091b757cacd51778764dd9a6a90f978522c052db2b4a0124a857c67d2" prot="public">
          <name>HAL_ERROR_UART</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d8/d4b/hal_8h_1ace8e76cd091b757cacd51778764dd9a6a2cb53ee1197de97e2955bad5703c71ae" prot="public">
          <name>HAL_ERROR_TIMER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d8/d4b/hal_8h_1ace8e76cd091b757cacd51778764dd9a6ae552acf3a79341e799cb04cf6db0ab2a" prot="public">
          <name>HAL_ERROR_NOT_INITIALIZED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>HAL system return codes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal.h" line="41" column="1" bodyfile="src/modules/hal/hal.h" bodystart="41" bodyend="49"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="d8/d4b/hal_8h_1a5db44754abe690dd04b3f2abe5a075c8" prot="public" static="no">
        <type><ref refid="db/de2/structhal__sonicator__status__t" kindref="compound">hal_sonicator_status_t</ref></type>
        <definition>typedef hal_sonicator_status_t sonicator_status_t</definition>
        <argsstring></argsstring>
        <name>sonicator_status_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal.h" line="141" column="32" bodyfile="src/modules/hal/hal.h" bodystart="141" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="d8/d4b/hal_8h_1aa09745b395496b11ba076700d91d8e21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d8/d4b/hal_8h_1ace8e76cd091b757cacd51778764dd9a6" kindref="member">hal_result_t</ref></type>
        <definition>hal_result_t hal_init</definition>
        <argsstring>(void)</argsstring>
        <name>hal_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize all HAL subsystems. </para>
        </briefdescription>
        <detaileddescription>
<para>Configures all hardware peripherals according to pin matrix specifications:<itemizedlist>
<listitem><para>GPIO pins for sonicator interfaces and status LED</para>
</listitem><listitem><para>ADC channels for power monitoring (5.44mV/W scaling)</para>
</listitem><listitem><para>PWM channel for amplitude control (0-10V output)</para>
</listitem><listitem><para>UART interface for MODBUS RTU at 115200 baud</para>
</listitem><listitem><para>Timer subsystems for scheduler and watchdog</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="return"><para>HAL_OK on success, error code on failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal.h" line="63" column="14" bodyfile="src/modules/hal/hal.cpp" bodystart="62" bodyend="100" declfile="src/modules/hal/hal.h" declline="63" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4b/hal_8h_1a6613a740f474578c7a3028157d453abe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d8/d4b/hal_8h_1ace8e76cd091b757cacd51778764dd9a6" kindref="member">hal_result_t</ref></type>
        <definition>hal_result_t hal_self_test</definition>
        <argsstring>(bool *gpio_ok, bool *adc_ok, bool *pwm_ok, bool *uart_ok, bool *timer_ok)</argsstring>
        <name>hal_self_test</name>
        <param>
          <type>bool *</type>
          <declname>gpio_ok</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>adc_ok</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>pwm_ok</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>uart_ok</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>timer_ok</declname>
        </param>
        <briefdescription>
<para>Perform HAL system self-test. </para>
        </briefdescription>
        <detaileddescription>
<para>Tests all HAL subsystems for proper operation:<itemizedlist>
<listitem><para>GPIO pin control and reading</para>
</listitem><listitem><para>ADC conversion accuracy</para>
</listitem><listitem><para>PWM frequency and duty cycle</para>
</listitem><listitem><para>UART loopback communication</para>
</listitem><listitem><para>Timer accuracy and scheduling</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gpio_ok</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store GPIO test result </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>adc_ok</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store ADC test result </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pwm_ok</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store PWM test result </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>uart_ok</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store UART test result </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timer_ok</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store Timer test result </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>HAL_OK on success, error code on failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal.h" line="82" column="14" bodyfile="src/modules/hal/hal.cpp" bodystart="102" bodyend="154" declfile="src/modules/hal/hal.h" declline="82" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4b/hal_8h_1abda7de3090b510179a16211a02b87bb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d8/d4b/hal_8h_1ace8e76cd091b757cacd51778764dd9a6" kindref="member">hal_result_t</ref></type>
        <definition>hal_result_t hal_get_status</definition>
        <argsstring>(bool *initialized, uint32_t *uptime_ms, uint16_t *errors)</argsstring>
        <name>hal_get_status</name>
        <param>
          <type>bool *</type>
          <declname>initialized</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>uptime_ms</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>errors</declname>
        </param>
        <briefdescription>
<para>Get HAL system status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>initialized</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store initialization status </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>uptime_ms</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store system uptime </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>errors</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store error count </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>HAL_OK on success, error code on failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal.h" line="93" column="14" bodyfile="src/modules/hal/hal.cpp" bodystart="156" bodyend="176" declfile="src/modules/hal/hal.h" declline="93" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4b/hal_8h_1ac4d228c6c0dea1248daddffa2b8cc6aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d8/d4b/hal_8h_1ace8e76cd091b757cacd51778764dd9a6" kindref="member">hal_result_t</ref></type>
        <definition>hal_result_t hal_clear_errors</definition>
        <argsstring>(void)</argsstring>
        <name>hal_clear_errors</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Reset HAL error counters. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>HAL_OK on success, error code on failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal.h" line="100" column="14" bodyfile="src/modules/hal/hal.cpp" bodystart="178" bodyend="189" declfile="src/modules/hal/hal.h" declline="100" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4b/hal_8h_1a5b5e63353fed4bfb72b1509fab9b3d40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d8/d4b/hal_8h_1ace8e76cd091b757cacd51778764dd9a6" kindref="member">hal_result_t</ref></type>
        <definition>hal_result_t hal_emergency_shutdown</definition>
        <argsstring>(void)</argsstring>
        <name>hal_emergency_shutdown</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Emergency shutdown of all HAL subsystems. </para>
        </briefdescription>
        <detaileddescription>
<para>Safely disables all outputs and sets hardware to safe state:<itemizedlist>
<listitem><para>Stop all sonicators (GPIO outputs LOW)</para>
</listitem><listitem><para>Set amplitude to minimum (20%)</para>
</listitem><listitem><para>Disable PWM output</para>
</listitem><listitem><para>Flush UART buffers</para>
</listitem><listitem><para>Reset watchdog timer</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="return"><para>HAL_OK on success, error code on failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal.h" line="114" column="14" bodyfile="src/modules/hal/hal.cpp" bodystart="191" bodyend="216" declfile="src/modules/hal/hal.h" declline="114" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4b/hal_8h_1ae2a8edd9f82c37d2c8b8380df50f6d38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d8/d4b/hal_8h_1ace8e76cd091b757cacd51778764dd9a6" kindref="member">hal_result_t</ref></type>
        <definition>hal_result_t hal_control_sonicator</definition>
        <argsstring>(uint8_t sonicator_id, const hal_sonicator_control_t *control)</argsstring>
        <name>hal_control_sonicator</name>
        <param>
          <type>uint8_t</type>
          <declname>sonicator_id</declname>
        </param>
        <param>
          <type>const <ref refid="dc/db3/structhal__sonicator__control__t" kindref="compound">hal_sonicator_control_t</ref> *</type>
          <declname>control</declname>
        </param>
        <briefdescription>
<para>Control single sonicator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sonicator_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Sonicator number (1-4) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>control</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to control structure </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>HAL_OK on success, error code on failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal.h" line="152" column="14" bodyfile="src/modules/hal/hal.cpp" bodystart="222" bodyend="264" declfile="src/modules/hal/hal.h" declline="152" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4b/hal_8h_1a16dae83a26a56a47a0c33b338ae89912" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d8/d4b/hal_8h_1ace8e76cd091b757cacd51778764dd9a6" kindref="member">hal_result_t</ref></type>
        <definition>hal_result_t hal_read_sonicator_status</definition>
        <argsstring>(uint8_t sonicator_id, hal_sonicator_status_t *status)</argsstring>
        <name>hal_read_sonicator_status</name>
        <param>
          <type>uint8_t</type>
          <declname>sonicator_id</declname>
        </param>
        <param>
          <type><ref refid="db/de2/structhal__sonicator__status__t" kindref="compound">hal_sonicator_status_t</ref> *</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>Read single sonicator status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sonicator_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Sonicator number (1-4) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to status structure </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>HAL_OK on success, error code on failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal.h" line="161" column="14" bodyfile="src/modules/hal/hal.cpp" bodystart="266" bodyend="305" declfile="src/modules/hal/hal.h" declline="161" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4b/hal_8h_1a7d63b7145ac96884c17789dfa39f93e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d8/d4b/hal_8h_1ace8e76cd091b757cacd51778764dd9a6" kindref="member">hal_result_t</ref></type>
        <definition>hal_result_t hal_control_all_sonicators</definition>
        <argsstring>(const hal_sonicator_control_t control_array[4])</argsstring>
        <name>hal_control_all_sonicators</name>
        <param>
          <type>const <ref refid="dc/db3/structhal__sonicator__control__t" kindref="compound">hal_sonicator_control_t</ref></type>
          <declname>control_array</declname>
          <array>[4]</array>
        </param>
        <briefdescription>
<para>Control all sonicators simultaneously. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>control_array</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of 4 control structures </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>HAL_OK on success, error code on failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal.h" line="169" column="14" bodyfile="src/modules/hal/hal.cpp" bodystart="307" bodyend="327" declfile="src/modules/hal/hal.h" declline="169" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4b/hal_8h_1aeb293a50a4363248f9353779707c5837" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d8/d4b/hal_8h_1ace8e76cd091b757cacd51778764dd9a6" kindref="member">hal_result_t</ref></type>
        <definition>hal_result_t hal_read_all_sonicator_status</definition>
        <argsstring>(hal_sonicator_status_t status_array[4])</argsstring>
        <name>hal_read_all_sonicator_status</name>
        <param>
          <type><ref refid="db/de2/structhal__sonicator__status__t" kindref="compound">hal_sonicator_status_t</ref></type>
          <declname>status_array</declname>
          <array>[4]</array>
        </param>
        <briefdescription>
<para>Read all sonicator statuses. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>status_array</parametername>
</parameternamelist>
<parameterdescription>
<para>Array to store 4 status structures </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>HAL_OK on success, error code on failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal.h" line="177" column="14" bodyfile="src/modules/hal/hal.cpp" bodystart="329" bodyend="349" declfile="src/modules/hal/hal.h" declline="177" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/d4b/hal_8h_1a42682f6be8bc89646e8cb60411e1dded" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d8/d4b/hal_8h_1ace8e76cd091b757cacd51778764dd9a6" kindref="member">hal_result_t</ref></type>
        <definition>hal_result_t hal_emergency_stop_all</definition>
        <argsstring>(void)</argsstring>
        <name>hal_emergency_stop_all</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Emergency stop all sonicators. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>HAL_OK on success, error code on failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal.h" line="184" column="14" bodyfile="src/modules/hal/hal.cpp" bodystart="351" bodyend="365" declfile="src/modules/hal/hal.h" declline="184" declcolumn="14"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Hardware Abstraction Layer Master Header for ATmega32A. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Cannasol Technologies </para>
</simplesect>
<simplesect kind="date"><para>2025-09-02 </para>
</simplesect>
<simplesect kind="version"><para>1.0.0</para>
</simplesect>
Master header file that includes all HAL modules for the Multi-Sonicator I/O Controller. Provides unified interface to hardware peripherals.</para>
<para>Includes:<itemizedlist>
<listitem><para>GPIO: Digital I/O control for sonicator interfaces</para>
</listitem><listitem><para>ADC: Analog-to-digital conversion for power monitoring</para>
</listitem><listitem><para>PWM: Pulse-width modulation for amplitude control</para>
</listitem><listitem><para>UART: Serial communication for MODBUS RTU</para>
</listitem><listitem><para>Timer: System timing and scheduler support </para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HAL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>all<sp/>HAL<sp/>modules</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d6/d7c/gpio_8h" kindref="compound">gpio.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d7/d19/adc_8h" kindref="compound">adc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d6/db9/pwm_8h" kindref="compound">pwm.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d2/d86/uart_8h" kindref="compound">uart.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d5/dd0/timer_8h" kindref="compound">timer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MASTER<sp/>HAL<sp/>INTERFACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="d8/d4b/hal_8h_1ace8e76cd091b757cacd51778764dd9a6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="42" refid="d8/d4b/hal_8h_1ace8e76cd091b757cacd51778764dd9a6a6eb724a07061d89a4a2052744e5a3632" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d4b/hal_8h_1ace8e76cd091b757cacd51778764dd9a6a6eb724a07061d89a4a2052744e5a3632" kindref="member">HAL_OK</ref><sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//&lt;<sp/>All<sp/>operations<sp/>successful</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="d8/d4b/hal_8h_1ace8e76cd091b757cacd51778764dd9a6acba2484c22dba92b9ab60b25529fdd1e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d4b/hal_8h_1ace8e76cd091b757cacd51778764dd9a6acba2484c22dba92b9ab60b25529fdd1e" kindref="member">HAL_ERROR_GPIO</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//&lt;<sp/>GPIO<sp/>subsystem<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="d8/d4b/hal_8h_1ace8e76cd091b757cacd51778764dd9a6a3ed53de8a6fc2a9d2a66095a69855a19" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d4b/hal_8h_1ace8e76cd091b757cacd51778764dd9a6a3ed53de8a6fc2a9d2a66095a69855a19" kindref="member">HAL_ERROR_ADC</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//&lt;<sp/>ADC<sp/>subsystem<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="d8/d4b/hal_8h_1ace8e76cd091b757cacd51778764dd9a6a5be823d22fb7a02a528e521b3ab94a41" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d4b/hal_8h_1ace8e76cd091b757cacd51778764dd9a6a5be823d22fb7a02a528e521b3ab94a41" kindref="member">HAL_ERROR_PWM</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//&lt;<sp/>PWM<sp/>subsystem<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="d8/d4b/hal_8h_1ace8e76cd091b757cacd51778764dd9a6a90f978522c052db2b4a0124a857c67d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d4b/hal_8h_1ace8e76cd091b757cacd51778764dd9a6a90f978522c052db2b4a0124a857c67d2" kindref="member">HAL_ERROR_UART</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//&lt;<sp/>UART<sp/>subsystem<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="d8/d4b/hal_8h_1ace8e76cd091b757cacd51778764dd9a6a2cb53ee1197de97e2955bad5703c71ae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d4b/hal_8h_1ace8e76cd091b757cacd51778764dd9a6a2cb53ee1197de97e2955bad5703c71ae" kindref="member">HAL_ERROR_TIMER</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//&lt;<sp/>Timer<sp/>subsystem<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="d8/d4b/hal_8h_1ace8e76cd091b757cacd51778764dd9a6ae552acf3a79341e799cb04cf6db0ab2a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d4b/hal_8h_1ace8e76cd091b757cacd51778764dd9a6ae552acf3a79341e799cb04cf6db0ab2a" kindref="member">HAL_ERROR_NOT_INITIALIZED</ref><sp/><sp/><sp/></highlight><highlight class="comment">//&lt;<sp/>HAL<sp/>not<sp/>initialized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">}<sp/><ref refid="d8/d4b/hal_8h_1ace8e76cd091b757cacd51778764dd9a6" kindref="member">hal_result_t</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><ref refid="d8/d4b/hal_8h_1ace8e76cd091b757cacd51778764dd9a6" kindref="member">hal_result_t</ref><sp/><ref refid="d8/d4b/hal_8h_1aa09745b395496b11ba076700d91d8e21" kindref="member">hal_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><ref refid="d8/d4b/hal_8h_1ace8e76cd091b757cacd51778764dd9a6" kindref="member">hal_result_t</ref><sp/><ref refid="d8/d4b/hal_8h_1a6613a740f474578c7a3028157d453abe" kindref="member">hal_self_test</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>gpio_ok,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>adc_ok,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>pwm_ok,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>uart_ok,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>timer_ok);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><ref refid="d8/d4b/hal_8h_1ace8e76cd091b757cacd51778764dd9a6" kindref="member">hal_result_t</ref><sp/><ref refid="d8/d4b/hal_8h_1abda7de3090b510179a16211a02b87bb5" kindref="member">hal_get_status</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>initialized,<sp/>uint32_t*<sp/>uptime_ms,<sp/>uint16_t*<sp/>errors);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><ref refid="d8/d4b/hal_8h_1ace8e76cd091b757cacd51778764dd9a6" kindref="member">hal_result_t</ref><sp/><ref refid="d8/d4b/hal_8h_1ac4d228c6c0dea1248daddffa2b8cc6aa" kindref="member">hal_clear_errors</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><ref refid="d8/d4b/hal_8h_1ace8e76cd091b757cacd51778764dd9a6" kindref="member">hal_result_t</ref><sp/><ref refid="d8/d4b/hal_8h_1a5b5e63353fed4bfb72b1509fab9b3d40" kindref="member">hal_emergency_shutdown</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SONICATOR<sp/>CONTROL<sp/>CONVENIENCE<sp/>FUNCTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="dc/db3/structhal__sonicator__control__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="124" refid="dc/db3/structhal__sonicator__control__t_1af25ae7c9f5d33a3050683299573a5aa5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dc/db3/structhal__sonicator__control__t_1af25ae7c9f5d33a3050683299573a5aa5" kindref="member">start</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//&lt;<sp/>Start/stop<sp/>control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="dc/db3/structhal__sonicator__control__t_1a83b00527cf9f4faa7b432a17a074e076" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="dc/db3/structhal__sonicator__control__t_1a83b00527cf9f4faa7b432a17a074e076" kindref="member">amplitude_percent</ref>;<sp/><sp/></highlight><highlight class="comment">//&lt;<sp/>Amplitude<sp/>setting<sp/>(20-100%)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="dc/db3/structhal__sonicator__control__t_1a49c5360178bb28c7bd10af80c13cc1bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dc/db3/structhal__sonicator__control__t_1a49c5360178bb28c7bd10af80c13cc1bd" kindref="member">reset_overload</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//&lt;<sp/>Reset<sp/>overload<sp/>condition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal">}<sp/><ref refid="dc/db3/structhal__sonicator__control__t" kindref="compound">hal_sonicator_control_t</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="db/de2/structhal__sonicator__status__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="133" refid="db/de2/structhal__sonicator__status__t_1ad810674402bc9120308c6520a8daf0b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="db/de2/structhal__sonicator__status__t_1ad810674402bc9120308c6520a8daf0b3" kindref="member">overload</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//&lt;<sp/>Overload<sp/>condition<sp/>active</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="db/de2/structhal__sonicator__status__t_1acc85b706e836b26dd4f0c093ce4250d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="db/de2/structhal__sonicator__status__t_1acc85b706e836b26dd4f0c093ce4250d9" kindref="member">frequency_locked</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//&lt;<sp/>Frequency<sp/>lock<sp/>status</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="db/de2/structhal__sonicator__status__t_1a546e97d31b025a2ad2a120b390185e32" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="db/de2/structhal__sonicator__status__t_1a546e97d31b025a2ad2a120b390185e32" kindref="member">power_watts</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//&lt;<sp/>Current<sp/>power<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="db/de2/structhal__sonicator__status__t_1a21fb855fea6177f31698a437ab3e8ab0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="db/de2/structhal__sonicator__status__t_1a21fb855fea6177f31698a437ab3e8ab0" kindref="member">frequency_hz</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//&lt;<sp/>Operating<sp/>frequency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal">}<sp/><ref refid="db/de2/structhal__sonicator__status__t" kindref="compound">hal_sonicator_status_t</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Backward-compatibility<sp/>alias<sp/>for<sp/>legacy<sp/>C<sp/>tests<sp/>expecting<sp/>sonicator_status_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="d8/d4b/hal_8h_1a5db44754abe690dd04b3f2abe5a075c8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="db/de2/structhal__sonicator__status__t" kindref="compound">hal_sonicator_status_t</ref><sp/><ref refid="d8/d4b/hal_8h_1a5db44754abe690dd04b3f2abe5a075c8" kindref="member">sonicator_status_t</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><ref refid="d8/d4b/hal_8h_1ace8e76cd091b757cacd51778764dd9a6" kindref="member">hal_result_t</ref><sp/><ref refid="d8/d4b/hal_8h_1ae2a8edd9f82c37d2c8b8380df50f6d38" kindref="member">hal_control_sonicator</ref>(uint8_t<sp/>sonicator_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/db3/structhal__sonicator__control__t" kindref="compound">hal_sonicator_control_t</ref>*<sp/>control);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><ref refid="d8/d4b/hal_8h_1ace8e76cd091b757cacd51778764dd9a6" kindref="member">hal_result_t</ref><sp/><ref refid="d8/d4b/hal_8h_1a16dae83a26a56a47a0c33b338ae89912" kindref="member">hal_read_sonicator_status</ref>(uint8_t<sp/>sonicator_id,<sp/><ref refid="db/de2/structhal__sonicator__status__t" kindref="compound">hal_sonicator_status_t</ref>*<sp/>status);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><ref refid="d8/d4b/hal_8h_1ace8e76cd091b757cacd51778764dd9a6" kindref="member">hal_result_t</ref><sp/><ref refid="d8/d4b/hal_8h_1a7d63b7145ac96884c17789dfa39f93e7" kindref="member">hal_control_all_sonicators</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/db3/structhal__sonicator__control__t" kindref="compound">hal_sonicator_control_t</ref><sp/>control_array[4]);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><ref refid="d8/d4b/hal_8h_1ace8e76cd091b757cacd51778764dd9a6" kindref="member">hal_result_t</ref><sp/><ref refid="d8/d4b/hal_8h_1aeb293a50a4363248f9353779707c5837" kindref="member">hal_read_all_sonicator_status</ref>(<ref refid="db/de2/structhal__sonicator__status__t" kindref="compound">hal_sonicator_status_t</ref><sp/>status_array[4]);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><ref refid="d8/d4b/hal_8h_1ace8e76cd091b757cacd51778764dd9a6" kindref="member">hal_result_t</ref><sp/><ref refid="d8/d4b/hal_8h_1a42682f6be8bc89646e8cb60411e1dded" kindref="member">hal_emergency_stop_all</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>HAL_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/modules/hal/hal.h"/>
  </compounddef>
</doxygen>
