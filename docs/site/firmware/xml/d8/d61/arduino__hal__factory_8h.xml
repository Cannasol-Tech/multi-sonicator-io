<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="d8/d61/arduino__hal__factory_8h" kind="file" language="C++">
    <compoundname>arduino_hal_factory.h</compoundname>
    <includes refid="de/dca/hal__interfaces_8h" local="yes">hal_interfaces.h</includes>
    <includes refid="da/d18/arduino__hal__impl_8h" local="yes">arduino_hal_impl.h</includes>
    <incdepgraph>
      <node id="9">
        <label>adc.h</label>
        <link refid="d7/d19/adc_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/modules/hal/arduino/arduino_hal_factory.h</label>
        <link refid="d8/d61/arduino__hal__factory_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>arduino_hal_impl.h</label>
        <link refid="da/d18/arduino__hal__impl_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>atmega_hal_impl.h</label>
        <link refid="d2/d92/atmega__hal__impl_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>gpio.h</label>
        <link refid="d6/d7c/gpio_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>hal_interfaces.h</label>
        <link refid="de/dca/hal__interfaces_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>hal_template_interfaces.h</label>
        <link refid="de/d2b/hal__template__interfaces_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>mock_hal_impl.h</label>
        <link refid="de/d8d/mock__hal__impl_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>pwm.h</label>
        <link refid="d6/db9/pwm_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>timer.h</label>
        <link refid="d5/dd0/timer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>uart.h</label>
        <link refid="d2/d86/uart_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>Arduino.h</label>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="15">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="df/db4/class_arduino_gpio_port" prot="public">ArduinoGpioPort</innerclass>
    <innerclass refid="d4/d3b/class_arduino_adc_reader" prot="public">ArduinoAdcReader</innerclass>
    <innerclass refid="d5/d35/class_arduino_pwm_generator" prot="public">ArduinoPwmGenerator</innerclass>
    <innerclass refid="d4/d36/class_arduino_uart_port" prot="public">ArduinoUartPort</innerclass>
    <innerclass refid="d0/dc3/class_arduino_timer_manager" prot="public">ArduinoTimerManager</innerclass>
    <innerclass refid="de/dac/class_arduino_hal_factory" prot="public">ArduinoHalFactory</innerclass>
    <briefdescription>
<para>Arduino Framework HAL Factory Implementation. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Cannasol Technologies </para>
</simplesect>
<simplesect kind="date"><para>2025-09-16 </para>
</simplesect>
<simplesect kind="version"><para>1.0.0</para>
</simplesect>
Factory implementation for creating Arduino-based HAL instances. Uses the <ref refid="de/d93/class_arduino_hal" kindref="compound">ArduinoHal</ref> static methods to provide HAL functionality. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ARDUINO_HAL_FACTORY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARDUINO_HAL_FACTORY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="de/dca/hal__interfaces_8h" kindref="compound">hal_interfaces.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="da/d18/arduino__hal__impl_8h" kindref="compound">arduino_hal_impl.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ARDUINO<sp/>IMPLEMENTATIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="df/db4/class_arduino_gpio_port" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="df/db4/class_arduino_gpio_port" kindref="compound">ArduinoGpioPort</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="d4/d45/class_i_gpio_port" kindref="compound">IGpioPort</ref><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="27" refid="df/db4/class_arduino_gpio_port_1a01e379e5158fa903e4f328f3da566bea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="df/db4/class_arduino_gpio_port_1a01e379e5158fa903e4f328f3da566bea" kindref="member">init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d93/class_arduino_hal_1a8c5596b662c1beae30b1240cfbd46c40" kindref="member">ArduinoHal::gpioInit</ref>();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="df/db4/class_arduino_gpio_port_1aa3298d10dad3c5e494145f7b4592c7dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="df/db4/class_arduino_gpio_port_1aa3298d10dad3c5e494145f7b4592c7dc" kindref="member">setPinMode</ref>(uint8_t<sp/>pin,<sp/>uint8_t<sp/>mode)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d93/class_arduino_hal_1ada7f2fd634c1e1756712a009592b50fe" kindref="member">ArduinoHal::gpioSetPinMode</ref>(pin,<sp/>mode);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="df/db4/class_arduino_gpio_port_1a1878c348f3b3f780e54a77c66604f45f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="df/db4/class_arduino_gpio_port_1a1878c348f3b3f780e54a77c66604f45f" kindref="member">digitalWrite</ref>(uint8_t<sp/>pin,<sp/>uint8_t<sp/>value)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d93/class_arduino_hal_1a9a4025cc1f5b4a8efc49d2ab629049ef" kindref="member">ArduinoHal::gpioDigitalWrite</ref>(pin,<sp/>value);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="df/db4/class_arduino_gpio_port_1a65d8fb652e143817800204dbfb361a97" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="df/db4/class_arduino_gpio_port_1a65d8fb652e143817800204dbfb361a97" kindref="member">digitalRead</ref>(uint8_t<sp/>pin)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d93/class_arduino_hal_1a3682e266f0b5bf691cc441771a094ac7" kindref="member">ArduinoHal::gpioDigitalRead</ref>(pin);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="df/db4/class_arduino_gpio_port_1a196e9f3740ccdae19f32874261989f4e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="df/db4/class_arduino_gpio_port_1a196e9f3740ccdae19f32874261989f4e" kindref="member">togglePin</ref>(uint8_t<sp/>pin)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d93/class_arduino_hal_1af55a376f8b6f1f3a79ad0f6d1a5edb11" kindref="member">ArduinoHal::gpioTogglePin</ref>(pin);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="df/db4/class_arduino_gpio_port_1a9e3f3f0c67c3911c04c034be0a7803f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="df/db4/class_arduino_gpio_port_1a9e3f3f0c67c3911c04c034be0a7803f0" kindref="member">sonicatorStart</ref>(uint8_t<sp/>sonicator_id)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d93/class_arduino_hal_1a6c32e20b287e6b1d1cc242956739e0f0" kindref="member">ArduinoHal::gpioSonicatorStart</ref>(sonicator_id);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="df/db4/class_arduino_gpio_port_1a1241581e5fc7358f206df556179c6287" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="df/db4/class_arduino_gpio_port_1a1241581e5fc7358f206df556179c6287" kindref="member">sonicatorStop</ref>(uint8_t<sp/>sonicator_id)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d93/class_arduino_hal_1a7b514e9e851bb818b074ad997141ef88" kindref="member">ArduinoHal::gpioSonicatorStop</ref>(sonicator_id);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="df/db4/class_arduino_gpio_port_1a1d71b3013ee284f337ff2b1f8a17907e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="df/db4/class_arduino_gpio_port_1a1d71b3013ee284f337ff2b1f8a17907e" kindref="member">sonicatorReset</ref>(uint8_t<sp/>sonicator_id)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d93/class_arduino_hal_1ab36a59a29b62e3952234e6eb2a395250" kindref="member">ArduinoHal::gpioSonicatorReset</ref>(sonicator_id);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="df/db4/class_arduino_gpio_port_1ab17c7516207f01424ef1fb197f01e297" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="df/db4/class_arduino_gpio_port_1ab17c7516207f01424ef1fb197f01e297" kindref="member">sonicatorReadOverload</ref>(uint8_t<sp/>sonicator_id,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>state)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d93/class_arduino_hal_1a54e26f5d7aee110d559d68f8055906fe" kindref="member">ArduinoHal::gpioSonicatorReadOverload</ref>(sonicator_id,<sp/>state);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="df/db4/class_arduino_gpio_port_1a39c9be3bc1fd0262a16754830ccd5e2c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="df/db4/class_arduino_gpio_port_1a39c9be3bc1fd0262a16754830ccd5e2c" kindref="member">sonicatorReadFreqLock</ref>(uint8_t<sp/>sonicator_id,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>state)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d93/class_arduino_hal_1ad0a661c07b46085d11e09f3826c7801b" kindref="member">ArduinoHal::gpioSonicatorReadFreqLock</ref>(sonicator_id,<sp/>state);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="df/db4/class_arduino_gpio_port_1a85fe977547e7e2a6d5963b4a91b24f01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="df/db4/class_arduino_gpio_port_1a85fe977547e7e2a6d5963b4a91b24f01" kindref="member">statusLed</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>state)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d93/class_arduino_hal_1aab85ec0064ef5f065cec2ec231b33dfe" kindref="member">ArduinoHal::gpioStatusLed</ref>(state);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal">};</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="d4/d3b/class_arduino_adc_reader" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d4/d3b/class_arduino_adc_reader" kindref="compound">ArduinoAdcReader</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="d8/da7/class_i_adc_reader" kindref="compound">IAdcReader</ref><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="77" refid="d4/d3b/class_arduino_adc_reader_1a1e479690a9959f48b51f97a3ae15bb80" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d3b/class_arduino_adc_reader_1a1e479690a9959f48b51f97a3ae15bb80" kindref="member">init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d93/class_arduino_hal_1a31b872c776b25b2fc272fa756ff0892e" kindref="member">ArduinoHal::adcInit</ref>();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="d4/d3b/class_arduino_adc_reader_1a246989520d0e3538295184cf7c41c97e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d3b/class_arduino_adc_reader_1a246989520d0e3538295184cf7c41c97e" kindref="member">readChannel</ref>(uint8_t<sp/>channel,<sp/>uint16_t*<sp/>raw_value)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d93/class_arduino_hal_1a41651ae4da0a15a0d189c372b3ebe434" kindref="member">ArduinoHal::adcReadChannel</ref>(channel,<sp/>raw_value);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="d4/d3b/class_arduino_adc_reader_1ab6efe5cb8539b0765ecaaa234e577940" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d3b/class_arduino_adc_reader_1ab6efe5cb8539b0765ecaaa234e577940" kindref="member">startConversion</ref>(uint8_t<sp/>channel)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d93/class_arduino_hal_1a470d401d3b4d5ab08b0fa72e2673452c" kindref="member">ArduinoHal::adcStartConversion</ref>(channel);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="d4/d3b/class_arduino_adc_reader_1a76792c387a8745ac4d01e272117fdfa2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d3b/class_arduino_adc_reader_1a76792c387a8745ac4d01e272117fdfa2" kindref="member">isConversionComplete</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d93/class_arduino_hal_1a52d999fb66da5b3e63685faef69758ef" kindref="member">ArduinoHal::adcIsConversionComplete</ref>();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="d4/d3b/class_arduino_adc_reader_1aa37bcc4b819f4f0e1a3c91a87ae80793" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="d4/d3b/class_arduino_adc_reader_1aa37bcc4b819f4f0e1a3c91a87ae80793" kindref="member">rawToVoltage</ref>(uint16_t<sp/>raw_value)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ArduinoHal::adcRawToVoltage(raw_value);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="d4/d3b/class_arduino_adc_reader_1acd60f1c49fee0fc789dff76bfb630f65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d3b/class_arduino_adc_reader_1acd60f1c49fee0fc789dff76bfb630f65" kindref="member">readSonicatorPower</ref>(uint8_t<sp/>sonicator_id,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>power_watts)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d93/class_arduino_hal_1ad6cbe161af2415c5f0dd7928110b655d" kindref="member">ArduinoHal::adcReadSonicatorPower</ref>(sonicator_id,<sp/>power_watts);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="d4/d3b/class_arduino_adc_reader_1afbb4414a98aff34d83544079ced0a84c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d3b/class_arduino_adc_reader_1afbb4414a98aff34d83544079ced0a84c" kindref="member">readFrequency</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>frequency_hz)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d93/class_arduino_hal_1a40c4ecc0052700584ed5073ffdb11aa1" kindref="member">ArduinoHal::adcReadFrequency</ref>(frequency_hz);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal">};</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="d5/d35/class_arduino_pwm_generator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d5/d35/class_arduino_pwm_generator" kindref="compound">ArduinoPwmGenerator</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="d3/d56/class_i_pwm_generator" kindref="compound">IPwmGenerator</ref><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="111" refid="d5/d35/class_arduino_pwm_generator_1aa4d9336023be8c1fa19896869b669e77" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d5/d35/class_arduino_pwm_generator_1aa4d9336023be8c1fa19896869b669e77" kindref="member">init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d93/class_arduino_hal_1a9dfab2cb022a7553543f77b03f28971f" kindref="member">ArduinoHal::pwmInit</ref>();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="d5/d35/class_arduino_pwm_generator_1a456e161d5215a09c49d5b31f7965e8f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d5/d35/class_arduino_pwm_generator_1a456e161d5215a09c49d5b31f7965e8f6" kindref="member">setFrequency</ref>(uint8_t<sp/>channel,<sp/>uint32_t<sp/>frequency)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d93/class_arduino_hal_1a4bd144a412be4ed028a7202be23c9509" kindref="member">ArduinoHal::pwmSetFrequency</ref>(channel,<sp/>frequency);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="d5/d35/class_arduino_pwm_generator_1af246a37d6c166b2152d788c38117fbac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d5/d35/class_arduino_pwm_generator_1af246a37d6c166b2152d788c38117fbac" kindref="member">setDutyCycle</ref>(uint8_t<sp/>channel,<sp/>uint8_t<sp/>duty_percent)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d93/class_arduino_hal_1a2f9e1da557b706b796c2667588a98343" kindref="member">ArduinoHal::pwmSetDutyCycle</ref>(channel,<sp/>duty_percent);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="d5/d35/class_arduino_pwm_generator_1ada1c8e0614dbbe9698061e466f6415db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d5/d35/class_arduino_pwm_generator_1ada1c8e0614dbbe9698061e466f6415db" kindref="member">enableChannel</ref>(uint8_t<sp/>channel)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d93/class_arduino_hal_1aa441d9b00072480870e84271c6b5096f" kindref="member">ArduinoHal::pwmEnableChannel</ref>(channel);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="d5/d35/class_arduino_pwm_generator_1a49659cb7b9c46fbdc2486e7efae7d512" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d5/d35/class_arduino_pwm_generator_1a49659cb7b9c46fbdc2486e7efae7d512" kindref="member">disableChannel</ref>(uint8_t<sp/>channel)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d93/class_arduino_hal_1a34870c38a31d7fcef6e87261a1da1a1c" kindref="member">ArduinoHal::pwmDisableChannel</ref>(channel);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="d5/d35/class_arduino_pwm_generator_1a14f5034cc0f0e856c4ba9dc5d2161024" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d5/d35/class_arduino_pwm_generator_1a14f5034cc0f0e856c4ba9dc5d2161024" kindref="member">setAmplitude</ref>(uint8_t<sp/>amplitude_percent)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d93/class_arduino_hal_1a4a0ec10ed4de0e24b95af6b587167c4d" kindref="member">ArduinoHal::pwmSetAmplitude</ref>(amplitude_percent);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="d5/d35/class_arduino_pwm_generator_1aa8db7f59d475aec21ad37b39213fe0cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d5/d35/class_arduino_pwm_generator_1aa8db7f59d475aec21ad37b39213fe0cc" kindref="member">emergencyStop</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d93/class_arduino_hal_1a898078925af4f6a50b69f080c8406577" kindref="member">ArduinoHal::pwmEmergencyStop</ref>();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="d5/d35/class_arduino_pwm_generator_1ae05af9d0d6906c9be40bd8b38ce06a8d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d5/d35/class_arduino_pwm_generator_1ae05af9d0d6906c9be40bd8b38ce06a8d" kindref="member">testPattern</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d93/class_arduino_hal_1a99a89e3b8736877687efb2d96a9df619" kindref="member">ArduinoHal::pwmTestPattern</ref>();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal">};</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="d4/d36/class_arduino_uart_port" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d4/d36/class_arduino_uart_port" kindref="compound">ArduinoUartPort</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="d2/d2d/class_i_uart_port" kindref="compound">IUartPort</ref><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="149" refid="d4/d36/class_arduino_uart_port_1a8fddd757bd99a901c99ce837b29db96a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d36/class_arduino_uart_port_1a8fddd757bd99a901c99ce837b29db96a" kindref="member">init</ref>(uint32_t<sp/>baud_rate)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d93/class_arduino_hal_1a4d3e0ca64f0dacfd425cbe2c4a159c5a" kindref="member">ArduinoHal::uartInit</ref>(baud_rate);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="d4/d36/class_arduino_uart_port_1adea244dfb39f22773616b6f4d8fec39f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d36/class_arduino_uart_port_1adea244dfb39f22773616b6f4d8fec39f" kindref="member">sendByte</ref>(uint8_t<sp/>data)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d93/class_arduino_hal_1a465adc6eddb558d50228c0faa52a4817" kindref="member">ArduinoHal::uartSendByte</ref>(data);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="d4/d36/class_arduino_uart_port_1a8a378781dab891b0a66ff007ed4bd979" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d36/class_arduino_uart_port_1a8a378781dab891b0a66ff007ed4bd979" kindref="member">receiveByte</ref>(uint8_t*<sp/>data)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d93/class_arduino_hal_1a721cd20794ec772696a7c24142863f4e" kindref="member">ArduinoHal::uartReceiveByte</ref>(data);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="d4/d36/class_arduino_uart_port_1ad39386ff1457b2121c05499c8c506f52" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d36/class_arduino_uart_port_1ad39386ff1457b2121c05499c8c506f52" kindref="member">dataAvailable</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d93/class_arduino_hal_1ab1a2c16db0698d5769c8ff27b601b4c1" kindref="member">ArduinoHal::uartDataAvailable</ref>();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="d4/d36/class_arduino_uart_port_1a269d073ea8a3f60a4b3716db5ea04b9b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d36/class_arduino_uart_port_1a269d073ea8a3f60a4b3716db5ea04b9b" kindref="member">sendBuffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>buffer,<sp/>uint16_t<sp/>length)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d93/class_arduino_hal_1acd7c0f2c683990671002ebf4dbb08f71" kindref="member">ArduinoHal::uartSendBuffer</ref>(buffer,<sp/>length);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="d4/d36/class_arduino_uart_port_1a22a18d1ca3c26c25ea46b32bf761712c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d36/class_arduino_uart_port_1a22a18d1ca3c26c25ea46b32bf761712c" kindref="member">receiveBuffer</ref>(uint8_t*<sp/>buffer,<sp/>uint16_t<sp/>max_length,<sp/>uint16_t*<sp/>received)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d93/class_arduino_hal_1a10c527c732cafc68e93488a75e052e77" kindref="member">ArduinoHal::uartReceiveBuffer</ref>(buffer,<sp/>max_length,<sp/>received);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="d4/d36/class_arduino_uart_port_1abf0cb6fd6f3b33842524e6886bed5d8e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d36/class_arduino_uart_port_1abf0cb6fd6f3b33842524e6886bed5d8e" kindref="member">flushTx</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d93/class_arduino_hal_1ab7827fa0818bae96ca91e05af4726f8f" kindref="member">ArduinoHal::uartFlushTx</ref>();</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="d4/d36/class_arduino_uart_port_1a9a74924a4bf5daf33f196b4d4e1f041d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d36/class_arduino_uart_port_1a9a74924a4bf5daf33f196b4d4e1f041d" kindref="member">flushRx</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d93/class_arduino_hal_1a4f804e535c466ac52d6c86a4d7be300d" kindref="member">ArduinoHal::uartFlushRx</ref>();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="d4/d36/class_arduino_uart_port_1a2da24e20b97eafac96c2b675e2750eb8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d36/class_arduino_uart_port_1a2da24e20b97eafac96c2b675e2750eb8" kindref="member">clearErrors</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ArduinoHal::uartClearErrors();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="d4/d36/class_arduino_uart_port_1abe102feddbd6403289414e580f532304" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/d36/class_arduino_uart_port_1abe102feddbd6403289414e580f532304" kindref="member">testLoopback</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>success)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ArduinoHal::uartTestLoopback(success);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal">};</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="d0/dc3/class_arduino_timer_manager" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d0/dc3/class_arduino_timer_manager" kindref="compound">ArduinoTimerManager</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="da/dbb/class_i_timer_manager" kindref="compound">ITimerManager</ref><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="195" refid="d0/dc3/class_arduino_timer_manager_1a0d44aec2e282475fff7d2473c7c5d43f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/dc3/class_arduino_timer_manager_1a0d44aec2e282475fff7d2473c7c5d43f" kindref="member">init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d93/class_arduino_hal_1a4a36ec548b0bc8a434f730e2b71410fd" kindref="member">ArduinoHal::timerInit</ref>();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="d0/dc3/class_arduino_timer_manager_1acb07fdba9de8bb58b64b607a097460e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/dc3/class_arduino_timer_manager_1acb07fdba9de8bb58b64b607a097460e7" kindref="member">start</ref>(uint8_t<sp/>timer_id,<sp/>uint32_t<sp/>period_ms)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d93/class_arduino_hal_1adb3f09af31bbf392af2e5d3b3707f18c" kindref="member">ArduinoHal::timerStart</ref>(timer_id,<sp/>period_ms);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="d0/dc3/class_arduino_timer_manager_1a1dab93a086caf564e5da4b4ad57fb69d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/dc3/class_arduino_timer_manager_1a1dab93a086caf564e5da4b4ad57fb69d" kindref="member">stop</ref>(uint8_t<sp/>timer_id)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d93/class_arduino_hal_1a69a293a0dab9f8ee812a08e8d7f5fbac" kindref="member">ArduinoHal::timerStop</ref>(timer_id);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="d0/dc3/class_arduino_timer_manager_1a4a5122d168e14f6e3e979ae871c00f1f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/dc3/class_arduino_timer_manager_1a4a5122d168e14f6e3e979ae871c00f1f" kindref="member">isExpired</ref>(uint8_t<sp/>timer_id)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d93/class_arduino_hal_1a7850f3d8b9b177fbd9049a3dfdd28aba" kindref="member">ArduinoHal::timerIsExpired</ref>(timer_id);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="d0/dc3/class_arduino_timer_manager_1a9eca323fd80891efeac86a577e93a346" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/dc3/class_arduino_timer_manager_1a9eca323fd80891efeac86a577e93a346" kindref="member">getMillis</ref>(uint32_t*<sp/>millis)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d93/class_arduino_hal_1a032bb48377866762dea7a99d649d1b8f" kindref="member">ArduinoHal::timerGetMillis</ref>(millis);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="d0/dc3/class_arduino_timer_manager_1a85abc0d6c6c2683679540790a6b9991b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/dc3/class_arduino_timer_manager_1a85abc0d6c6c2683679540790a6b9991b" kindref="member">delayMs</ref>(uint32_t<sp/>delay_ms)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d93/class_arduino_hal_1acbd5b8b1d758bacc2542e6093fd9af83" kindref="member">ArduinoHal::timerDelayMs</ref>(delay_ms);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="d0/dc3/class_arduino_timer_manager_1a25603a66957b6d189f5180cec5579c88" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/dc3/class_arduino_timer_manager_1a25603a66957b6d189f5180cec5579c88" kindref="member">watchdogReset</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ArduinoHal::timerWatchdogReset();</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="d0/dc3/class_arduino_timer_manager_1a1915e1cf2eab43fecee684b4d71eef50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/dc3/class_arduino_timer_manager_1a1915e1cf2eab43fecee684b4d71eef50" kindref="member">testAll</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>success)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ArduinoHal::timerTestAll(success);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal">};</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ARDUINO<sp/>FACTORY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="de/dac/class_arduino_hal_factory" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="de/dac/class_arduino_hal_factory" kindref="compound">ArduinoHalFactory</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="de/de7/class_i_hal_factory" kindref="compound">IHalFactory</ref><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/db4/class_arduino_gpio_port" kindref="compound">ArduinoGpioPort</ref><sp/>gpio_port;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d3b/class_arduino_adc_reader" kindref="compound">ArduinoAdcReader</ref><sp/>adc_reader;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/d35/class_arduino_pwm_generator" kindref="compound">ArduinoPwmGenerator</ref><sp/>pwm_generator;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d36/class_arduino_uart_port" kindref="compound">ArduinoUartPort</ref><sp/>uart_port;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/dc3/class_arduino_timer_manager" kindref="compound">ArduinoTimerManager</ref><sp/>timer_manager;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="246" refid="de/dac/class_arduino_hal_factory_1abb6589987a23f7d5f5d15b6227ffed9d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d45/class_i_gpio_port" kindref="compound">IGpioPort</ref>*<sp/><ref refid="de/dac/class_arduino_hal_factory_1abb6589987a23f7d5f5d15b6227ffed9d" kindref="member">createGpioPort</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;gpio_port;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="de/dac/class_arduino_hal_factory_1a632ca84cfd62be958c7532454d5678c7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/da7/class_i_adc_reader" kindref="compound">IAdcReader</ref>*<sp/><ref refid="de/dac/class_arduino_hal_factory_1a632ca84cfd62be958c7532454d5678c7" kindref="member">createAdcReader</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;adc_reader;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254" refid="de/dac/class_arduino_hal_factory_1a9e154056bf0f009eac2e128e394b5c19" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/d56/class_i_pwm_generator" kindref="compound">IPwmGenerator</ref>*<sp/><ref refid="de/dac/class_arduino_hal_factory_1a9e154056bf0f009eac2e128e394b5c19" kindref="member">createPwmGenerator</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;pwm_generator;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258" refid="de/dac/class_arduino_hal_factory_1a8f24db7e72914095203affa10b246a58" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/d2d/class_i_uart_port" kindref="compound">IUartPort</ref>*<sp/><ref refid="de/dac/class_arduino_hal_factory_1a8f24db7e72914095203affa10b246a58" kindref="member">createUartPort</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;uart_port;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="de/dac/class_arduino_hal_factory_1a511fd032a6e7346dcd83de0514e6ebaa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/dbb/class_i_timer_manager" kindref="compound">ITimerManager</ref>*<sp/><ref refid="de/dac/class_arduino_hal_factory_1a511fd032a6e7346dcd83de0514e6ebaa" kindref="member">createTimerManager</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;timer_manager;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal">};</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>ARDUINO_HAL_FACTORY_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/modules/hal/arduino/arduino_hal_factory.h"/>
  </compounddef>
</doxygen>
