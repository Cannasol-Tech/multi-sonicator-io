<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="dd/ded/class_uart_hal" kind="class" language="C++" prot="public">
    <compoundname>UartHal</compoundname>
    <derivedcompoundref refid="d1/d54/class_hal_template" prot="public" virt="non-virtual">HalTemplate&lt; AtmegaHal &gt;</derivedcompoundref>
    <derivedcompoundref refid="d1/d54/class_hal_template" prot="public" virt="non-virtual">HalTemplate&lt; MockHal &gt;</derivedcompoundref>
    <derivedcompoundref refid="d1/d54/class_hal_template" prot="public" virt="non-virtual">HalTemplate&lt; HalImpl &gt;</derivedcompoundref>
    <includes refid="de/d2b/hal__template__interfaces_8h" local="no">hal_template_interfaces.h</includes>
    <templateparamlist>
      <param>
        <type>typename HalImpl</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="dd/ded/class_uart_hal_1af0f2314bffd745f6d9d71784b41a280c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool UartHal&lt; HalImpl &gt;::init</definition>
        <argsstring>(uint32_t baud_rate)</argsstring>
        <name>init</name>
        <qualifiedname>UartHal::init</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>baud_rate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_template_interfaces.h" line="154" column="10" bodyfile="src/modules/hal/hal_template_interfaces.h" bodystart="154" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="dd/ded/class_uart_hal_1a2412d4f983c48ea33dca5552fdce535d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool UartHal&lt; HalImpl &gt;::setBaudRate</definition>
        <argsstring>(uint32_t baud_rate)</argsstring>
        <name>setBaudRate</name>
        <qualifiedname>UartHal::setBaudRate</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>baud_rate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_template_interfaces.h" line="155" column="10" bodyfile="src/modules/hal/hal_template_interfaces.h" bodystart="155" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="dd/ded/class_uart_hal_1a5dff7726379cda3c26358dcaa3136382" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool UartHal&lt; HalImpl &gt;::sendByte</definition>
        <argsstring>(uint8_t data)</argsstring>
        <name>sendByte</name>
        <qualifiedname>UartHal::sendByte</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_template_interfaces.h" line="156" column="10" bodyfile="src/modules/hal/hal_template_interfaces.h" bodystart="156" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="dd/ded/class_uart_hal_1a1cc107fcdc13a8d9c4631152105da66e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool UartHal&lt; HalImpl &gt;::receiveByte</definition>
        <argsstring>(uint8_t *data)</argsstring>
        <name>receiveByte</name>
        <qualifiedname>UartHal::receiveByte</qualifiedname>
        <param>
          <type>uint8_t *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_template_interfaces.h" line="157" column="10" bodyfile="src/modules/hal/hal_template_interfaces.h" bodystart="157" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="dd/ded/class_uart_hal_1a9dfe781c39a69c925a2e4ca31799cca4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool UartHal&lt; HalImpl &gt;::dataAvailable</definition>
        <argsstring>(bool *available)</argsstring>
        <name>dataAvailable</name>
        <qualifiedname>UartHal::dataAvailable</qualifiedname>
        <param>
          <type>bool *</type>
          <declname>available</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_template_interfaces.h" line="158" column="10" bodyfile="src/modules/hal/hal_template_interfaces.h" bodystart="158" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="dd/ded/class_uart_hal_1a3ad51e918600b13789a55f29e8a8d24d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool UartHal&lt; HalImpl &gt;::getRxCount</definition>
        <argsstring>(uint16_t *count)</argsstring>
        <name>getRxCount</name>
        <qualifiedname>UartHal::getRxCount</qualifiedname>
        <param>
          <type>uint16_t *</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_template_interfaces.h" line="159" column="10" bodyfile="src/modules/hal/hal_template_interfaces.h" bodystart="159" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="dd/ded/class_uart_hal_1a189c19afb87dd8580c5e2bb403cca410" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool UartHal&lt; HalImpl &gt;::sendBuffer</definition>
        <argsstring>(const uint8_t *buffer, uint16_t length)</argsstring>
        <name>sendBuffer</name>
        <qualifiedname>UartHal::sendBuffer</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_template_interfaces.h" line="160" column="10" bodyfile="src/modules/hal/hal_template_interfaces.h" bodystart="160" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="dd/ded/class_uart_hal_1ac7d0176ea2292bd33e07e38ef857012b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool UartHal&lt; HalImpl &gt;::receiveBuffer</definition>
        <argsstring>(uint8_t *buffer, uint16_t max_length, uint16_t *received)</argsstring>
        <name>receiveBuffer</name>
        <qualifiedname>UartHal::receiveBuffer</qualifiedname>
        <param>
          <type>uint8_t *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>max_length</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>received</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_template_interfaces.h" line="161" column="10" bodyfile="src/modules/hal/hal_template_interfaces.h" bodystart="161" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="dd/ded/class_uart_hal_1a1a8be2df027fd6ff7f9e9a16e25bb21f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool UartHal&lt; HalImpl &gt;::flushTx</definition>
        <argsstring>()</argsstring>
        <name>flushTx</name>
        <qualifiedname>UartHal::flushTx</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_template_interfaces.h" line="164" column="10" bodyfile="src/modules/hal/hal_template_interfaces.h" bodystart="164" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="dd/ded/class_uart_hal_1a50909f26871586530cc34665ed2356d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool UartHal&lt; HalImpl &gt;::flushRx</definition>
        <argsstring>()</argsstring>
        <name>flushRx</name>
        <qualifiedname>UartHal::flushRx</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_template_interfaces.h" line="165" column="10" bodyfile="src/modules/hal/hal_template_interfaces.h" bodystart="165" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="dd/ded/class_uart_hal_1ae3f80876834e055eac76b90f0c9ad74c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool UartHal&lt; HalImpl &gt;::sendModbusFrame</definition>
        <argsstring>(const uint8_t *frame, uint16_t length)</argsstring>
        <name>sendModbusFrame</name>
        <qualifiedname>UartHal::sendModbusFrame</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>frame</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_template_interfaces.h" line="168" column="10" bodyfile="src/modules/hal/hal_template_interfaces.h" bodystart="168" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="dd/ded/class_uart_hal_1a40b676a7fe0bed95feae2496767b41e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool UartHal&lt; HalImpl &gt;::receiveModbusFrame</definition>
        <argsstring>(uint8_t *frame, uint16_t max_length, uint16_t *received, uint32_t timeout_ms)</argsstring>
        <name>receiveModbusFrame</name>
        <qualifiedname>UartHal::receiveModbusFrame</qualifiedname>
        <param>
          <type>uint8_t *</type>
          <declname>frame</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>max_length</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>received</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>timeout_ms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_template_interfaces.h" line="169" column="10" bodyfile="src/modules/hal/hal_template_interfaces.h" bodystart="169" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="dd/ded/class_uart_hal_1a665a38f6d76c69f7919f557975e884cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool UartHal&lt; HalImpl &gt;::modbusGapDetected</definition>
        <argsstring>(bool *gap_detected)</argsstring>
        <name>modbusGapDetected</name>
        <qualifiedname>UartHal::modbusGapDetected</qualifiedname>
        <param>
          <type>bool *</type>
          <declname>gap_detected</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_template_interfaces.h" line="172" column="10" bodyfile="src/modules/hal/hal_template_interfaces.h" bodystart="172" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="dd/ded/class_uart_hal_1a06fa1f6eb4c098e1ebfd16bdfd08a874" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool UartHal&lt; HalImpl &gt;::getIdleTime</definition>
        <argsstring>(uint32_t *time_us)</argsstring>
        <name>getIdleTime</name>
        <qualifiedname>UartHal::getIdleTime</qualifiedname>
        <param>
          <type>uint32_t *</type>
          <declname>time_us</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_template_interfaces.h" line="173" column="10" bodyfile="src/modules/hal/hal_template_interfaces.h" bodystart="173" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="dd/ded/class_uart_hal_1a05080a7cef17724a0d8dfcedfbb319b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool UartHal&lt; HalImpl &gt;::getStatus</definition>
        <argsstring>(bool *tx_busy, bool *rx_overflow, bool *frame_error, bool *parity_error)</argsstring>
        <name>getStatus</name>
        <qualifiedname>UartHal::getStatus</qualifiedname>
        <param>
          <type>bool *</type>
          <declname>tx_busy</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>rx_overflow</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>frame_error</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>parity_error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_template_interfaces.h" line="176" column="10" bodyfile="src/modules/hal/hal_template_interfaces.h" bodystart="176" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="dd/ded/class_uart_hal_1abe5f6a24fe2f86436120fb1edb268ae4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool UartHal&lt; HalImpl &gt;::getTxFree</definition>
        <argsstring>(uint16_t *free_bytes)</argsstring>
        <name>getTxFree</name>
        <qualifiedname>UartHal::getTxFree</qualifiedname>
        <param>
          <type>uint16_t *</type>
          <declname>free_bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_template_interfaces.h" line="179" column="10" bodyfile="src/modules/hal/hal_template_interfaces.h" bodystart="179" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="dd/ded/class_uart_hal_1a38ce9314b0315865baf2e4c0e883b6ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool UartHal&lt; HalImpl &gt;::clearErrors</definition>
        <argsstring>()</argsstring>
        <name>clearErrors</name>
        <qualifiedname>UartHal::clearErrors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_template_interfaces.h" line="180" column="10" bodyfile="src/modules/hal/hal_template_interfaces.h" bodystart="180" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="dd/ded/class_uart_hal_1a31d3e5d32c0ebba45f18dbec1a466017" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool UartHal&lt; HalImpl &gt;::getCharTime</definition>
        <argsstring>(uint16_t *char_time_us)</argsstring>
        <name>getCharTime</name>
        <qualifiedname>UartHal::getCharTime</qualifiedname>
        <param>
          <type>uint16_t *</type>
          <declname>char_time_us</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_template_interfaces.h" line="181" column="10" bodyfile="src/modules/hal/hal_template_interfaces.h" bodystart="181" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="dd/ded/class_uart_hal_1a594fcd35dba543abd5bfad5bfc39690e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool UartHal&lt; HalImpl &gt;::testLoopback</definition>
        <argsstring>(bool *success)</argsstring>
        <name>testLoopback</name>
        <qualifiedname>UartHal::testLoopback</qualifiedname>
        <param>
          <type>bool *</type>
          <declname>success</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_template_interfaces.h" line="182" column="10" bodyfile="src/modules/hal/hal_template_interfaces.h" bodystart="182" bodyend="182"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>UART HAL Interface (Template-based) </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>HalTemplate&lt; AtmegaHal &gt;</label>
        <link refid="d1/d54/class_hal_template"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>HalTemplate&lt; HalImpl &gt;</label>
        <link refid="d1/d54/class_hal_template"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>HalTemplate&lt; MockHal &gt;</label>
        <link refid="d1/d54/class_hal_template"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>UartHal&lt; HalImpl &gt;</label>
        <link refid="dd/ded/class_uart_hal"/>
      </node>
    </inheritancegraph>
    <location file="src/modules/hal/hal_template_interfaces.h" line="151" column="1" bodyfile="src/modules/hal/hal_template_interfaces.h" bodystart="151" bodyend="183"/>
    <listofallmembers>
      <member refid="dd/ded/class_uart_hal_1a38ce9314b0315865baf2e4c0e883b6ec" prot="public" virt="non-virtual"><scope>UartHal</scope><name>clearErrors</name></member>
      <member refid="dd/ded/class_uart_hal_1a9dfe781c39a69c925a2e4ca31799cca4" prot="public" virt="non-virtual"><scope>UartHal</scope><name>dataAvailable</name></member>
      <member refid="dd/ded/class_uart_hal_1a50909f26871586530cc34665ed2356d1" prot="public" virt="non-virtual"><scope>UartHal</scope><name>flushRx</name></member>
      <member refid="dd/ded/class_uart_hal_1a1a8be2df027fd6ff7f9e9a16e25bb21f" prot="public" virt="non-virtual"><scope>UartHal</scope><name>flushTx</name></member>
      <member refid="dd/ded/class_uart_hal_1a31d3e5d32c0ebba45f18dbec1a466017" prot="public" virt="non-virtual"><scope>UartHal</scope><name>getCharTime</name></member>
      <member refid="dd/ded/class_uart_hal_1a06fa1f6eb4c098e1ebfd16bdfd08a874" prot="public" virt="non-virtual"><scope>UartHal</scope><name>getIdleTime</name></member>
      <member refid="dd/ded/class_uart_hal_1a3ad51e918600b13789a55f29e8a8d24d" prot="public" virt="non-virtual"><scope>UartHal</scope><name>getRxCount</name></member>
      <member refid="dd/ded/class_uart_hal_1a05080a7cef17724a0d8dfcedfbb319b9" prot="public" virt="non-virtual"><scope>UartHal</scope><name>getStatus</name></member>
      <member refid="dd/ded/class_uart_hal_1abe5f6a24fe2f86436120fb1edb268ae4" prot="public" virt="non-virtual"><scope>UartHal</scope><name>getTxFree</name></member>
      <member refid="dd/ded/class_uart_hal_1af0f2314bffd745f6d9d71784b41a280c" prot="public" virt="non-virtual"><scope>UartHal</scope><name>init</name></member>
      <member refid="dd/ded/class_uart_hal_1a665a38f6d76c69f7919f557975e884cd" prot="public" virt="non-virtual"><scope>UartHal</scope><name>modbusGapDetected</name></member>
      <member refid="dd/ded/class_uart_hal_1ac7d0176ea2292bd33e07e38ef857012b" prot="public" virt="non-virtual"><scope>UartHal</scope><name>receiveBuffer</name></member>
      <member refid="dd/ded/class_uart_hal_1a1cc107fcdc13a8d9c4631152105da66e" prot="public" virt="non-virtual"><scope>UartHal</scope><name>receiveByte</name></member>
      <member refid="dd/ded/class_uart_hal_1a40b676a7fe0bed95feae2496767b41e4" prot="public" virt="non-virtual"><scope>UartHal</scope><name>receiveModbusFrame</name></member>
      <member refid="dd/ded/class_uart_hal_1a189c19afb87dd8580c5e2bb403cca410" prot="public" virt="non-virtual"><scope>UartHal</scope><name>sendBuffer</name></member>
      <member refid="dd/ded/class_uart_hal_1a5dff7726379cda3c26358dcaa3136382" prot="public" virt="non-virtual"><scope>UartHal</scope><name>sendByte</name></member>
      <member refid="dd/ded/class_uart_hal_1ae3f80876834e055eac76b90f0c9ad74c" prot="public" virt="non-virtual"><scope>UartHal</scope><name>sendModbusFrame</name></member>
      <member refid="dd/ded/class_uart_hal_1a2412d4f983c48ea33dca5552fdce535d" prot="public" virt="non-virtual"><scope>UartHal</scope><name>setBaudRate</name></member>
      <member refid="dd/ded/class_uart_hal_1a594fcd35dba543abd5bfad5bfc39690e" prot="public" virt="non-virtual"><scope>UartHal</scope><name>testLoopback</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
