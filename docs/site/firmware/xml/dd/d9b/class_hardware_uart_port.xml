<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="dd/d9b/class_hardware_uart_port" kind="class" language="C++" prot="public">
    <compoundname>HardwareUartPort</compoundname>
    <basecompoundref refid="d2/d2d/class_i_uart_port" prot="public" virt="non-virtual">IUartPort</basecompoundref>
    <includes refid="d2/db1/hal__hardware__factory_8h" local="no">hal_hardware_factory.h</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="dd/d9b/class_hardware_uart_port_1a683e353a2463b7fdbedd28c3ddcca7cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool HardwareUartPort::init</definition>
        <argsstring>(uint32_t baud_rate) override</argsstring>
        <name>init</name>
        <qualifiedname>HardwareUartPort::init</qualifiedname>
        <reimplements refid="d2/d2d/class_i_uart_port_1afb2bfcc66d733bb9331f9045d301d7fe">init</reimplements>
        <param>
          <type>uint32_t</type>
          <declname>baud_rate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_hardware_factory.h" line="76" column="10"/>
      </memberdef>
      <memberdef kind="function" id="dd/d9b/class_hardware_uart_port_1a70a950ebf4ca7e41a22f00c78553e38a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool HardwareUartPort::sendByte</definition>
        <argsstring>(uint8_t data) override</argsstring>
        <name>sendByte</name>
        <qualifiedname>HardwareUartPort::sendByte</qualifiedname>
        <reimplements refid="d2/d2d/class_i_uart_port_1a643a7aa32075ecccd835020c6c6ed123">sendByte</reimplements>
        <param>
          <type>uint8_t</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_hardware_factory.h" line="77" column="10"/>
      </memberdef>
      <memberdef kind="function" id="dd/d9b/class_hardware_uart_port_1ae986a11a14f9590e75983cb1484784fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool HardwareUartPort::receiveByte</definition>
        <argsstring>(uint8_t *data) override</argsstring>
        <name>receiveByte</name>
        <qualifiedname>HardwareUartPort::receiveByte</qualifiedname>
        <reimplements refid="d2/d2d/class_i_uart_port_1a6ca91d5a0918bf5ff5e6820166e0e718">receiveByte</reimplements>
        <param>
          <type>uint8_t *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_hardware_factory.h" line="78" column="10"/>
      </memberdef>
      <memberdef kind="function" id="dd/d9b/class_hardware_uart_port_1af925ed861f3bc6ec2aad27fc50b826e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool HardwareUartPort::dataAvailable</definition>
        <argsstring>(void) override</argsstring>
        <name>dataAvailable</name>
        <qualifiedname>HardwareUartPort::dataAvailable</qualifiedname>
        <reimplements refid="d2/d2d/class_i_uart_port_1a84d263a9fcaf4cfde7b1362d3c0ab732">dataAvailable</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_hardware_factory.h" line="79" column="10"/>
      </memberdef>
      <memberdef kind="function" id="dd/d9b/class_hardware_uart_port_1ae563ba3b39ec499c9176ab9140931e80" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool HardwareUartPort::sendBuffer</definition>
        <argsstring>(const uint8_t *buffer, uint16_t length) override</argsstring>
        <name>sendBuffer</name>
        <qualifiedname>HardwareUartPort::sendBuffer</qualifiedname>
        <reimplements refid="d2/d2d/class_i_uart_port_1afcbd92b173b1e59c992c21f969044e15">sendBuffer</reimplements>
        <param>
          <type>const uint8_t *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_hardware_factory.h" line="80" column="10"/>
      </memberdef>
      <memberdef kind="function" id="dd/d9b/class_hardware_uart_port_1afc5b78d7d73dd68e8a6493146256aa75" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool HardwareUartPort::receiveBuffer</definition>
        <argsstring>(uint8_t *buffer, uint16_t max_length, uint16_t *received) override</argsstring>
        <name>receiveBuffer</name>
        <qualifiedname>HardwareUartPort::receiveBuffer</qualifiedname>
        <reimplements refid="d2/d2d/class_i_uart_port_1a41ed803ca9d883b1e7e1ed20905bc4c5">receiveBuffer</reimplements>
        <param>
          <type>uint8_t *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>max_length</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>received</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_hardware_factory.h" line="81" column="10"/>
      </memberdef>
      <memberdef kind="function" id="dd/d9b/class_hardware_uart_port_1a827e6daf290a8796ab5859d3c9f3fe62" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool HardwareUartPort::flushTx</definition>
        <argsstring>(void) override</argsstring>
        <name>flushTx</name>
        <qualifiedname>HardwareUartPort::flushTx</qualifiedname>
        <reimplements refid="d2/d2d/class_i_uart_port_1a00ac88691a1133ef4fc34828c644bee6">flushTx</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_hardware_factory.h" line="83" column="10"/>
      </memberdef>
      <memberdef kind="function" id="dd/d9b/class_hardware_uart_port_1ae246de628514fd125a07a79414cfcfa5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool HardwareUartPort::flushRx</definition>
        <argsstring>(void) override</argsstring>
        <name>flushRx</name>
        <qualifiedname>HardwareUartPort::flushRx</qualifiedname>
        <reimplements refid="d2/d2d/class_i_uart_port_1a0611b15c5b2acd429b3275383216fab4">flushRx</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_hardware_factory.h" line="84" column="10"/>
      </memberdef>
      <memberdef kind="function" id="dd/d9b/class_hardware_uart_port_1ab817229ebc4779e7cc004de3a164285e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool HardwareUartPort::clearErrors</definition>
        <argsstring>(void) override</argsstring>
        <name>clearErrors</name>
        <qualifiedname>HardwareUartPort::clearErrors</qualifiedname>
        <reimplements refid="d2/d2d/class_i_uart_port_1af0fc96d917ade8a8e926bb3cc9afd219">clearErrors</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_hardware_factory.h" line="85" column="10"/>
      </memberdef>
      <memberdef kind="function" id="dd/d9b/class_hardware_uart_port_1a687a85e6ba6965357c7482e5d1d0e654" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool HardwareUartPort::testLoopback</definition>
        <argsstring>(bool *success) override</argsstring>
        <name>testLoopback</name>
        <qualifiedname>HardwareUartPort::testLoopback</qualifiedname>
        <reimplements refid="d2/d2d/class_i_uart_port_1ac167f3d2feb7eff9bd009c715101493b">testLoopback</reimplements>
        <param>
          <type>bool *</type>
          <declname>success</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/modules/hal/hal_hardware_factory.h" line="86" column="10"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Real ATmega32A UART implementation. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>HardwareUartPort</label>
        <link refid="dd/d9b/class_hardware_uart_port"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>IUartPort</label>
        <link refid="d2/d2d/class_i_uart_port"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>HardwareUartPort</label>
        <link refid="dd/d9b/class_hardware_uart_port"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>IUartPort</label>
        <link refid="d2/d2d/class_i_uart_port"/>
      </node>
    </collaborationgraph>
    <location file="src/modules/hal/hal_hardware_factory.h" line="74" column="1" bodyfile="src/modules/hal/hal_hardware_factory.h" bodystart="74" bodyend="87"/>
    <listofallmembers>
      <member refid="dd/d9b/class_hardware_uart_port_1ab817229ebc4779e7cc004de3a164285e" prot="public" virt="virtual"><scope>HardwareUartPort</scope><name>clearErrors</name></member>
      <member refid="dd/d9b/class_hardware_uart_port_1af925ed861f3bc6ec2aad27fc50b826e7" prot="public" virt="virtual"><scope>HardwareUartPort</scope><name>dataAvailable</name></member>
      <member refid="dd/d9b/class_hardware_uart_port_1ae246de628514fd125a07a79414cfcfa5" prot="public" virt="virtual"><scope>HardwareUartPort</scope><name>flushRx</name></member>
      <member refid="dd/d9b/class_hardware_uart_port_1a827e6daf290a8796ab5859d3c9f3fe62" prot="public" virt="virtual"><scope>HardwareUartPort</scope><name>flushTx</name></member>
      <member refid="dd/d9b/class_hardware_uart_port_1a683e353a2463b7fdbedd28c3ddcca7cf" prot="public" virt="virtual"><scope>HardwareUartPort</scope><name>init</name></member>
      <member refid="dd/d9b/class_hardware_uart_port_1afc5b78d7d73dd68e8a6493146256aa75" prot="public" virt="virtual"><scope>HardwareUartPort</scope><name>receiveBuffer</name></member>
      <member refid="dd/d9b/class_hardware_uart_port_1ae986a11a14f9590e75983cb1484784fe" prot="public" virt="virtual"><scope>HardwareUartPort</scope><name>receiveByte</name></member>
      <member refid="dd/d9b/class_hardware_uart_port_1ae563ba3b39ec499c9176ab9140931e80" prot="public" virt="virtual"><scope>HardwareUartPort</scope><name>sendBuffer</name></member>
      <member refid="dd/d9b/class_hardware_uart_port_1a70a950ebf4ca7e41a22f00c78553e38a" prot="public" virt="virtual"><scope>HardwareUartPort</scope><name>sendByte</name></member>
      <member refid="dd/d9b/class_hardware_uart_port_1a687a85e6ba6965357c7482e5d1d0e654" prot="public" virt="virtual"><scope>HardwareUartPort</scope><name>testLoopback</name></member>
      <member refid="d2/d2d/class_i_uart_port_1a1590f92e5906d65381271721554e7efc" prot="public" virt="virtual"><scope>HardwareUartPort</scope><name>~IUartPort</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
