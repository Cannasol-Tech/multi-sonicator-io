<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="db/dac/_multi_sonicator_system_8h" kind="file" language="C++">
    <compoundname>MultiSonicatorSystem.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes refid="d9/d49/types_8h" local="yes">types.h</includes>
    <incdepgraph>
      <node id="1">
        <label>include/MultiSonicatorSystem.h</label>
        <link refid="db/dac/_multi_sonicator_system_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>system_config.h</label>
        <link refid="d4/d7e/system__config_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>types.h</label>
        <link refid="d9/d49/types_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>adc.h</label>
        <link refid="d7/d19/adc_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>atmega_hal_impl.h</label>
        <link refid="d2/d92/atmega__hal__impl_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>gpio.h</label>
        <link refid="d6/d7c/gpio_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>modules/hal/hal.h</label>
        <link refid="d8/d4b/hal_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>hal_template_interfaces.h</label>
        <link refid="de/d2b/hal__template__interfaces_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>mock_hal_impl.h</label>
        <link refid="de/d8d/mock__hal__impl_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>pwm.h</label>
        <link refid="d6/db9/pwm_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>timer.h</label>
        <link refid="d5/dd0/timer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>uart.h</label>
        <link refid="d2/d86/uart_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>Arduino.h</label>
      </node>
      <node id="7">
        <label>sonicator_control.h</label>
      </node>
      <node id="3">
        <label>stdbool.h</label>
      </node>
      <node id="2">
        <label>stdint.h</label>
      </node>
      <node id="17">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="db/d86/structmulti__status__t" prot="public">multi_status_t</innerclass>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="db/dac/_multi_sonicator_system_8h_1a5883b01d55edd95a7af1598a35f6a398" prot="public" static="no" strong="no">
        <type></type>
        <name>master_state_t</name>
        <enumvalue id="db/dac/_multi_sonicator_system_8h_1a5883b01d55edd95a7af1598a35f6a398a4f77d0a956ce1cd48e8213f7202979e4" prot="public">
          <name>MASTER_STATE_IDLE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="db/dac/_multi_sonicator_system_8h_1a5883b01d55edd95a7af1598a35f6a398afd5843c80f602ed57ea84fa7f77b6d92" prot="public">
          <name>MASTER_STATE_COORDINATED_START</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="db/dac/_multi_sonicator_system_8h_1a5883b01d55edd95a7af1598a35f6a398af64482b47693f4449a9b174c7beef1b4" prot="public">
          <name>MASTER_STATE_RUNNING</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="db/dac/_multi_sonicator_system_8h_1a5883b01d55edd95a7af1598a35f6a398a790c33f92f35b1a7eee14f38474e79f7" prot="public">
          <name>MASTER_STATE_EMERGENCY_STOP</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="db/dac/_multi_sonicator_system_8h_1a5883b01d55edd95a7af1598a35f6a398a39dc65b2e4486769f20f30adb7392bfa" prot="public">
          <name>MASTER_STATE_FAULT_ISOLATION</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MultiSonicatorSystem.h" line="6" column="2" bodyfile="include/MultiSonicatorSystem.h" bodystart="6" bodyend="12"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="db/dac/_multi_sonicator_system_8h_1a060568980bb741acf21a23a285d0589e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool multi_sonicator_begin</definition>
        <argsstring>(void)</argsstring>
        <name>multi_sonicator_begin</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Lifecycle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MultiSonicatorSystem.h" line="34" column="6" declfile="include/MultiSonicatorSystem.h" declline="34" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="db/dac/_multi_sonicator_system_8h_1aab1152cce0dec605b2fcead87d278c53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool multi_sonicator_request_coordinated_start</definition>
        <argsstring>(uint8_t unit_mask)</argsstring>
        <name>multi_sonicator_request_coordinated_start</name>
        <param>
          <type>uint8_t</type>
          <declname>unit_mask</declname>
        </param>
        <briefdescription>
<para>Request a coordinated start for a set of units. </para>
        </briefdescription>
        <detaileddescription>
<para>Mask semantics: bit 0→unit 1, bit 1→unit 2, bit 2→unit 3, bit 3→unit 4. Units in the mask transition to STARTING and then RUNNING during update(). This coexists with per‑unit commands and represents the intended active set.</para>
<para>Returns false on invalid mask or when in EMERGENCY_STOP. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MultiSonicatorSystem.h" line="45" column="6" declfile="include/MultiSonicatorSystem.h" declline="45" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="db/dac/_multi_sonicator_system_8h_1a7cb3d47e9125e087ee5fb78bfe59a975" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool multi_sonicator_request_coordinated_stop</definition>
        <argsstring>(uint8_t unit_mask)</argsstring>
        <name>multi_sonicator_request_coordinated_stop</name>
        <param>
          <type>uint8_t</type>
          <declname>unit_mask</declname>
        </param>
        <briefdescription>
<para>Request a coordinated stop for a set of units. </para>
        </briefdescription>
        <detaileddescription>
<para>Units in the intersection of (unit_mask ∧ active_mask) transition to STOPPING and then STOPPED during update(). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MultiSonicatorSystem.h" line="52" column="6" declfile="include/MultiSonicatorSystem.h" declline="52" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="db/dac/_multi_sonicator_system_8h_1a5c7720df904acc6a74e6aa94aa351ac2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool multi_sonicator_request_unit_start</definition>
        <argsstring>(uint8_t unit_index)</argsstring>
        <name>multi_sonicator_request_unit_start</name>
        <param>
          <type>uint8_t</type>
          <declname>unit_index</declname>
        </param>
        <briefdescription>
<para>Request START for a single unit (0..3 index, unit 1 = index 0). </para>
        </briefdescription>
        <detaileddescription>
<para>Behavior:<itemizedlist>
<listitem><para>If unit is STOPPING, this aborts STOP and moves unit to STARTING.</para>
</listitem><listitem><para>If unit is STOPPED, moves to STARTING and sets active_mask bit.</para>
</listitem><listitem><para>If unit is RUNNING/STARTING, no change (idempotent).</para>
</listitem><listitem><para>If in FAULT/OVERLOAD/UNKNOWN, returns false (safety gate). </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MultiSonicatorSystem.h" line="63" column="6" declfile="include/MultiSonicatorSystem.h" declline="63" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="db/dac/_multi_sonicator_system_8h_1a58aab1f0e21ee5168d7c04740b2b707a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool multi_sonicator_request_unit_stop</definition>
        <argsstring>(uint8_t unit_index)</argsstring>
        <name>multi_sonicator_request_unit_stop</name>
        <param>
          <type>uint8_t</type>
          <declname>unit_index</declname>
        </param>
        <briefdescription>
<para>Request STOP for a single unit (0..3 index, unit 1 = index 0). </para>
        </briefdescription>
        <detaileddescription>
<para>Behavior:<itemizedlist>
<listitem><para>If unit is STARTING, this aborts START and moves unit to STOPPING.</para>
</listitem><listitem><para>If unit is RUNNING, moves to STOPPING.</para>
</listitem><listitem><para>If unit is STOPPED/STOPPING, no change (idempotent). </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MultiSonicatorSystem.h" line="73" column="6" declfile="include/MultiSonicatorSystem.h" declline="73" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="db/dac/_multi_sonicator_system_8h_1af7ef10dc7ca9ec3293dcc2b4f88ecf6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool multi_sonicator_report_unit_fault</definition>
        <argsstring>(uint8_t unit_index, bool overload)</argsstring>
        <name>multi_sonicator_report_unit_fault</name>
        <param>
          <type>uint8_t</type>
          <declname>unit_index</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>overload</declname>
        </param>
        <briefdescription>
<para>Report an error condition for a unit and force it to an error state. </para>
        </briefdescription>
        <detaileddescription>
<para>This is used to reflect per‑unit failure paths (e.g., overload) so that partial success semantics are maintained: other units keep running while the failed unit enters an error state and is removed from the active set.</para>
<para>When overload=true, the unit enters SONICATOR_STATE_OVERLOAD; otherwise it enters SONICATOR_STATE_FAULT. The unit is cleared from the active mask. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MultiSonicatorSystem.h" line="84" column="6" declfile="include/MultiSonicatorSystem.h" declline="84" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="db/dac/_multi_sonicator_system_8h_1a567f0e25f4d4739b894bc96c6326f2d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool multi_sonicator_emergency_stop</definition>
        <argsstring>(void)</argsstring>
        <name>multi_sonicator_emergency_stop</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MultiSonicatorSystem.h" line="85" column="6" declfile="include/MultiSonicatorSystem.h" declline="85" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="db/dac/_multi_sonicator_system_8h_1ab27d110fab9d852323dfad0e2d9e8e7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d4/d5a/master__state_8h_1a5883b01d55edd95a7af1598a35f6a398" kindref="member">master_state_t</ref></type>
        <definition>master_state_t multi_sonicator_update</definition>
        <argsstring>(void)</argsstring>
        <name>multi_sonicator_update</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Update and status. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MultiSonicatorSystem.h" line="88" column="16" declfile="include/MultiSonicatorSystem.h" declline="88" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="db/dac/_multi_sonicator_system_8h_1a6f2a01048fa73aa4a239fdd978a6c4cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="db/d86/structmulti__status__t" kindref="compound">multi_status_t</ref> *</type>
        <definition>const multi_status_t * multi_sonicator_get_status</definition>
        <argsstring>(void)</argsstring>
        <name>multi_sonicator_get_status</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MultiSonicatorSystem.h" line="89" column="22" declfile="include/MultiSonicatorSystem.h" declline="89" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="db/dac/_multi_sonicator_system_8h_1ae1716b3075af1da95eb016e1f98c2f8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void multi_sonicator_set_start_inhibit</definition>
        <argsstring>(uint8_t unit_index, bool inhibit)</argsstring>
        <name>multi_sonicator_set_start_inhibit</name>
        <param>
          <type>uint8_t</type>
          <declname>unit_index</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>inhibit</declname>
        </param>
        <briefdescription>
<para>Optional coordination aids (start timeout path) </para>
        </briefdescription>
        <detaileddescription>
<para>Inhibit automatic promotion from STARTING→RUNNING for a unit. When inhibited, a unit that remains in STARTING beyond the configured timeout will transition to an error state automatically. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MultiSonicatorSystem.h" line="97" column="6" declfile="include/MultiSonicatorSystem.h" declline="97" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="db/dac/_multi_sonicator_system_8h_1a0fdaad89ff2df7b5e21a14cc25e88f17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool multi_sonicator_confirm_unit_started</definition>
        <argsstring>(uint8_t unit_index)</argsstring>
        <name>multi_sonicator_confirm_unit_started</name>
        <param>
          <type>uint8_t</type>
          <declname>unit_index</declname>
        </param>
        <briefdescription>
<para>Explicitly confirm that a unit has successfully started. </para>
        </briefdescription>
        <detaileddescription>
<para>This immediately promotes STARTING→RUNNING and clears any pending start timeout. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MultiSonicatorSystem.h" line="103" column="6" declfile="include/MultiSonicatorSystem.h" declline="103" declcolumn="6"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="db/dac/_multi_sonicator_system_8h_1a5883b01d55edd95a7af1598a35f6a398" refkind="member"><highlight class="normal"><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7" refid="db/dac/_multi_sonicator_system_8h_1a5883b01d55edd95a7af1598a35f6a398a4f77d0a956ce1cd48e8213f7202979e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d5a/master__state_8h_1a5883b01d55edd95a7af1598a35f6a398a4f77d0a956ce1cd48e8213f7202979e4" kindref="member">MASTER_STATE_IDLE</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="8" refid="db/dac/_multi_sonicator_system_8h_1a5883b01d55edd95a7af1598a35f6a398afd5843c80f602ed57ea84fa7f77b6d92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d5a/master__state_8h_1a5883b01d55edd95a7af1598a35f6a398afd5843c80f602ed57ea84fa7f77b6d92" kindref="member">MASTER_STATE_COORDINATED_START</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="9" refid="db/dac/_multi_sonicator_system_8h_1a5883b01d55edd95a7af1598a35f6a398af64482b47693f4449a9b174c7beef1b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d5a/master__state_8h_1a5883b01d55edd95a7af1598a35f6a398af64482b47693f4449a9b174c7beef1b4" kindref="member">MASTER_STATE_RUNNING</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="10" refid="db/dac/_multi_sonicator_system_8h_1a5883b01d55edd95a7af1598a35f6a398a790c33f92f35b1a7eee14f38474e79f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d5a/master__state_8h_1a5883b01d55edd95a7af1598a35f6a398a790c33f92f35b1a7eee14f38474e79f7" kindref="member">MASTER_STATE_EMERGENCY_STOP</ref><sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="11" refid="db/dac/_multi_sonicator_system_8h_1a5883b01d55edd95a7af1598a35f6a398a39dc65b2e4486769f20f30adb7392bfa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d5a/master__state_8h_1a5883b01d55edd95a7af1598a35f6a398a39dc65b2e4486769f20f30adb7392bfa" kindref="member">MASTER_STATE_FAULT_ISOLATION</ref><sp/>=<sp/>4</highlight></codeline>
<codeline lineno="12"><highlight class="normal">}<sp/><ref refid="d4/d5a/master__state_8h_1a5883b01d55edd95a7af1598a35f6a398" kindref="member">master_state_t</ref>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MULTI_SONICATOR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MULTI_SONICATOR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d9/d49/types_8h" kindref="compound">types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="db/d86/structmulti__status__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="26" refid="db/d86/structmulti__status__t_1a70abf968f501b54be996557ff653b6b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/dac/_multi_sonicator_system_8h_1a5883b01d55edd95a7af1598a35f6a398" kindref="member">master_state_t</ref><sp/><ref refid="db/d86/structmulti__status__t_1a70abf968f501b54be996557ff653b6b4" kindref="member">master_state</ref>;</highlight></codeline>
<codeline lineno="27" refid="db/d86/structmulti__status__t_1a3553822adcbd067d9846049411acfe53" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="db/d86/structmulti__status__t_1a3553822adcbd067d9846049411acfe53" kindref="member">active_mask</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bitmask<sp/>of<sp/>units<sp/>[b0..b3]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="db/d86/structmulti__status__t_1a65bd6f3cb6133e97291ed14d702a0a5c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d3b/state_8h_1ad0aeab8703f3a1439806186cba759315" kindref="member">sonicator_state_t</ref><sp/><ref refid="db/d86/structmulti__status__t_1a65bd6f3cb6133e97291ed14d702a0a5c" kindref="member">unit_state</ref>[4];<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>per‑unit<sp/>states</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="db/d86/structmulti__status__t_1af4edd4148787e47c5a2f28cda6ba5dba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="db/d86/structmulti__status__t_1af4edd4148787e47c5a2f28cda6ba5dba" kindref="member">fault_code</ref>;</highlight></codeline>
<codeline lineno="30" refid="db/d86/structmulti__status__t_1a0644363013284a9323e833dcd8dd0e02" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="db/d86/structmulti__status__t_1a0644363013284a9323e833dcd8dd0e02" kindref="member">last_transition_time_ms</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}<sp/><ref refid="db/d86/structmulti__status__t" kindref="compound">multi_status_t</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="db/dac/_multi_sonicator_system_8h_1a060568980bb741acf21a23a285d0589e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="db/dac/_multi_sonicator_system_8h_1a060568980bb741acf21a23a285d0589e" kindref="member">multi_sonicator_begin</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="db/dac/_multi_sonicator_system_8h_1aab1152cce0dec605b2fcead87d278c53" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="db/dac/_multi_sonicator_system_8h_1aab1152cce0dec605b2fcead87d278c53" kindref="member">multi_sonicator_request_coordinated_start</ref>(uint8_t<sp/>unit_mask);</highlight></codeline>
<codeline lineno="52" refid="db/dac/_multi_sonicator_system_8h_1a7cb3d47e9125e087ee5fb78bfe59a975" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="db/dac/_multi_sonicator_system_8h_1a7cb3d47e9125e087ee5fb78bfe59a975" kindref="member">multi_sonicator_request_coordinated_stop</ref>(uint8_t<sp/>unit_mask);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="db/dac/_multi_sonicator_system_8h_1a5c7720df904acc6a74e6aa94aa351ac2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="db/dac/_multi_sonicator_system_8h_1a5c7720df904acc6a74e6aa94aa351ac2" kindref="member">multi_sonicator_request_unit_start</ref>(uint8_t<sp/>unit_index);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="db/dac/_multi_sonicator_system_8h_1a58aab1f0e21ee5168d7c04740b2b707a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="db/dac/_multi_sonicator_system_8h_1a58aab1f0e21ee5168d7c04740b2b707a" kindref="member">multi_sonicator_request_unit_stop</ref>(uint8_t<sp/>unit_index);</highlight></codeline>
<codeline lineno="84" refid="db/dac/_multi_sonicator_system_8h_1af7ef10dc7ca9ec3293dcc2b4f88ecf6f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="db/dac/_multi_sonicator_system_8h_1af7ef10dc7ca9ec3293dcc2b4f88ecf6f" kindref="member">multi_sonicator_report_unit_fault</ref>(uint8_t<sp/>unit_index,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>overload);</highlight></codeline>
<codeline lineno="85" refid="db/dac/_multi_sonicator_system_8h_1a567f0e25f4d4739b894bc96c6326f2d2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="db/dac/_multi_sonicator_system_8h_1a567f0e25f4d4739b894bc96c6326f2d2" kindref="member">multi_sonicator_emergency_stop</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="db/dac/_multi_sonicator_system_8h_1ab27d110fab9d852323dfad0e2d9e8e7f" refkind="member"><highlight class="normal"><ref refid="d4/d5a/master__state_8h_1a5883b01d55edd95a7af1598a35f6a398" kindref="member">master_state_t</ref><sp/><ref refid="db/dac/_multi_sonicator_system_8h_1ab27d110fab9d852323dfad0e2d9e8e7f" kindref="member">multi_sonicator_update</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89" refid="db/dac/_multi_sonicator_system_8h_1a6f2a01048fa73aa4a239fdd978a6c4cb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d86/structmulti__status__t" kindref="compound">multi_status_t</ref>*<sp/><ref refid="db/dac/_multi_sonicator_system_8h_1a6f2a01048fa73aa4a239fdd978a6c4cb" kindref="member">multi_sonicator_get_status</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="db/dac/_multi_sonicator_system_8h_1ae1716b3075af1da95eb016e1f98c2f8b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/dac/_multi_sonicator_system_8h_1ae1716b3075af1da95eb016e1f98c2f8b" kindref="member">multi_sonicator_set_start_inhibit</ref>(uint8_t<sp/>unit_index,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inhibit);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="db/dac/_multi_sonicator_system_8h_1a0fdaad89ff2df7b5e21a14cc25e88f17" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="db/dac/_multi_sonicator_system_8h_1a0fdaad89ff2df7b5e21a14cc25e88f17" kindref="member">multi_sonicator_confirm_unit_started</ref>(uint8_t<sp/>unit_index);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>MULTI_SONICATOR_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="include/MultiSonicatorSystem.h"/>
  </compounddef>
</doxygen>
