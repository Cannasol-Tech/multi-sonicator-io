{
	"schemaVersion": "2.0",
	"id": 0,
	"name": "multi-sonicator-io-backend",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 1,
			"name": "adapters/HardwareInterface",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 22,
					"name": "HardwareInterface",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hardware Interface Adapter\nIntegrates with existing Python HIL framework for Arduino Test Wrapper communication\nBased on scripts/hil_serial.py and test/acceptance/hil_framework/hardware_interface.py"
							}
						]
					},
					"children": [
						{
							"id": 67,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "src/adapters/HardwareInterface.ts",
									"line": 70,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L70"
								}
							],
							"signatures": [
								{
									"id": 68,
									"name": "HardwareInterface",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"sources": [
										{
											"fileName": "src/adapters/HardwareInterface.ts",
											"line": 70,
											"character": 2,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L70"
										}
									],
									"type": {
										"type": "reference",
										"target": 22,
										"name": "HardwareInterface",
										"package": "multi-sonicator-io-backend"
									},
									"overwrites": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.constructor",
										"package": "@types/node"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.constructor",
								"package": "@types/node"
							}
						},
						{
							"id": 65,
							"name": "captureRejections",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isStatic": true,
								"isExternal": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Value: [boolean](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type)\n\nChange the default "
									},
									{
										"kind": "code",
										"text": "`captureRejections`"
									},
									{
										"kind": "text",
										"text": " option on all new "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " objects."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v13.4.0, v12.16.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 458,
									"character": 15,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L458"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.captureRejections"
							}
						},
						{
							"id": 64,
							"name": "captureRejectionSymbol",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isStatic": true,
								"isExternal": true,
								"isReadonly": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Value: "
									},
									{
										"kind": "code",
										"text": "`Symbol.for('nodejs.rejection')`"
									},
									{
										"kind": "text",
										"text": "\n\nSee how to write a custom "
									},
									{
										"kind": "code",
										"text": "`rejection handler`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v13.4.0, v12.16.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 451,
									"character": 24,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L451"
								}
							],
							"type": {
								"type": "query",
								"queryType": {
									"type": "reference",
									"target": 64,
									"name": "captureRejectionSymbol",
									"package": "@types/node",
									"qualifiedName": "EventEmitter.captureRejectionSymbol"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.captureRejectionSymbol"
							}
						},
						{
							"id": 66,
							"name": "defaultMaxListeners",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isStatic": true,
								"isExternal": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "By default, a maximum of "
									},
									{
										"kind": "code",
										"text": "`10`"
									},
									{
										"kind": "text",
										"text": " listeners can be registered for any single\nevent. This limit can be changed for individual "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " instances\nusing the "
									},
									{
										"kind": "code",
										"text": "`emitter.setMaxListeners(n)`"
									},
									{
										"kind": "text",
										"text": " method. To change the default\nfor _all_"
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " instances, the "
									},
									{
										"kind": "code",
										"text": "`events.defaultMaxListeners`"
									},
									{
										"kind": "text",
										"text": " property\ncan be used. If this value is not a positive number, a "
									},
									{
										"kind": "code",
										"text": "`RangeError`"
									},
									{
										"kind": "text",
										"text": " is thrown.\n\nTake caution when setting the "
									},
									{
										"kind": "code",
										"text": "`events.defaultMaxListeners`"
									},
									{
										"kind": "text",
										"text": " because the\nchange affects _all_ "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " instances, including those created before\nthe change is made. However, calling "
									},
									{
										"kind": "code",
										"text": "`emitter.setMaxListeners(n)`"
									},
									{
										"kind": "text",
										"text": " still has\nprecedence over "
									},
									{
										"kind": "code",
										"text": "`events.defaultMaxListeners`"
									},
									{
										"kind": "text",
										"text": ".\n\nThis is not a hard limit. The "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " instance will allow\nmore listeners to be added but will output a trace warning to stderr indicating\nthat a \"possible EventEmitter memory leak\" has been detected. For any single\n"
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", the "
									},
									{
										"kind": "code",
										"text": "`emitter.getMaxListeners()`"
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "code",
										"text": "`emitter.setMaxListeners()`"
									},
									{
										"kind": "text",
										"text": " methods can be used to\ntemporarily avoid this warning:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nconst emitter = new EventEmitter();\nemitter.setMaxListeners(emitter.getMaxListeners() + 1);\nemitter.once('event', () => {\n  // do stuff\n  emitter.setMaxListeners(Math.max(emitter.getMaxListeners() - 1, 0));\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\nThe "
									},
									{
										"kind": "code",
										"text": "`--trace-warnings`"
									},
									{
										"kind": "text",
										"text": " command-line flag can be used to display the\nstack trace for such warnings.\n\nThe emitted warning can be inspected with "
									},
									{
										"kind": "code",
										"text": "`process.on('warning')`"
									},
									{
										"kind": "text",
										"text": " and will\nhave the additional "
									},
									{
										"kind": "code",
										"text": "`emitter`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`type`"
									},
									{
										"kind": "text",
										"text": ", and "
									},
									{
										"kind": "code",
										"text": "`count`"
									},
									{
										"kind": "text",
										"text": " properties, referring to\nthe event emitter instance, the event's name and the number of attached\nlisteners, respectively.\nIts "
									},
									{
										"kind": "code",
										"text": "`name`"
									},
									{
										"kind": "text",
										"text": " property is set to "
									},
									{
										"kind": "code",
										"text": "`'MaxListenersExceededWarning'`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.11.2"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 497,
									"character": 15,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L497"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.defaultMaxListeners"
							}
						},
						{
							"id": 63,
							"name": "errorMonitor",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isStatic": true,
								"isExternal": true,
								"isReadonly": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This symbol shall be used to install a listener for only monitoring "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " events. Listeners installed using this symbol are called before the regular "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " listeners are called.\n\nInstalling a listener using this symbol does not change the behavior once an "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " event is emitted. Therefore, the process will still crash if no\nregular "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " listener is installed."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v13.6.0, v12.17.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 444,
									"character": 24,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L444"
								}
							],
							"type": {
								"type": "query",
								"queryType": {
									"type": "reference",
									"target": 63,
									"name": "errorMonitor",
									"package": "@types/node",
									"qualifiedName": "EventEmitter.errorMonitor"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.errorMonitor"
							}
						},
						{
							"id": 192,
							"name": "[captureRejectionSymbol]",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 136,
									"character": 8,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L136"
								}
							],
							"signatures": [
								{
									"id": 193,
									"name": "[captureRejectionSymbol]",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 136,
											"character": 8,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L136"
										}
									],
									"typeParameters": [
										{
											"id": 194,
											"name": "K",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {
												"isExternal": true
											}
										}
									],
									"parameters": [
										{
											"id": 195,
											"name": "error",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es5.d.ts",
													"qualifiedName": "Error"
												},
												"name": "Error",
												"package": "typescript"
											}
										},
										{
											"id": 196,
											"name": "event",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 197,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true,
												"isRest": true
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "@types/node",
													"packagePath": "events.d.ts",
													"qualifiedName": "AnyRest"
												},
												"name": "AnyRest",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.[captureRejectionSymbol]",
										"package": "@types/node"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.[captureRejectionSymbol]",
								"package": "@types/node"
							}
						},
						{
							"id": 198,
							"name": "addListener",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 596,
									"character": 16,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L596"
								}
							],
							"signatures": [
								{
									"id": 199,
									"name": "addListener",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Alias for "
											},
											{
												"kind": "code",
												"text": "`emitter.on(eventName, listener)`"
											},
											{
												"kind": "text",
												"text": "."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.1.26"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 596,
											"character": 16,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L596"
										}
									],
									"typeParameters": [
										{
											"id": 200,
											"name": "K",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {
												"isExternal": true
											}
										}
									],
									"parameters": [
										{
											"id": 201,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 202,
											"name": "listener",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 203,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 117,
															"character": 42,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L117"
														}
													],
													"signatures": [
														{
															"id": 204,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/events.d.ts",
																	"line": 117,
																	"character": 42,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L117"
																}
															],
															"parameters": [
																{
																	"id": 205,
																	"name": "args",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.addListener",
										"package": "@types/node"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.addListener",
								"package": "@types/node"
							}
						},
						{
							"id": 137,
							"name": "disconnect",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "src/adapters/HardwareInterface.ts",
									"line": 751,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L751"
								}
							],
							"signatures": [
								{
									"id": 138,
									"name": "disconnect",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "src/adapters/HardwareInterface.ts",
											"line": 751,
											"character": 2,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L751"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 254,
							"name": "emit",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 858,
									"character": 16,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L858"
								}
							],
							"signatures": [
								{
									"id": 255,
									"name": "emit",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Synchronously calls each of the listeners registered for the event named "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": ", in the order they were registered, passing the supplied arguments\nto each.\n\nReturns "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if the event had listeners, "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": " otherwise.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { EventEmitter } from 'node:events';\nconst myEmitter = new EventEmitter();\n\n// First listener\nmyEmitter.on('event', function firstListener() {\n  console.log('Helloooo! first listener');\n});\n// Second listener\nmyEmitter.on('event', function secondListener(arg1, arg2) {\n  console.log(`event with parameters ${arg1}, ${arg2} in second listener`);\n});\n// Third listener\nmyEmitter.on('event', function thirdListener(...args) {\n  const parameters = args.join(', ');\n  console.log(`event with parameters ${parameters} in third listener`);\n});\n\nconsole.log(myEmitter.listeners('event'));\n\nmyEmitter.emit('event', 1, 2, 3, 4, 5);\n\n// Prints:\n// [\n//   [Function: firstListener],\n//   [Function: secondListener],\n//   [Function: thirdListener]\n// ]\n// Helloooo! first listener\n// event with parameters 1, 2 in second listener\n// event with parameters 1, 2, 3, 4, 5 in third listener\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.1.26"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 858,
											"character": 16,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L858"
										}
									],
									"typeParameters": [
										{
											"id": 256,
											"name": "K",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {
												"isExternal": true
											}
										}
									],
									"parameters": [
										{
											"id": 257,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 258,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true,
												"isRest": true
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "@types/node",
													"packagePath": "events.d.ts",
													"qualifiedName": "AnyRest"
												},
												"name": "AnyRest",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.emit",
										"package": "@types/node"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.emit",
								"package": "@types/node"
							}
						},
						{
							"id": 280,
							"name": "eventNames",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 921,
									"character": 16,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L921"
								}
							],
							"signatures": [
								{
									"id": 281,
									"name": "eventNames",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns an array listing the events for which the emitter has registered\nlisteners. The values in the array are strings or "
											},
											{
												"kind": "code",
												"text": "`Symbol`"
											},
											{
												"kind": "text",
												"text": "s.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { EventEmitter } from 'node:events';\n\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => {});\nmyEE.on('bar', () => {});\n\nconst sym = Symbol('symbol');\nmyEE.on(sym, () => {});\n\nconsole.log(myEE.eventNames());\n// Prints: [ 'foo', 'bar', Symbol(symbol) ]\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v6.0.0"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 921,
											"character": 16,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L921"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "intrinsic",
													"name": "symbol"
												}
											]
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.eventNames",
										"package": "@types/node"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.eventNames",
								"package": "@types/node"
							}
						},
						{
							"id": 139,
							"name": "getConfiguration",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "src/adapters/HardwareInterface.ts",
									"line": 760,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L760"
								}
							],
							"signatures": [
								{
									"id": 140,
									"name": "getConfiguration",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "src/adapters/HardwareInterface.ts",
											"line": 760,
											"character": 2,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L760"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 141,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 142,
													"name": "sonicator4",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/adapters/HardwareInterface.ts",
															"line": 48,
															"character": 4,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L48"
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 143,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 146,
																	"name": "enabled",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/adapters/HardwareInterface.ts",
																			"line": 51,
																			"character": 6,
																			"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L51"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	},
																	"defaultValue": "true"
																},
																{
																	"id": 148,
																	"name": "manualFrequencyKHz",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/adapters/HardwareInterface.ts",
																			"line": 53,
																			"character": 6,
																			"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L53"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	},
																	"defaultValue": "2.0"
																},
																{
																	"id": 147,
																	"name": "manualMode",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/adapters/HardwareInterface.ts",
																			"line": 52,
																			"character": 6,
																			"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L52"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	},
																	"defaultValue": "false"
																},
																{
																	"id": 144,
																	"name": "operatingFrequencyKHz",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/adapters/HardwareInterface.ts",
																			"line": 49,
																			"character": 6,
																			"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L49"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	},
																	"defaultValue": "20.0"
																},
																{
																	"id": 145,
																	"name": "outputFrequencyKHz",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/adapters/HardwareInterface.ts",
																			"line": 50,
																			"character": 6,
																			"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L50"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	},
																	"defaultValue": "2.0"
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		146,
																		148,
																		147,
																		144,
																		145
																	]
																}
															],
															"sources": [
																{
																	"fileName": "src/adapters/HardwareInterface.ts",
																	"line": 48,
																	"character": 16,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L48"
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 149,
													"name": "testHarness",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/adapters/HardwareInterface.ts",
															"line": 55,
															"character": 4,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L55"
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 150,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 151,
																	"name": "pinMapping",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/adapters/HardwareInterface.ts",
																			"line": 56,
																			"character": 6,
																			"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L56"
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 152,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 159,
																					"name": "AMPLITUDE_ALL",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/adapters/HardwareInterface.ts",
																							"line": 63,
																							"character": 8,
																							"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L63"
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					},
																					"defaultValue": "'D9'"
																				},
																				{
																					"id": 153,
																					"name": "FREQ_DIV10_4",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/adapters/HardwareInterface.ts",
																							"line": 57,
																							"character": 8,
																							"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L57"
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					},
																					"defaultValue": "'D7'"
																				},
																				{
																					"id": 154,
																					"name": "FREQ_LOCK_4",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/adapters/HardwareInterface.ts",
																							"line": 58,
																							"character": 8,
																							"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L58"
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					},
																					"defaultValue": "'D8'"
																				},
																				{
																					"id": 155,
																					"name": "OVERLOAD_4",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/adapters/HardwareInterface.ts",
																							"line": 59,
																							"character": 8,
																							"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L59"
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					},
																					"defaultValue": "'A2'"
																				},
																				{
																					"id": 158,
																					"name": "POWER_SENSE_4",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/adapters/HardwareInterface.ts",
																							"line": 62,
																							"character": 8,
																							"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L62"
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					},
																					"defaultValue": "'A1'"
																				},
																				{
																					"id": 157,
																					"name": "RESET_4",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/adapters/HardwareInterface.ts",
																							"line": 61,
																							"character": 8,
																							"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L61"
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					},
																					"defaultValue": "'A4'"
																				},
																				{
																					"id": 156,
																					"name": "START_4",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/adapters/HardwareInterface.ts",
																							"line": 60,
																							"character": 8,
																							"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L60"
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					},
																					"defaultValue": "'A3'"
																				},
																				{
																					"id": 161,
																					"name": "STATUS_LED",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/adapters/HardwareInterface.ts",
																							"line": 65,
																							"character": 8,
																							"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L65"
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					},
																					"defaultValue": "'D12'"
																				},
																				{
																					"id": 160,
																					"name": "UART_TXD",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/adapters/HardwareInterface.ts",
																							"line": 64,
																							"character": 8,
																							"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L64"
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					},
																					"defaultValue": "'D11'"
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						159,
																						153,
																						154,
																						155,
																						158,
																						157,
																						156,
																						161,
																						160
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "src/adapters/HardwareInterface.ts",
																					"line": 56,
																					"character": 18,
																					"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L56"
																				}
																			]
																		}
																	},
																	"defaultValue": "..."
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		151
																	]
																}
															],
															"sources": [
																{
																	"fileName": "src/adapters/HardwareInterface.ts",
																	"line": 55,
																	"character": 17,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L55"
																}
															]
														}
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														142,
														149
													]
												}
											],
											"sources": [
												{
													"fileName": "src/adapters/HardwareInterface.ts",
													"line": 761,
													"character": 11,
													"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L761"
												}
											]
										}
									}
								}
							]
						},
						{
							"id": 175,
							"name": "getInfo",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "src/adapters/HardwareInterface.ts",
									"line": 893,
									"character": 8,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L893"
								}
							],
							"signatures": [
								{
									"id": 176,
									"name": "getInfo",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "src/adapters/HardwareInterface.ts",
											"line": 893,
											"character": 8,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L893"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 177,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 179,
															"name": "data",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "src/adapters/HardwareInterface.ts",
																	"line": 893,
																	"character": 47,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L893"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 180,
															"name": "error",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "src/adapters/HardwareInterface.ts",
																	"line": 893,
																	"character": 59,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L893"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 178,
															"name": "success",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/adapters/HardwareInterface.ts",
																	"line": 893,
																	"character": 29,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L893"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																179,
																180,
																178
															]
														}
													],
													"sources": [
														{
															"fileName": "src/adapters/HardwareInterface.ts",
															"line": 893,
															"character": 27,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L893"
														}
													]
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 244,
							"name": "getMaxListeners",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 773,
									"character": 16,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L773"
								}
							],
							"signatures": [
								{
									"id": 245,
									"name": "getMaxListeners",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns the current max listener value for the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": " which is either\nset by "
											},
											{
												"kind": "code",
												"text": "`emitter.setMaxListeners(n)`"
											},
											{
												"kind": "text",
												"text": " or defaults to "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "EventEmitter.defaultMaxListeners",
												"target": 66
											},
											{
												"kind": "text",
												"text": "."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v1.0.0"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 773,
											"character": 16,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L773"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.getMaxListeners",
										"package": "@types/node"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.getMaxListeners",
								"package": "@types/node"
							}
						},
						{
							"id": 125,
							"name": "getPinStates",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "src/adapters/HardwareInterface.ts",
									"line": 664,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L664"
								}
							],
							"signatures": [
								{
									"id": 126,
									"name": "getPinStates",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "src/adapters/HardwareInterface.ts",
											"line": 664,
											"character": 2,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L664"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es2015.collection.d.ts",
											"qualifiedName": "Map"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": 2,
												"name": "PinState",
												"package": "multi-sonicator-io-backend"
											}
										],
										"name": "Map",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 190,
							"name": "getPortPath",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "src/adapters/HardwareInterface.ts",
									"line": 931,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L931"
								}
							],
							"signatures": [
								{
									"id": 191,
									"name": "getPortPath",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "src/adapters/HardwareInterface.ts",
											"line": 931,
											"character": 2,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L931"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							]
						},
						{
							"id": 127,
							"name": "getSerialPort",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "src/adapters/HardwareInterface.ts",
									"line": 670,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L670"
								}
							],
							"signatures": [
								{
									"id": 128,
									"name": "getSerialPort",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "src/adapters/HardwareInterface.ts",
											"line": 670,
											"character": 2,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L670"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							]
						},
						{
							"id": 181,
							"name": "getStatus",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "src/adapters/HardwareInterface.ts",
									"line": 910,
									"character": 8,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L910"
								}
							],
							"signatures": [
								{
									"id": 182,
									"name": "getStatus",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "src/adapters/HardwareInterface.ts",
											"line": 910,
											"character": 8,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L910"
										}
									],
									"parameters": [
										{
											"id": 183,
											"name": "sonicator",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "4"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 184,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 186,
															"name": "data",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "src/adapters/HardwareInterface.ts",
																	"line": 910,
																	"character": 70,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L910"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 187,
															"name": "error",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "src/adapters/HardwareInterface.ts",
																	"line": 910,
																	"character": 82,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L910"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 185,
															"name": "success",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/adapters/HardwareInterface.ts",
																	"line": 910,
																	"character": 52,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L910"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																186,
																187,
																185
															]
														}
													],
													"sources": [
														{
															"fileName": "src/adapters/HardwareInterface.ts",
															"line": 910,
															"character": 50,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L910"
														}
													]
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 105,
							"name": "initialize",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "src/adapters/HardwareInterface.ts",
									"line": 133,
									"character": 8,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L133"
								}
							],
							"signatures": [
								{
									"id": 106,
									"name": "initialize",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "src/adapters/HardwareInterface.ts",
											"line": 133,
											"character": 8,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L133"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 188,
							"name": "isConnected",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "src/adapters/HardwareInterface.ts",
									"line": 927,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L927"
								}
							],
							"signatures": [
								{
									"id": 189,
									"name": "isConnected",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "src/adapters/HardwareInterface.ts",
											"line": 927,
											"character": 2,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L927"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 259,
							"name": "listenerCount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 867,
									"character": 16,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L867"
								}
							],
							"signatures": [
								{
									"id": 260,
									"name": "listenerCount",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns the number of listeners listening for the event named "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": ".\nIf "
											},
											{
												"kind": "code",
												"text": "`listener`"
											},
											{
												"kind": "text",
												"text": " is provided, it will return how many times the listener is found\nin the list of the listeners of the event."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v3.2.0"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 867,
											"character": 16,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L867"
										}
									],
									"typeParameters": [
										{
											"id": 261,
											"name": "K",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {
												"isExternal": true
											}
										}
									],
									"parameters": [
										{
											"id": 262,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The name of the event being listened for"
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 263,
											"name": "listener",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The event handler function"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es5.d.ts",
													"qualifiedName": "Function"
												},
												"name": "Function",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.listenerCount",
										"package": "@types/node"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.listenerCount",
								"package": "@types/node"
							}
						},
						{
							"id": 246,
							"name": "listeners",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 786,
									"character": 16,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L786"
								}
							],
							"signatures": [
								{
									"id": 247,
									"name": "listeners",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns a copy of the array of listeners for the event named "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": ".\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\nconsole.log(util.inspect(server.listeners('connection')));\n// Prints: [ [Function] ]\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.1.26"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 786,
											"character": 16,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L786"
										}
									],
									"typeParameters": [
										{
											"id": 248,
											"name": "K",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {
												"isExternal": true
											}
										}
									],
									"parameters": [
										{
											"id": 249,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"packageName": "typescript",
												"packagePath": "lib/lib.es5.d.ts",
												"qualifiedName": "Function"
											},
											"name": "Function",
											"package": "typescript"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.listeners",
										"package": "@types/node"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.listeners",
								"package": "@types/node"
							}
						},
						{
							"id": 230,
							"name": "off",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 746,
									"character": 16,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L746"
								}
							],
							"signatures": [
								{
									"id": 231,
									"name": "off",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Alias for "
											},
											{
												"kind": "code",
												"text": "`emitter.removeListener()`"
											},
											{
												"kind": "text",
												"text": "."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v10.0.0"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 746,
											"character": 16,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L746"
										}
									],
									"typeParameters": [
										{
											"id": 232,
											"name": "K",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {
												"isExternal": true
											}
										}
									],
									"parameters": [
										{
											"id": 233,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 234,
											"name": "listener",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 235,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 117,
															"character": 42,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L117"
														}
													],
													"signatures": [
														{
															"id": 236,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/events.d.ts",
																	"line": 117,
																	"character": 42,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L117"
																}
															],
															"parameters": [
																{
																	"id": 237,
																	"name": "args",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.off",
										"package": "@types/node"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.off",
								"package": "@types/node"
							}
						},
						{
							"id": 206,
							"name": "on",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 628,
									"character": 16,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L628"
								}
							],
							"signatures": [
								{
									"id": 207,
									"name": "on",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Adds the "
											},
											{
												"kind": "code",
												"text": "`listener`"
											},
											{
												"kind": "text",
												"text": " function to the end of the listeners array for the event\nnamed "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": ". No checks are made to see if the "
											},
											{
												"kind": "code",
												"text": "`listener`"
											},
											{
												"kind": "text",
												"text": " has already\nbeen added. Multiple calls passing the same combination of "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": " and\n"
											},
											{
												"kind": "code",
												"text": "`listener`"
											},
											{
												"kind": "text",
												"text": " will result in the "
											},
											{
												"kind": "code",
												"text": "`listener`"
											},
											{
												"kind": "text",
												"text": " being added, and called, multiple times.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\n```"
											},
											{
												"kind": "text",
												"text": "\n\nReturns a reference to the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": ", so that calls can be chained.\n\nBy default, event listeners are invoked in the order they are added. The "
											},
											{
												"kind": "code",
												"text": "`emitter.prependListener()`"
											},
											{
												"kind": "text",
												"text": " method can be used as an alternative to add the\nevent listener to the beginning of the listeners array.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { EventEmitter } from 'node:events';\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => console.log('a'));\nmyEE.prependListener('foo', () => console.log('b'));\nmyEE.emit('foo');\n// Prints:\n//   b\n//   a\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.1.101"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 628,
											"character": 16,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L628"
										}
									],
									"typeParameters": [
										{
											"id": 208,
											"name": "K",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {
												"isExternal": true
											}
										}
									],
									"parameters": [
										{
											"id": 209,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The name of the event."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 210,
											"name": "listener",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The callback function"
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 211,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 117,
															"character": 42,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L117"
														}
													],
													"signatures": [
														{
															"id": 212,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/events.d.ts",
																	"line": 117,
																	"character": 42,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L117"
																}
															],
															"parameters": [
																{
																	"id": 213,
																	"name": "args",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.on",
										"package": "@types/node"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.on",
								"package": "@types/node"
							}
						},
						{
							"id": 214,
							"name": "once",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 658,
									"character": 16,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L658"
								}
							],
							"signatures": [
								{
									"id": 215,
									"name": "once",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Adds a **one-time** "
											},
											{
												"kind": "code",
												"text": "`listener`"
											},
											{
												"kind": "text",
												"text": " function for the event named "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": ". The\nnext time "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": " is triggered, this listener is removed and then invoked.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nserver.once('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n```"
											},
											{
												"kind": "text",
												"text": "\n\nReturns a reference to the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": ", so that calls can be chained.\n\nBy default, event listeners are invoked in the order they are added. The "
											},
											{
												"kind": "code",
												"text": "`emitter.prependOnceListener()`"
											},
											{
												"kind": "text",
												"text": " method can be used as an alternative to add the\nevent listener to the beginning of the listeners array.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { EventEmitter } from 'node:events';\nconst myEE = new EventEmitter();\nmyEE.once('foo', () => console.log('a'));\nmyEE.prependOnceListener('foo', () => console.log('b'));\nmyEE.emit('foo');\n// Prints:\n//   b\n//   a\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.3.0"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 658,
											"character": 16,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L658"
										}
									],
									"typeParameters": [
										{
											"id": 216,
											"name": "K",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {
												"isExternal": true
											}
										}
									],
									"parameters": [
										{
											"id": 217,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The name of the event."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 218,
											"name": "listener",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The callback function"
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 219,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 117,
															"character": 42,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L117"
														}
													],
													"signatures": [
														{
															"id": 220,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/events.d.ts",
																	"line": 117,
																	"character": 42,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L117"
																}
															],
															"parameters": [
																{
																	"id": 221,
																	"name": "args",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.once",
										"package": "@types/node"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.once",
								"package": "@types/node"
							}
						},
						{
							"id": 168,
							"name": "ping",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "src/adapters/HardwareInterface.ts",
									"line": 867,
									"character": 8,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L867"
								}
							],
							"signatures": [
								{
									"id": 169,
									"name": "ping",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "src/adapters/HardwareInterface.ts",
											"line": 867,
											"character": 8,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L867"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 170,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 172,
															"name": "data",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "src/adapters/HardwareInterface.ts",
																	"line": 867,
																	"character": 44,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L867"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 173,
															"name": "error",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "src/adapters/HardwareInterface.ts",
																	"line": 867,
																	"character": 56,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L867"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 174,
															"name": "responseTime",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "src/adapters/HardwareInterface.ts",
																	"line": 867,
																	"character": 72,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L867"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 171,
															"name": "success",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/adapters/HardwareInterface.ts",
																	"line": 867,
																	"character": 26,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L867"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																172,
																173,
																174,
																171
															]
														}
													],
													"sources": [
														{
															"fileName": "src/adapters/HardwareInterface.ts",
															"line": 867,
															"character": 24,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L867"
														}
													]
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 264,
							"name": "prependListener",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 885,
									"character": 16,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L885"
								}
							],
							"signatures": [
								{
									"id": 265,
									"name": "prependListener",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Adds the "
											},
											{
												"kind": "code",
												"text": "`listener`"
											},
											{
												"kind": "text",
												"text": " function to the _beginning_ of the listeners array for the\nevent named "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": ". No checks are made to see if the "
											},
											{
												"kind": "code",
												"text": "`listener`"
											},
											{
												"kind": "text",
												"text": " has\nalready been added. Multiple calls passing the same combination of "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": "\nand "
											},
											{
												"kind": "code",
												"text": "`listener`"
											},
											{
												"kind": "text",
												"text": " will result in the "
											},
											{
												"kind": "code",
												"text": "`listener`"
											},
											{
												"kind": "text",
												"text": " being added, and called, multiple times.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nserver.prependListener('connection', (stream) => {\n  console.log('someone connected!');\n});\n```"
											},
											{
												"kind": "text",
												"text": "\n\nReturns a reference to the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": ", so that calls can be chained."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v6.0.0"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 885,
											"character": 16,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L885"
										}
									],
									"typeParameters": [
										{
											"id": 266,
											"name": "K",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {
												"isExternal": true
											}
										}
									],
									"parameters": [
										{
											"id": 267,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The name of the event."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 268,
											"name": "listener",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The callback function"
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 269,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 117,
															"character": 42,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L117"
														}
													],
													"signatures": [
														{
															"id": 270,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/events.d.ts",
																	"line": 117,
																	"character": 42,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L117"
																}
															],
															"parameters": [
																{
																	"id": 271,
																	"name": "args",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.prependListener",
										"package": "@types/node"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.prependListener",
								"package": "@types/node"
							}
						},
						{
							"id": 272,
							"name": "prependOnceListener",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 901,
									"character": 16,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L901"
								}
							],
							"signatures": [
								{
									"id": 273,
									"name": "prependOnceListener",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Adds a **one-time**"
											},
											{
												"kind": "code",
												"text": "`listener`"
											},
											{
												"kind": "text",
												"text": " function for the event named "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": " to the _beginning_ of the listeners array. The next time "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": " is triggered, this\nlistener is removed, and then invoked.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nserver.prependOnceListener('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n```"
											},
											{
												"kind": "text",
												"text": "\n\nReturns a reference to the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": ", so that calls can be chained."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v6.0.0"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 901,
											"character": 16,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L901"
										}
									],
									"typeParameters": [
										{
											"id": 274,
											"name": "K",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {
												"isExternal": true
											}
										}
									],
									"parameters": [
										{
											"id": 275,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The name of the event."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 276,
											"name": "listener",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The callback function"
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 277,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 117,
															"character": 42,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L117"
														}
													],
													"signatures": [
														{
															"id": 278,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/events.d.ts",
																	"line": 117,
																	"character": 42,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L117"
																}
															],
															"parameters": [
																{
																	"id": 279,
																	"name": "args",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.prependOnceListener",
										"package": "@types/node"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.prependOnceListener",
								"package": "@types/node"
							}
						},
						{
							"id": 250,
							"name": "rawListeners",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 817,
									"character": 16,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L817"
								}
							],
							"signatures": [
								{
									"id": 251,
									"name": "rawListeners",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns a copy of the array of listeners for the event named "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": ",\nincluding any wrappers (such as those created by "
											},
											{
												"kind": "code",
												"text": "`.once()`"
											},
											{
												"kind": "text",
												"text": ").\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { EventEmitter } from 'node:events';\nconst emitter = new EventEmitter();\nemitter.once('log', () => console.log('log once'));\n\n// Returns a new Array with a function `onceWrapper` which has a property\n// `listener` which contains the original listener bound above\nconst listeners = emitter.rawListeners('log');\nconst logFnWrapper = listeners[0];\n\n// Logs \"log once\" to the console and does not unbind the `once` event\nlogFnWrapper.listener();\n\n// Logs \"log once\" to the console and removes the listener\nlogFnWrapper();\n\nemitter.on('log', () => console.log('log persistently'));\n// Will return a new Array with a single function bound by `.on()` above\nconst newListeners = emitter.rawListeners('log');\n\n// Logs \"log persistently\" twice\nnewListeners[0]();\nemitter.emit('log');\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v9.4.0"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 817,
											"character": 16,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L817"
										}
									],
									"typeParameters": [
										{
											"id": 252,
											"name": "K",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {
												"isExternal": true
											}
										}
									],
									"parameters": [
										{
											"id": 253,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"packageName": "typescript",
												"packagePath": "lib/lib.es5.d.ts",
												"qualifiedName": "Function"
											},
											"name": "Function",
											"package": "typescript"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.rawListeners",
										"package": "@types/node"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.rawListeners",
								"package": "@types/node"
							}
						},
						{
							"id": 131,
							"name": "reconnect",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "src/adapters/HardwareInterface.ts",
									"line": 720,
									"character": 8,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L720"
								}
							],
							"signatures": [
								{
									"id": 132,
									"name": "reconnect",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "src/adapters/HardwareInterface.ts",
											"line": 720,
											"character": 8,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L720"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 238,
							"name": "removeAllListeners",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 757,
									"character": 16,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L757"
								}
							],
							"signatures": [
								{
									"id": 239,
									"name": "removeAllListeners",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Removes all listeners, or those of the specified "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": ".\n\nIt is bad practice to remove listeners added elsewhere in the code,\nparticularly when the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": " instance was created by some other\ncomponent or module (e.g. sockets or file streams).\n\nReturns a reference to the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": ", so that calls can be chained."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.1.26"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 757,
											"character": 16,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L757"
										}
									],
									"parameters": [
										{
											"id": 240,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.removeAllListeners",
										"package": "@types/node"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.removeAllListeners",
								"package": "@types/node"
							}
						},
						{
							"id": 222,
							"name": "removeListener",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 741,
									"character": 16,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L741"
								}
							],
							"signatures": [
								{
									"id": 223,
									"name": "removeListener",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Removes the specified "
											},
											{
												"kind": "code",
												"text": "`listener`"
											},
											{
												"kind": "text",
												"text": " from the listener array for the event named "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": ".\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nconst callback = (stream) => {\n  console.log('someone connected!');\n};\nserver.on('connection', callback);\n// ...\nserver.removeListener('connection', callback);\n```"
											},
											{
												"kind": "text",
												"text": "\n\n"
											},
											{
												"kind": "code",
												"text": "`removeListener()`"
											},
											{
												"kind": "text",
												"text": " will remove, at most, one instance of a listener from the\nlistener array. If any single listener has been added multiple times to the\nlistener array for the specified "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": ", then "
											},
											{
												"kind": "code",
												"text": "`removeListener()`"
											},
											{
												"kind": "text",
												"text": " must be\ncalled multiple times to remove each instance.\n\nOnce an event is emitted, all listeners attached to it at the\ntime of emitting are called in order. This implies that any "
											},
											{
												"kind": "code",
												"text": "`removeListener()`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`removeAllListeners()`"
											},
											{
												"kind": "text",
												"text": " calls _after_ emitting and _before_ the last listener finishes execution\nwill not remove them from"
											},
											{
												"kind": "code",
												"text": "`emit()`"
											},
											{
												"kind": "text",
												"text": " in progress. Subsequent events behave as expected.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { EventEmitter } from 'node:events';\nclass MyEmitter extends EventEmitter {}\nconst myEmitter = new MyEmitter();\n\nconst callbackA = () => {\n  console.log('A');\n  myEmitter.removeListener('event', callbackB);\n};\n\nconst callbackB = () => {\n  console.log('B');\n};\n\nmyEmitter.on('event', callbackA);\n\nmyEmitter.on('event', callbackB);\n\n// callbackA removes listener callbackB but it will still be called.\n// Internal listener array at time of emit [callbackA, callbackB]\nmyEmitter.emit('event');\n// Prints:\n//   A\n//   B\n\n// callbackB is now removed.\n// Internal listener array [callbackA]\nmyEmitter.emit('event');\n// Prints:\n//   A\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBecause listeners are managed using an internal array, calling this will\nchange the position indices of any listener registered _after_ the listener\nbeing removed. This will not impact the order in which listeners are called,\nbut it means that any copies of the listener array as returned by\nthe "
											},
											{
												"kind": "code",
												"text": "`emitter.listeners()`"
											},
											{
												"kind": "text",
												"text": " method will need to be recreated.\n\nWhen a single function has been added as a handler multiple times for a single\nevent (as in the example below), "
											},
											{
												"kind": "code",
												"text": "`removeListener()`"
											},
											{
												"kind": "text",
												"text": " will remove the most\nrecently added instance. In the example the "
											},
											{
												"kind": "code",
												"text": "`once('ping')`"
											},
											{
												"kind": "text",
												"text": " listener is removed:\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { EventEmitter } from 'node:events';\nconst ee = new EventEmitter();\n\nfunction pong() {\n  console.log('pong');\n}\n\nee.on('ping', pong);\nee.once('ping', pong);\nee.removeListener('ping', pong);\n\nee.emit('ping');\nee.emit('ping');\n```"
											},
											{
												"kind": "text",
												"text": "\n\nReturns a reference to the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": ", so that calls can be chained."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.1.26"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 741,
											"character": 16,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L741"
										}
									],
									"typeParameters": [
										{
											"id": 224,
											"name": "K",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {
												"isExternal": true
											}
										}
									],
									"parameters": [
										{
											"id": 225,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 226,
											"name": "listener",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 227,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 117,
															"character": 42,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L117"
														}
													],
													"signatures": [
														{
															"id": 228,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/events.d.ts",
																	"line": 117,
																	"character": 42,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L117"
																}
															],
															"parameters": [
																{
																	"id": 229,
																	"name": "args",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.removeListener",
										"package": "@types/node"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.removeListener",
								"package": "@types/node"
							}
						},
						{
							"id": 133,
							"name": "retryConnection",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "src/adapters/HardwareInterface.ts",
									"line": 730,
									"character": 8,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L730"
								}
							],
							"signatures": [
								{
									"id": 134,
									"name": "retryConnection",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "src/adapters/HardwareInterface.ts",
											"line": 730,
											"character": 8,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L730"
										}
									],
									"parameters": [
										{
											"id": 135,
											"name": "maxAttempts",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "3"
										},
										{
											"id": 136,
											"name": "delayMs",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "2000"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 122,
							"name": "sendCommand",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "src/adapters/HardwareInterface.ts",
									"line": 635,
									"character": 8,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L635"
								}
							],
							"signatures": [
								{
									"id": 123,
									"name": "sendCommand",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "src/adapters/HardwareInterface.ts",
											"line": 635,
											"character": 8,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L635"
										}
									],
									"parameters": [
										{
											"id": 124,
											"name": "command",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 13,
												"name": "HardwareCommand",
												"package": "multi-sonicator-io-backend"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 17,
												"name": "HardwareResponse",
												"package": "multi-sonicator-io-backend"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 241,
							"name": "setMaxListeners",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 767,
									"character": 16,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L767"
								}
							],
							"signatures": [
								{
									"id": 242,
									"name": "setMaxListeners",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "By default "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": "s will print a warning if more than "
											},
											{
												"kind": "code",
												"text": "`10`"
											},
											{
												"kind": "text",
												"text": " listeners are\nadded for a particular event. This is a useful default that helps finding\nmemory leaks. The "
											},
											{
												"kind": "code",
												"text": "`emitter.setMaxListeners()`"
											},
											{
												"kind": "text",
												"text": " method allows the limit to be\nmodified for this specific "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": " instance. The value can be set to "
											},
											{
												"kind": "code",
												"text": "`Infinity`"
											},
											{
												"kind": "text",
												"text": " (or "
											},
											{
												"kind": "code",
												"text": "`0`"
											},
											{
												"kind": "text",
												"text": ") to indicate an unlimited number of listeners.\n\nReturns a reference to the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": ", so that calls can be chained."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.3.5"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 767,
											"character": 16,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L767"
										}
									],
									"parameters": [
										{
											"id": 243,
											"name": "n",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.setMaxListeners",
										"package": "@types/node"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.setMaxListeners",
								"package": "@types/node"
							}
						},
						{
							"id": 162,
							"name": "updateConfiguration",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "src/adapters/HardwareInterface.ts",
									"line": 764,
									"character": 8,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L764"
								}
							],
							"signatures": [
								{
									"id": 163,
									"name": "updateConfiguration",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "src/adapters/HardwareInterface.ts",
											"line": 764,
											"character": 8,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L764"
										}
									],
									"parameters": [
										{
											"id": 164,
											"name": "newConfig",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 165,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 167,
															"name": "config",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/adapters/HardwareInterface.ts",
																	"line": 764,
																	"character": 73,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L764"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 166,
															"name": "success",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/adapters/HardwareInterface.ts",
																	"line": 764,
																	"character": 55,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L764"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																167,
																166
															]
														}
													],
													"sources": [
														{
															"fileName": "src/adapters/HardwareInterface.ts",
															"line": 764,
															"character": 53,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L764"
														}
													]
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 56,
							"name": "addAbortListener",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isStatic": true,
								"isExternal": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 436,
									"character": 15,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L436"
								}
							],
							"signatures": [
								{
									"id": 57,
									"name": "addAbortListener",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Listens once to the "
											},
											{
												"kind": "code",
												"text": "`abort`"
											},
											{
												"kind": "text",
												"text": " event on the provided "
											},
											{
												"kind": "code",
												"text": "`signal`"
											},
											{
												"kind": "text",
												"text": ".\n\nListening to the "
											},
											{
												"kind": "code",
												"text": "`abort`"
											},
											{
												"kind": "text",
												"text": " event on abort signals is unsafe and may\nlead to resource leaks since another third party with the signal can\ncall "
											},
											{
												"kind": "code",
												"text": "`e.stopImmediatePropagation()`"
											},
											{
												"kind": "text",
												"text": ". Unfortunately Node.js cannot change\nthis since it would violate the web standard. Additionally, the original\nAPI makes it easy to forget to remove listeners.\n\nThis API allows safely using "
											},
											{
												"kind": "code",
												"text": "`AbortSignal`"
											},
											{
												"kind": "text",
												"text": "s in Node.js APIs by solving these\ntwo issues by listening to the event such that "
											},
											{
												"kind": "code",
												"text": "`stopImmediatePropagation`"
											},
											{
												"kind": "text",
												"text": " does\nnot prevent the listener from running.\n\nReturns a disposable so that it may be unsubscribed from more easily.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { addAbortListener } from 'node:events';\n\nfunction example(signal) {\n  let disposable;\n  try {\n    signal.addEventListener('abort', (e) => e.stopImmediatePropagation());\n    disposable = addAbortListener(signal, (e) => {\n      // Do something when signal is aborted.\n    });\n  } finally {\n    disposable?.[Symbol.dispose]();\n  }\n}\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v20.5.0"
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Disposable that removes the "
													},
													{
														"kind": "code",
														"text": "`abort`"
													},
													{
														"kind": "text",
														"text": " listener."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 436,
											"character": 15,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L436"
										}
									],
									"parameters": [
										{
											"id": 58,
											"name": "signal",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "@types/node",
													"packagePath": "web-globals/abortcontroller.d.ts",
													"qualifiedName": "__global.AbortSignal"
												},
												"name": "AbortSignal",
												"package": "@types/node",
												"qualifiedName": "__global.AbortSignal"
											}
										},
										{
											"id": 59,
											"name": "resource",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 60,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 436,
															"character": 63,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L436"
														}
													],
													"signatures": [
														{
															"id": 61,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/events.d.ts",
																	"line": 436,
																	"character": 63,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L436"
																}
															],
															"parameters": [
																{
																	"id": 62,
																	"name": "event",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"packageName": "@types/node",
																			"packagePath": "web-globals/events.d.ts",
																			"qualifiedName": "__global.Event"
																		},
																		"name": "Event",
																		"package": "@types/node",
																		"qualifiedName": "__global.Event"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.esnext.disposable.d.ts",
											"qualifiedName": "Disposable"
										},
										"name": "Disposable",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.addAbortListener"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.addAbortListener"
							}
						},
						{
							"id": 45,
							"name": "getEventListeners",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isStatic": true,
								"isExternal": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 358,
									"character": 15,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L358"
								}
							],
							"signatures": [
								{
									"id": 46,
									"name": "getEventListeners",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns a copy of the array of listeners for the event named "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": ".\n\nFor "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": "s this behaves exactly the same as calling "
											},
											{
												"kind": "code",
												"text": "`.listeners`"
											},
											{
												"kind": "text",
												"text": " on\nthe emitter.\n\nFor "
											},
											{
												"kind": "code",
												"text": "`EventTarget`"
											},
											{
												"kind": "text",
												"text": "s this is the only way to get the event listeners for the\nevent target. This is useful for debugging and diagnostic purposes.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { getEventListeners, EventEmitter } from 'node:events';\n\n{\n  const ee = new EventEmitter();\n  const listener = () => console.log('Events are fun');\n  ee.on('foo', listener);\n  console.log(getEventListeners(ee, 'foo')); // [ [Function: listener] ]\n}\n{\n  const et = new EventTarget();\n  const listener = () => console.log('Events are fun');\n  et.addEventListener('foo', listener);\n  console.log(getEventListeners(et, 'foo')); // [ [Function: listener] ]\n}\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v15.2.0, v14.17.0"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 358,
											"character": 15,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L358"
										}
									],
									"parameters": [
										{
											"id": 47,
											"name": "emitter",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"packageName": "@types/node",
															"packagePath": "events.d.ts",
															"qualifiedName": "__global.NodeJS.EventEmitter"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"packageName": "@types/node",
																	"packagePath": "events.d.ts",
																	"qualifiedName": "DefaultEventMap"
																},
																"name": "DefaultEventMap",
																"package": "@types/node"
															}
														],
														"name": "EventEmitter",
														"package": "@types/node",
														"qualifiedName": "__global.NodeJS.EventEmitter"
													},
													{
														"type": "reference",
														"target": {
															"packageName": "@types/node",
															"packagePath": "web-globals/events.d.ts",
															"qualifiedName": "__global.EventTarget"
														},
														"name": "EventTarget",
														"package": "@types/node",
														"qualifiedName": "__global.EventTarget"
													}
												]
											}
										},
										{
											"id": 48,
											"name": "name",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"packageName": "typescript",
												"packagePath": "lib/lib.es5.d.ts",
												"qualifiedName": "Function"
											},
											"name": "Function",
											"package": "typescript"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.getEventListeners"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.getEventListeners"
							}
						},
						{
							"id": 49,
							"name": "getMaxListeners",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isStatic": true,
								"isExternal": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 387,
									"character": 15,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L387"
								}
							],
							"signatures": [
								{
									"id": 50,
									"name": "getMaxListeners",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns the currently set max amount of listeners.\n\nFor "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": "s this behaves exactly the same as calling "
											},
											{
												"kind": "code",
												"text": "`.getMaxListeners`"
											},
											{
												"kind": "text",
												"text": " on\nthe emitter.\n\nFor "
											},
											{
												"kind": "code",
												"text": "`EventTarget`"
											},
											{
												"kind": "text",
												"text": "s this is the only way to get the max event listeners for the\nevent target. If the number of event handlers on a single EventTarget exceeds\nthe max set, the EventTarget will print a warning.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { getMaxListeners, setMaxListeners, EventEmitter } from 'node:events';\n\n{\n  const ee = new EventEmitter();\n  console.log(getMaxListeners(ee)); // 10\n  setMaxListeners(11, ee);\n  console.log(getMaxListeners(ee)); // 11\n}\n{\n  const et = new EventTarget();\n  console.log(getMaxListeners(et)); // 10\n  setMaxListeners(11, et);\n  console.log(getMaxListeners(et)); // 11\n}\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v19.9.0"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 387,
											"character": 15,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L387"
										}
									],
									"parameters": [
										{
											"id": 51,
											"name": "emitter",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"packageName": "@types/node",
															"packagePath": "events.d.ts",
															"qualifiedName": "__global.NodeJS.EventEmitter"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"packageName": "@types/node",
																	"packagePath": "events.d.ts",
																	"qualifiedName": "DefaultEventMap"
																},
																"name": "DefaultEventMap",
																"package": "@types/node"
															}
														],
														"name": "EventEmitter",
														"package": "@types/node",
														"qualifiedName": "__global.NodeJS.EventEmitter"
													},
													{
														"type": "reference",
														"target": {
															"packageName": "@types/node",
															"packagePath": "web-globals/events.d.ts",
															"qualifiedName": "__global.EventTarget"
														},
														"name": "EventTarget",
														"package": "@types/node",
														"qualifiedName": "__global.EventTarget"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.getMaxListeners"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.getMaxListeners"
							}
						},
						{
							"id": 41,
							"name": "listenerCount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isStatic": true,
								"isExternal": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 330,
									"character": 15,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L330"
								}
							],
							"signatures": [
								{
									"id": 42,
									"name": "listenerCount",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A class method that returns the number of listeners for the given "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": " registered on the given "
											},
											{
												"kind": "code",
												"text": "`emitter`"
											},
											{
												"kind": "text",
												"text": ".\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { EventEmitter, listenerCount } from 'node:events';\n\nconst myEmitter = new EventEmitter();\nmyEmitter.on('event', () => {});\nmyEmitter.on('event', () => {});\nconsole.log(listenerCount(myEmitter, 'event'));\n// Prints: 2\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.9.12"
													}
												]
											},
											{
												"tag": "@deprecated",
												"content": [
													{
														"kind": "text",
														"text": "Since v3.2.0 - Use "
													},
													{
														"kind": "code",
														"text": "`listenerCount`"
													},
													{
														"kind": "text",
														"text": " instead."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 330,
											"character": 15,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L330"
										}
									],
									"parameters": [
										{
											"id": 43,
											"name": "emitter",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The emitter to query"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "@types/node",
													"packagePath": "events.d.ts",
													"qualifiedName": "__global.NodeJS.EventEmitter"
												},
												"name": "EventEmitter",
												"package": "@types/node",
												"qualifiedName": "__global.NodeJS.EventEmitter"
											}
										},
										{
											"id": 44,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The event name"
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.listenerCount"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.listenerCount"
							}
						},
						{
							"id": 32,
							"name": "on",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isStatic": true,
								"isExternal": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 303,
									"character": 15,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L303"
								},
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 308,
									"character": 15,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L308"
								}
							],
							"signatures": [
								{
									"id": 33,
									"name": "on",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "code",
												"text": "```js\nimport { on, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ee = new EventEmitter();\n\n// Emit later on\nprocess.nextTick(() => {\n  ee.emit('foo', 'bar');\n  ee.emit('foo', 42);\n});\n\nfor await (const event of on(ee, 'foo')) {\n  // The execution of this inner block is synchronous and it\n  // processes one event at a time (even with await). Do not use\n  // if concurrent execution is required.\n  console.log(event); // prints ['bar'] [42]\n}\n// Unreachable here\n```"
											},
											{
												"kind": "text",
												"text": "\n\nReturns an "
											},
											{
												"kind": "code",
												"text": "`AsyncIterator`"
											},
											{
												"kind": "text",
												"text": " that iterates "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": " events. It will throw\nif the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": " emits "
											},
											{
												"kind": "code",
												"text": "`'error'`"
											},
											{
												"kind": "text",
												"text": ". It removes all listeners when\nexiting the loop. The "
											},
											{
												"kind": "code",
												"text": "`value`"
											},
											{
												"kind": "text",
												"text": " returned by each iteration is an array\ncomposed of the emitted event arguments.\n\nAn "
											},
											{
												"kind": "code",
												"text": "`AbortSignal`"
											},
											{
												"kind": "text",
												"text": " can be used to cancel waiting on events:\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { on, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ac = new AbortController();\n\n(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo', { signal: ac.signal })) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n\nprocess.nextTick(() => ac.abort());\n```"
											},
											{
												"kind": "text",
												"text": "\n\nUse the "
											},
											{
												"kind": "code",
												"text": "`close`"
											},
											{
												"kind": "text",
												"text": " option to specify an array of event names that will end the iteration:\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { on, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ee = new EventEmitter();\n\n// Emit later on\nprocess.nextTick(() => {\n  ee.emit('foo', 'bar');\n  ee.emit('foo', 42);\n  ee.emit('close');\n});\n\nfor await (const event of on(ee, 'foo', { close: ['close'] })) {\n  console.log(event); // prints ['bar'] [42]\n}\n// the loop will exit after 'close' is emitted\nconsole.log('done'); // prints 'done'\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v13.6.0, v12.16.0"
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An "
													},
													{
														"kind": "code",
														"text": "`AsyncIterator`"
													},
													{
														"kind": "text",
														"text": " that iterates "
													},
													{
														"kind": "code",
														"text": "`eventName`"
													},
													{
														"kind": "text",
														"text": " events emitted by the "
													},
													{
														"kind": "code",
														"text": "`emitter`"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 303,
											"character": 15,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L303"
										}
									],
									"parameters": [
										{
											"id": 34,
											"name": "emitter",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "@types/node",
													"packagePath": "events.d.ts",
													"qualifiedName": "__global.NodeJS.EventEmitter"
												},
												"name": "EventEmitter",
												"package": "@types/node",
												"qualifiedName": "__global.NodeJS.EventEmitter"
											}
										},
										{
											"id": 35,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 36,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "@types/node",
													"packagePath": "events.d.ts",
													"qualifiedName": "StaticEventEmitterIteratorOptions"
												},
												"name": "StaticEventEmitterIteratorOptions",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@types/node",
											"packagePath": "compatibility/iterators.d.ts",
											"qualifiedName": "NodeJS.AsyncIterator"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										],
										"name": "AsyncIterator",
										"package": "@types/node",
										"qualifiedName": "NodeJS.AsyncIterator"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.on"
									}
								},
								{
									"id": 37,
									"name": "on",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "code",
												"text": "```js\nimport { on, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ee = new EventEmitter();\n\n// Emit later on\nprocess.nextTick(() => {\n  ee.emit('foo', 'bar');\n  ee.emit('foo', 42);\n});\n\nfor await (const event of on(ee, 'foo')) {\n  // The execution of this inner block is synchronous and it\n  // processes one event at a time (even with await). Do not use\n  // if concurrent execution is required.\n  console.log(event); // prints ['bar'] [42]\n}\n// Unreachable here\n```"
											},
											{
												"kind": "text",
												"text": "\n\nReturns an "
											},
											{
												"kind": "code",
												"text": "`AsyncIterator`"
											},
											{
												"kind": "text",
												"text": " that iterates "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": " events. It will throw\nif the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": " emits "
											},
											{
												"kind": "code",
												"text": "`'error'`"
											},
											{
												"kind": "text",
												"text": ". It removes all listeners when\nexiting the loop. The "
											},
											{
												"kind": "code",
												"text": "`value`"
											},
											{
												"kind": "text",
												"text": " returned by each iteration is an array\ncomposed of the emitted event arguments.\n\nAn "
											},
											{
												"kind": "code",
												"text": "`AbortSignal`"
											},
											{
												"kind": "text",
												"text": " can be used to cancel waiting on events:\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { on, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ac = new AbortController();\n\n(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo', { signal: ac.signal })) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n\nprocess.nextTick(() => ac.abort());\n```"
											},
											{
												"kind": "text",
												"text": "\n\nUse the "
											},
											{
												"kind": "code",
												"text": "`close`"
											},
											{
												"kind": "text",
												"text": " option to specify an array of event names that will end the iteration:\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { on, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ee = new EventEmitter();\n\n// Emit later on\nprocess.nextTick(() => {\n  ee.emit('foo', 'bar');\n  ee.emit('foo', 42);\n  ee.emit('close');\n});\n\nfor await (const event of on(ee, 'foo', { close: ['close'] })) {\n  console.log(event); // prints ['bar'] [42]\n}\n// the loop will exit after 'close' is emitted\nconsole.log('done'); // prints 'done'\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v13.6.0, v12.16.0"
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An "
													},
													{
														"kind": "code",
														"text": "`AsyncIterator`"
													},
													{
														"kind": "text",
														"text": " that iterates "
													},
													{
														"kind": "code",
														"text": "`eventName`"
													},
													{
														"kind": "text",
														"text": " events emitted by the "
													},
													{
														"kind": "code",
														"text": "`emitter`"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 308,
											"character": 15,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L308"
										}
									],
									"parameters": [
										{
											"id": 38,
											"name": "emitter",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "@types/node",
													"packagePath": "web-globals/events.d.ts",
													"qualifiedName": "__global.EventTarget"
												},
												"name": "EventTarget",
												"package": "@types/node",
												"qualifiedName": "__global.EventTarget"
											}
										},
										{
											"id": 39,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "@types/node",
													"packagePath": "events.d.ts",
													"qualifiedName": "StaticEventEmitterIteratorOptions"
												},
												"name": "StaticEventEmitterIteratorOptions",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@types/node",
											"packagePath": "compatibility/iterators.d.ts",
											"qualifiedName": "NodeJS.AsyncIterator"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										],
										"name": "AsyncIterator",
										"package": "@types/node",
										"qualifiedName": "NodeJS.AsyncIterator"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.on"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.on"
							}
						},
						{
							"id": 23,
							"name": "once",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isStatic": true,
								"isExternal": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 217,
									"character": 15,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L217"
								},
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 222,
									"character": 15,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L222"
								}
							],
							"signatures": [
								{
									"id": 24,
									"name": "once",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Creates a "
											},
											{
												"kind": "code",
												"text": "`Promise`"
											},
											{
												"kind": "text",
												"text": " that is fulfilled when the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": " emits the given\nevent or that is rejected if the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": " emits "
											},
											{
												"kind": "code",
												"text": "`'error'`"
											},
											{
												"kind": "text",
												"text": " while waiting.\nThe "
											},
											{
												"kind": "code",
												"text": "`Promise`"
											},
											{
												"kind": "text",
												"text": " will resolve with an array of all the arguments emitted to the\ngiven event.\n\nThis method is intentionally generic and works with the web platform [EventTarget](https://dom.spec.whatwg.org/#interface-eventtarget) interface, which has no special"
											},
											{
												"kind": "code",
												"text": "`'error'`"
											},
											{
												"kind": "text",
												"text": " event\nsemantics and does not listen to the "
											},
											{
												"kind": "code",
												"text": "`'error'`"
											},
											{
												"kind": "text",
												"text": " event.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { once, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ee = new EventEmitter();\n\nprocess.nextTick(() => {\n  ee.emit('myevent', 42);\n});\n\nconst [value] = await once(ee, 'myevent');\nconsole.log(value);\n\nconst err = new Error('kaboom');\nprocess.nextTick(() => {\n  ee.emit('error', err);\n});\n\ntry {\n  await once(ee, 'myevent');\n} catch (err) {\n  console.error('error happened', err);\n}\n```"
											},
											{
												"kind": "text",
												"text": "\n\nThe special handling of the "
											},
											{
												"kind": "code",
												"text": "`'error'`"
											},
											{
												"kind": "text",
												"text": " event is only used when "
											},
											{
												"kind": "code",
												"text": "`events.once()`"
											},
											{
												"kind": "text",
												"text": " is used to wait for another event. If "
											},
											{
												"kind": "code",
												"text": "`events.once()`"
											},
											{
												"kind": "text",
												"text": " is used to wait for the\n'"
											},
											{
												"kind": "code",
												"text": "`error'`"
											},
											{
												"kind": "text",
												"text": " event itself, then it is treated as any other kind of event without\nspecial handling:\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { EventEmitter, once } from 'node:events';\n\nconst ee = new EventEmitter();\n\nonce(ee, 'error')\n  .then(([err]) => console.log('ok', err.message))\n  .catch((err) => console.error('error', err.message));\n\nee.emit('error', new Error('boom'));\n\n// Prints: ok boom\n```"
											},
											{
												"kind": "text",
												"text": "\n\nAn "
											},
											{
												"kind": "code",
												"text": "`AbortSignal`"
											},
											{
												"kind": "text",
												"text": " can be used to cancel waiting for the event:\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { EventEmitter, once } from 'node:events';\n\nconst ee = new EventEmitter();\nconst ac = new AbortController();\n\nasync function foo(emitter, event, signal) {\n  try {\n    await once(emitter, event, { signal });\n    console.log('event emitted!');\n  } catch (error) {\n    if (error.name === 'AbortError') {\n      console.error('Waiting for the event was canceled!');\n    } else {\n      console.error('There was an error', error.message);\n    }\n  }\n}\n\nfoo(ee, 'foo', ac.signal);\nac.abort(); // Abort waiting for the event\nee.emit('foo'); // Prints: Waiting for the event was canceled!\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v11.13.0, v10.16.0"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 217,
											"character": 15,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L217"
										}
									],
									"parameters": [
										{
											"id": 25,
											"name": "emitter",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "@types/node",
													"packagePath": "events.d.ts",
													"qualifiedName": "__global.NodeJS.EventEmitter"
												},
												"name": "EventEmitter",
												"package": "@types/node",
												"qualifiedName": "__global.NodeJS.EventEmitter"
											}
										},
										{
											"id": 26,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 27,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "@types/node",
													"packagePath": "events.d.ts",
													"qualifiedName": "StaticEventEmitterOptions"
												},
												"name": "StaticEventEmitterOptions",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.once"
									}
								},
								{
									"id": 28,
									"name": "once",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Creates a "
											},
											{
												"kind": "code",
												"text": "`Promise`"
											},
											{
												"kind": "text",
												"text": " that is fulfilled when the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": " emits the given\nevent or that is rejected if the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": " emits "
											},
											{
												"kind": "code",
												"text": "`'error'`"
											},
											{
												"kind": "text",
												"text": " while waiting.\nThe "
											},
											{
												"kind": "code",
												"text": "`Promise`"
											},
											{
												"kind": "text",
												"text": " will resolve with an array of all the arguments emitted to the\ngiven event.\n\nThis method is intentionally generic and works with the web platform [EventTarget](https://dom.spec.whatwg.org/#interface-eventtarget) interface, which has no special"
											},
											{
												"kind": "code",
												"text": "`'error'`"
											},
											{
												"kind": "text",
												"text": " event\nsemantics and does not listen to the "
											},
											{
												"kind": "code",
												"text": "`'error'`"
											},
											{
												"kind": "text",
												"text": " event.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { once, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ee = new EventEmitter();\n\nprocess.nextTick(() => {\n  ee.emit('myevent', 42);\n});\n\nconst [value] = await once(ee, 'myevent');\nconsole.log(value);\n\nconst err = new Error('kaboom');\nprocess.nextTick(() => {\n  ee.emit('error', err);\n});\n\ntry {\n  await once(ee, 'myevent');\n} catch (err) {\n  console.error('error happened', err);\n}\n```"
											},
											{
												"kind": "text",
												"text": "\n\nThe special handling of the "
											},
											{
												"kind": "code",
												"text": "`'error'`"
											},
											{
												"kind": "text",
												"text": " event is only used when "
											},
											{
												"kind": "code",
												"text": "`events.once()`"
											},
											{
												"kind": "text",
												"text": " is used to wait for another event. If "
											},
											{
												"kind": "code",
												"text": "`events.once()`"
											},
											{
												"kind": "text",
												"text": " is used to wait for the\n'"
											},
											{
												"kind": "code",
												"text": "`error'`"
											},
											{
												"kind": "text",
												"text": " event itself, then it is treated as any other kind of event without\nspecial handling:\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { EventEmitter, once } from 'node:events';\n\nconst ee = new EventEmitter();\n\nonce(ee, 'error')\n  .then(([err]) => console.log('ok', err.message))\n  .catch((err) => console.error('error', err.message));\n\nee.emit('error', new Error('boom'));\n\n// Prints: ok boom\n```"
											},
											{
												"kind": "text",
												"text": "\n\nAn "
											},
											{
												"kind": "code",
												"text": "`AbortSignal`"
											},
											{
												"kind": "text",
												"text": " can be used to cancel waiting for the event:\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { EventEmitter, once } from 'node:events';\n\nconst ee = new EventEmitter();\nconst ac = new AbortController();\n\nasync function foo(emitter, event, signal) {\n  try {\n    await once(emitter, event, { signal });\n    console.log('event emitted!');\n  } catch (error) {\n    if (error.name === 'AbortError') {\n      console.error('Waiting for the event was canceled!');\n    } else {\n      console.error('There was an error', error.message);\n    }\n  }\n}\n\nfoo(ee, 'foo', ac.signal);\nac.abort(); // Abort waiting for the event\nee.emit('foo'); // Prints: Waiting for the event was canceled!\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v11.13.0, v10.16.0"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 222,
											"character": 15,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L222"
										}
									],
									"parameters": [
										{
											"id": 29,
											"name": "emitter",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "@types/node",
													"packagePath": "web-globals/events.d.ts",
													"qualifiedName": "__global.EventTarget"
												},
												"name": "EventTarget",
												"package": "@types/node",
												"qualifiedName": "__global.EventTarget"
											}
										},
										{
											"id": 30,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 31,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "@types/node",
													"packagePath": "events.d.ts",
													"qualifiedName": "StaticEventEmitterOptions"
												},
												"name": "StaticEventEmitterOptions",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.once"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.once"
							}
						},
						{
							"id": 52,
							"name": "setMaxListeners",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isStatic": true,
								"isExternal": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 402,
									"character": 15,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L402"
								}
							],
							"signatures": [
								{
									"id": 53,
									"name": "setMaxListeners",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "code",
												"text": "```js\nimport { setMaxListeners, EventEmitter } from 'node:events';\n\nconst target = new EventTarget();\nconst emitter = new EventEmitter();\n\nsetMaxListeners(5, target, emitter);\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v15.4.0"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 402,
											"character": 15,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L402"
										}
									],
									"parameters": [
										{
											"id": 54,
											"name": "n",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A non-negative number. The maximum number of listeners per "
													},
													{
														"kind": "code",
														"text": "`EventTarget`"
													},
													{
														"kind": "text",
														"text": " event."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 55,
											"name": "eventTargets",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true,
												"isRest": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Zero or more {EventTarget} or {EventEmitter} instances. If none are specified, "
													},
													{
														"kind": "code",
														"text": "`n`"
													},
													{
														"kind": "text",
														"text": " is set as the default max for all newly created {EventTarget} and {EventEmitter}\nobjects."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": {
																"packageName": "@types/node",
																"packagePath": "events.d.ts",
																"qualifiedName": "__global.NodeJS.EventEmitter"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": {
																		"packageName": "@types/node",
																		"packagePath": "events.d.ts",
																		"qualifiedName": "DefaultEventMap"
																	},
																	"name": "DefaultEventMap",
																	"package": "@types/node"
																}
															],
															"name": "EventEmitter",
															"package": "@types/node",
															"qualifiedName": "__global.NodeJS.EventEmitter"
														},
														{
															"type": "reference",
															"target": {
																"packageName": "@types/node",
																"packagePath": "web-globals/events.d.ts",
																"qualifiedName": "__global.EventTarget"
															},
															"name": "EventTarget",
															"package": "@types/node",
															"qualifiedName": "__global.EventTarget"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.setMaxListeners"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.setMaxListeners"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								67
							]
						},
						{
							"title": "Properties",
							"children": [
								65,
								64,
								66,
								63
							]
						},
						{
							"title": "Methods",
							"children": [
								192,
								198,
								137,
								254,
								280,
								139,
								175,
								244,
								125,
								190,
								127,
								181,
								105,
								188,
								259,
								246,
								230,
								206,
								214,
								168,
								264,
								272,
								250,
								131,
								238,
								222,
								133,
								122,
								241,
								162,
								56,
								45,
								49,
								41,
								32,
								23,
								52
							]
						}
					],
					"sources": [
						{
							"fileName": "src/adapters/HardwareInterface.ts",
							"line": 38,
							"character": 13,
							"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L38"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"packageName": "@types/node",
								"packagePath": "events.d.ts",
								"qualifiedName": "EventEmitter"
							},
							"name": "EventEmitter",
							"package": "@types/node"
						}
					]
				},
				{
					"id": 13,
					"name": "HardwareCommand",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 15,
							"name": "args",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/adapters/HardwareInterface.ts",
									"line": 22,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L22"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 14,
							"name": "command",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/adapters/HardwareInterface.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L21"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 16,
							"name": "expectResponse",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/adapters/HardwareInterface.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L23"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15,
								14,
								16
							]
						}
					],
					"sources": [
						{
							"fileName": "src/adapters/HardwareInterface.ts",
							"line": 20,
							"character": 17,
							"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L20"
						}
					]
				},
				{
					"id": 17,
					"name": "HardwareResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 19,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/adapters/HardwareInterface.ts",
									"line": 28,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L28"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 20,
							"name": "error",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/adapters/HardwareInterface.ts",
									"line": 29,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L29"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 18,
							"name": "success",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/adapters/HardwareInterface.ts",
									"line": 27,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L27"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 21,
							"name": "timestamp",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/adapters/HardwareInterface.ts",
									"line": 30,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L30"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19,
								20,
								18,
								21
							]
						}
					],
					"sources": [
						{
							"fileName": "src/adapters/HardwareInterface.ts",
							"line": 26,
							"character": 17,
							"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L26"
						}
					]
				},
				{
					"id": 2,
					"name": "PinState",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 5,
							"name": "direction",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/adapters/HardwareInterface.ts",
									"line": 10,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L10"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "IN"
									},
									{
										"type": "literal",
										"value": "OUT"
									},
									{
										"type": "literal",
										"value": "ANALOG"
									}
								]
							}
						},
						{
							"id": 11,
							"name": "enabled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/adapters/HardwareInterface.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 8,
							"name": "frequency",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/adapters/HardwareInterface.ts",
									"line": 13,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L13"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 9,
							"name": "frequencyDisplay",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/adapters/HardwareInterface.ts",
									"line": 14,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L14"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 12,
							"name": "isActive",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/adapters/HardwareInterface.ts",
									"line": 17,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L17"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 10,
							"name": "operatingFrequency",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/adapters/HardwareInterface.ts",
									"line": 15,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L15"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3,
							"name": "pin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/adapters/HardwareInterface.ts",
									"line": 8,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L8"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4,
							"name": "signal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/adapters/HardwareInterface.ts",
									"line": 9,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L9"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 6,
							"name": "state",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/adapters/HardwareInterface.ts",
									"line": 11,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L11"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 7,
							"name": "timestamp",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/adapters/HardwareInterface.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L12"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								5,
								11,
								8,
								9,
								12,
								10,
								3,
								4,
								6,
								7
							]
						}
					],
					"sources": [
						{
							"fileName": "src/adapters/HardwareInterface.ts",
							"line": 7,
							"character": 17,
							"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L7"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"children": [
						22
					]
				},
				{
					"title": "Interfaces",
					"children": [
						13,
						17,
						2
					]
				}
			],
			"sources": [
				{
					"fileName": "src/adapters/HardwareInterface.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/adapters/HardwareInterface.ts#L1"
				}
			]
		},
		{
			"id": 282,
			"name": "config/ConfigService",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 364,
					"name": "ConfigService",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 365,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "src/config/ConfigService.ts",
									"line": 105,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L105"
								}
							],
							"signatures": [
								{
									"id": 366,
									"name": "ConfigService",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"sources": [
										{
											"fileName": "src/config/ConfigService.ts",
											"line": 105,
											"character": 2,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L105"
										}
									],
									"parameters": [
										{
											"id": 367,
											"name": "configPath",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 364,
										"name": "ConfigService",
										"package": "multi-sonicator-io-backend"
									}
								}
							]
						},
						{
							"id": 372,
							"name": "getConfig",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "src/config/ConfigService.ts",
									"line": 146,
									"character": 9,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L146"
								}
							],
							"signatures": [
								{
									"id": 373,
									"name": "getConfig",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get current configuration"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/config/ConfigService.ts",
											"line": 146,
											"character": 9,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L146"
										}
									],
									"type": {
										"type": "reference",
										"target": 309,
										"name": "HardwareConfig",
										"package": "multi-sonicator-io-backend"
									}
								}
							]
						},
						{
							"id": 425,
							"name": "getConfigSummary",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "src/config/ConfigService.ts",
									"line": 329,
									"character": 9,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L329"
								}
							],
							"signatures": [
								{
									"id": 426,
									"name": "getConfigSummary",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get configuration summary for status display"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/config/ConfigService.ts",
											"line": 329,
											"character": 9,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L329"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 427,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 437,
													"name": "capabilities",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/config/ConfigService.ts",
															"line": 344,
															"character": 6,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L344"
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 438,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 441,
																	"name": "names",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/config/ConfigService.ts",
																			"line": 347,
																			"character": 8,
																			"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L347"
																		}
																	],
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 440,
																	"name": "supported",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/config/ConfigService.ts",
																			"line": 346,
																			"character": 8,
																			"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L346"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	},
																	"defaultValue": "supportedCapabilities.length"
																},
																{
																	"id": 439,
																	"name": "total",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/config/ConfigService.ts",
																			"line": 345,
																			"character": 8,
																			"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L345"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	},
																	"defaultValue": "config.test_capabilities.length"
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		441,
																		440,
																		439
																	]
																}
															],
															"sources": [
																{
																	"fileName": "src/config/ConfigService.ts",
																	"line": 344,
																	"character": 20,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L344"
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 430,
													"name": "dut",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/config/ConfigService.ts",
															"line": 337,
															"character": 6,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L337"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "config.dut.microcontroller.type"
												},
												{
													"id": 431,
													"name": "harness",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/config/ConfigService.ts",
															"line": 338,
															"character": 6,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L338"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "config.harness.type"
												},
												{
													"id": 443,
													"name": "limitations",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/config/ConfigService.ts",
															"line": 350,
															"character": 6,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L350"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "config.limitations.current_prototype"
												},
												{
													"id": 428,
													"name": "project",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/config/ConfigService.ts",
															"line": 335,
															"character": 6,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L335"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "config.project.name"
												},
												{
													"id": 442,
													"name": "simulation_mode",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/config/ConfigService.ts",
															"line": 349,
															"character": 6,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L349"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": "config.environment.simulation_mode"
												},
												{
													"id": 432,
													"name": "sonicators",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/config/ConfigService.ts",
															"line": 339,
															"character": 6,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L339"
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 433,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 436,
																	"name": "channels",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/config/ConfigService.ts",
																			"line": 342,
																			"character": 8,
																			"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L342"
																		}
																	],
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "number"
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 435,
																	"name": "connected",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/config/ConfigService.ts",
																			"line": 341,
																			"character": 8,
																			"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L341"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	},
																	"defaultValue": "connectedSonicators.length"
																},
																{
																	"id": 434,
																	"name": "total",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/config/ConfigService.ts",
																			"line": 340,
																			"character": 8,
																			"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L340"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	},
																	"defaultValue": "config.sonicators.count"
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		436,
																		435,
																		434
																	]
																}
															],
															"sources": [
																{
																	"fileName": "src/config/ConfigService.ts",
																	"line": 339,
																	"character": 18,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L339"
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 429,
													"name": "version",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/config/ConfigService.ts",
															"line": 336,
															"character": 6,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L336"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "config.project.version"
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														437,
														430,
														431,
														443,
														428,
														442,
														432,
														429
													]
												}
											],
											"sources": [
												{
													"fileName": "src/config/ConfigService.ts",
													"line": 334,
													"character": 11,
													"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L334"
												}
											]
										}
									}
								}
							]
						},
						{
							"id": 386,
							"name": "getConnectedSonicators",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "src/config/ConfigService.ts",
									"line": 187,
									"character": 9,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L187"
								}
							],
							"signatures": [
								{
									"id": 387,
									"name": "getConnectedSonicators",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get all connected sonicator channels"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/config/ConfigService.ts",
											"line": 187,
											"character": 9,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L187"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 295,
											"name": "SonicatorChannel",
											"package": "multi-sonicator-io-backend"
										}
									}
								}
							]
						},
						{
							"id": 374,
							"name": "getDUTPinBySignal",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "src/config/ConfigService.ts",
									"line": 156,
									"character": 9,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L156"
								}
							],
							"signatures": [
								{
									"id": 375,
									"name": "getDUTPinBySignal",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get DUT pin configuration by signal name"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/config/ConfigService.ts",
											"line": 156,
											"character": 9,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L156"
										}
									],
									"parameters": [
										{
											"id": 376,
											"name": "signal",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 377,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 379,
															"name": "pin",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/config/ConfigService.ts",
																	"line": 156,
																	"character": 63,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L156"
																}
															],
															"type": {
																"type": "reference",
																"target": 283,
																"name": "HardwarePin",
																"package": "multi-sonicator-io-backend"
															}
														},
														{
															"id": 378,
															"name": "pinName",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/config/ConfigService.ts",
																	"line": 156,
																	"character": 46,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L156"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																379,
																378
															]
														}
													],
													"sources": [
														{
															"fileName": "src/config/ConfigService.ts",
															"line": 156,
															"character": 44,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L156"
														}
													]
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 380,
							"name": "getHarnessConnection",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "src/config/ConfigService.ts",
									"line": 171,
									"character": 9,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L171"
								}
							],
							"signatures": [
								{
									"id": 381,
									"name": "getHarnessConnection",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get harness connection by Arduino pin"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/config/ConfigService.ts",
											"line": 171,
											"character": 9,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L171"
										}
									],
									"parameters": [
										{
											"id": 382,
											"name": "arduinoPin",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 290,
												"name": "HarnessConnection",
												"package": "multi-sonicator-io-backend"
											}
										]
									}
								}
							]
						},
						{
							"id": 393,
							"name": "getModbusConfig",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "src/config/ConfigService.ts",
									"line": 212,
									"character": 9,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L212"
								}
							],
							"signatures": [
								{
									"id": 394,
									"name": "getModbusConfig",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get MODBUS configuration"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/config/ConfigService.ts",
											"line": 212,
											"character": 9,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L212"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 395,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 397,
													"name": "baud_rate",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/config/ConfigService.ts",
															"line": 74,
															"character": 6,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L74"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 398,
													"name": "data_bits",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/config/ConfigService.ts",
															"line": 75,
															"character": 6,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L75"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 400,
													"name": "parity",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/config/ConfigService.ts",
															"line": 77,
															"character": 6,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L77"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 396,
													"name": "slave_id",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/config/ConfigService.ts",
															"line": 73,
															"character": 6,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L73"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 399,
													"name": "stop_bits",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/config/ConfigService.ts",
															"line": 76,
															"character": 6,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L76"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 401,
													"name": "timeout_ms",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/config/ConfigService.ts",
															"line": 78,
															"character": 6,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L78"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														397,
														398,
														400,
														396,
														399,
														401
													]
												}
											],
											"sources": [
												{
													"fileName": "src/config/ConfigService.ts",
													"line": 72,
													"character": 12,
													"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L72"
												}
											]
										}
									}
								}
							]
						},
						{
							"id": 418,
							"name": "getPinMapping",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "src/config/ConfigService.ts",
									"line": 257,
									"character": 9,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L257"
								}
							],
							"signatures": [
								{
									"id": 419,
									"name": "getPinMapping",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get pin mapping for web UI\nConverts configuration to format expected by existing types"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/config/ConfigService.ts",
											"line": 257,
											"character": 9,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L257"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 402,
							"name": "getSerialConfig",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "src/config/ConfigService.ts",
									"line": 220,
									"character": 9,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L220"
								}
							],
							"signatures": [
								{
									"id": 403,
									"name": "getSerialConfig",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get serial communication configuration"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/config/ConfigService.ts",
											"line": 220,
											"character": 9,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L220"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 404,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 406,
													"name": "baud_rate",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/config/ConfigService.ts",
															"line": 82,
															"character": 6,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L82"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 405,
													"name": "port",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/config/ConfigService.ts",
															"line": 81,
															"character": 6,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L81"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 407,
													"name": "timeout_ms",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/config/ConfigService.ts",
															"line": 83,
															"character": 6,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L83"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														406,
														405,
														407
													]
												}
											],
											"sources": [
												{
													"fileName": "src/config/ConfigService.ts",
													"line": 80,
													"character": 12,
													"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L80"
												}
											]
										}
									}
								}
							]
						},
						{
							"id": 383,
							"name": "getSonicatorChannel",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "src/config/ConfigService.ts",
									"line": 179,
									"character": 9,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L179"
								}
							],
							"signatures": [
								{
									"id": 384,
									"name": "getSonicatorChannel",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get sonicator channel configuration"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/config/ConfigService.ts",
											"line": 179,
											"character": 9,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L179"
										}
									],
									"parameters": [
										{
											"id": 385,
											"name": "channelId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 295,
												"name": "SonicatorChannel",
												"package": "multi-sonicator-io-backend"
											}
										]
									}
								}
							]
						},
						{
							"id": 388,
							"name": "getSupportedCapabilities",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "src/config/ConfigService.ts",
									"line": 195,
									"character": 9,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L195"
								}
							],
							"signatures": [
								{
									"id": 389,
									"name": "getSupportedCapabilities",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get supported test capabilities"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/config/ConfigService.ts",
											"line": 195,
											"character": 9,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L195"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 303,
											"name": "TestCapability",
											"package": "multi-sonicator-io-backend"
										}
									}
								}
							]
						},
						{
							"id": 413,
							"name": "getTimeouts",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "src/config/ConfigService.ts",
									"line": 245,
									"character": 9,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L245"
								}
							],
							"signatures": [
								{
									"id": 414,
									"name": "getTimeouts",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get hardware timeout settings"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/config/ConfigService.ts",
											"line": 245,
											"character": 9,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L245"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 415,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 417,
													"name": "command",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/config/ConfigService.ts",
															"line": 249,
															"character": 6,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L249"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													},
													"defaultValue": "config.environment.command_timeout_ms"
												},
												{
													"id": 416,
													"name": "hardware",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/config/ConfigService.ts",
															"line": 248,
															"character": 6,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L248"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													},
													"defaultValue": "config.environment.hardware_timeout_ms"
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														417,
														416
													]
												}
											],
											"sources": [
												{
													"fileName": "src/config/ConfigService.ts",
													"line": 247,
													"character": 11,
													"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L247"
												}
											]
										}
									}
								}
							]
						},
						{
							"id": 390,
							"name": "isCapabilitySupported",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "src/config/ConfigService.ts",
									"line": 203,
									"character": 9,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L203"
								}
							],
							"signatures": [
								{
									"id": 391,
									"name": "isCapabilitySupported",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Check if a test capability is supported"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/config/ConfigService.ts",
											"line": 203,
											"character": 9,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L203"
										}
									],
									"parameters": [
										{
											"id": 392,
											"name": "capabilityName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 408,
							"name": "isSimulationMode",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "src/config/ConfigService.ts",
									"line": 228,
									"character": 9,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L228"
								}
							],
							"signatures": [
								{
									"id": 409,
									"name": "isSimulationMode",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Check if simulation mode is enabled"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/config/ConfigService.ts",
											"line": 228,
											"character": 9,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L228"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 370,
							"name": "loadConfig",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "src/config/ConfigService.ts",
									"line": 122,
									"character": 9,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L122"
								}
							],
							"signatures": [
								{
									"id": 371,
									"name": "loadConfig",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Load hardware configuration from YAML file"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/config/ConfigService.ts",
											"line": 122,
											"character": 9,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L122"
										}
									],
									"type": {
										"type": "reference",
										"target": 309,
										"name": "HardwareConfig",
										"package": "multi-sonicator-io-backend"
									}
								}
							]
						},
						{
							"id": 410,
							"name": "setSimulationMode",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "src/config/ConfigService.ts",
									"line": 236,
									"character": 9,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L236"
								}
							],
							"signatures": [
								{
									"id": 411,
									"name": "setSimulationMode",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Update simulation mode"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/config/ConfigService.ts",
											"line": 236,
											"character": 9,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L236"
										}
									],
									"parameters": [
										{
											"id": 412,
											"name": "enabled",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 420,
							"name": "validateConfig",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "src/config/ConfigService.ts",
									"line": 279,
									"character": 9,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L279"
								}
							],
							"signatures": [
								{
									"id": 421,
									"name": "validateConfig",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Validate configuration integrity"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/config/ConfigService.ts",
											"line": 279,
											"character": 9,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L279"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 422,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 424,
													"name": "errors",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/config/ConfigService.ts",
															"line": 279,
															"character": 45,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L279"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												},
												{
													"id": 423,
													"name": "valid",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/config/ConfigService.ts",
															"line": 279,
															"character": 29,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L279"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														424,
														423
													]
												}
											],
											"sources": [
												{
													"fileName": "src/config/ConfigService.ts",
													"line": 279,
													"character": 27,
													"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L279"
												}
											]
										}
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								365
							]
						},
						{
							"title": "Methods",
							"children": [
								372,
								425,
								386,
								374,
								380,
								393,
								418,
								402,
								383,
								388,
								413,
								390,
								408,
								370,
								410,
								420
							]
						}
					],
					"sources": [
						{
							"fileName": "src/config/ConfigService.ts",
							"line": 101,
							"character": 13,
							"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L101"
						}
					]
				},
				{
					"id": 309,
					"name": "HardwareConfig",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 336,
							"name": "communication",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/config/ConfigService.ts",
									"line": 71,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L71"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 337,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 338,
											"name": "modbus",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/config/ConfigService.ts",
													"line": 72,
													"character": 4,
													"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L72"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 339,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 341,
															"name": "baud_rate",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/config/ConfigService.ts",
																	"line": 74,
																	"character": 6,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L74"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 342,
															"name": "data_bits",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/config/ConfigService.ts",
																	"line": 75,
																	"character": 6,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L75"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 344,
															"name": "parity",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/config/ConfigService.ts",
																	"line": 77,
																	"character": 6,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L77"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 340,
															"name": "slave_id",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/config/ConfigService.ts",
																	"line": 73,
																	"character": 6,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L73"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 343,
															"name": "stop_bits",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/config/ConfigService.ts",
																	"line": 76,
																	"character": 6,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L76"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 345,
															"name": "timeout_ms",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/config/ConfigService.ts",
																	"line": 78,
																	"character": 6,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L78"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																341,
																342,
																344,
																340,
																343,
																345
															]
														}
													],
													"sources": [
														{
															"fileName": "src/config/ConfigService.ts",
															"line": 72,
															"character": 12,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L72"
														}
													]
												}
											}
										},
										{
											"id": 346,
											"name": "serial",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/config/ConfigService.ts",
													"line": 80,
													"character": 4,
													"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L80"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 347,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 349,
															"name": "baud_rate",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/config/ConfigService.ts",
																	"line": 82,
																	"character": 6,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L82"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 348,
															"name": "port",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/config/ConfigService.ts",
																	"line": 81,
																	"character": 6,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L81"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 350,
															"name": "timeout_ms",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/config/ConfigService.ts",
																	"line": 83,
																	"character": 6,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L83"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																349,
																348,
																350
															]
														}
													],
													"sources": [
														{
															"fileName": "src/config/ConfigService.ts",
															"line": 80,
															"character": 12,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L80"
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												338,
												346
											]
										}
									],
									"sources": [
										{
											"fileName": "src/config/ConfigService.ts",
											"line": 71,
											"character": 17,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L71"
										}
									]
								}
							}
						},
						{
							"id": 315,
							"name": "dut",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/config/ConfigService.ts",
									"line": 50,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L50"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 316,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 317,
											"name": "microcontroller",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/config/ConfigService.ts",
													"line": 51,
													"character": 4,
													"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L51"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 318,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 321,
															"name": "clock_frequency",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/config/ConfigService.ts",
																	"line": 54,
																	"character": 6,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L54"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 323,
															"name": "manufacturer",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/config/ConfigService.ts",
																	"line": 56,
																	"character": 6,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L56"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 320,
															"name": "package",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/config/ConfigService.ts",
																	"line": 53,
																	"character": 6,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L53"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 319,
															"name": "type",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/config/ConfigService.ts",
																	"line": 52,
																	"character": 6,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L52"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 322,
															"name": "voltage",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/config/ConfigService.ts",
																	"line": 55,
																	"character": 6,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L55"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																321,
																323,
																320,
																319,
																322
															]
														}
													],
													"sources": [
														{
															"fileName": "src/config/ConfigService.ts",
															"line": 51,
															"character": 21,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L51"
														}
													]
												}
											}
										},
										{
											"id": 324,
											"name": "pins",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/config/ConfigService.ts",
													"line": 58,
													"character": 4,
													"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L58"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"target": 283,
														"name": "HardwarePin",
														"package": "multi-sonicator-io-backend"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												317,
												324
											]
										}
									],
									"sources": [
										{
											"fileName": "src/config/ConfigService.ts",
											"line": 50,
											"character": 7,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L50"
										}
									]
								}
							}
						},
						{
							"id": 358,
							"name": "environment",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/config/ConfigService.ts",
									"line": 93,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L93"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 359,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 362,
											"name": "command_timeout_ms",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/config/ConfigService.ts",
													"line": 96,
													"character": 4,
													"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L96"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 361,
											"name": "hardware_timeout_ms",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/config/ConfigService.ts",
													"line": 95,
													"character": 4,
													"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L95"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 363,
											"name": "log_level",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/config/ConfigService.ts",
													"line": 97,
													"character": 4,
													"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L97"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 360,
											"name": "simulation_mode",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/config/ConfigService.ts",
													"line": 94,
													"character": 4,
													"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L94"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												362,
												361,
												363,
												360
											]
										}
									],
									"sources": [
										{
											"fileName": "src/config/ConfigService.ts",
											"line": 93,
											"character": 15,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L93"
										}
									]
								}
							}
						},
						{
							"id": 325,
							"name": "harness",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/config/ConfigService.ts",
									"line": 60,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L60"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 326,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 329,
											"name": "clock_frequency",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/config/ConfigService.ts",
													"line": 63,
													"character": 4,
													"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L63"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 331,
											"name": "connections",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/config/ConfigService.ts",
													"line": 65,
													"character": 4,
													"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L65"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"target": 290,
														"name": "HarnessConnection",
														"package": "multi-sonicator-io-backend"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										},
										{
											"id": 328,
											"name": "microcontroller",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/config/ConfigService.ts",
													"line": 62,
													"character": 4,
													"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L62"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 327,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/config/ConfigService.ts",
													"line": 61,
													"character": 4,
													"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L61"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 330,
											"name": "voltage",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/config/ConfigService.ts",
													"line": 64,
													"character": 4,
													"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L64"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												329,
												331,
												328,
												327,
												330
											]
										}
									],
									"sources": [
										{
											"fileName": "src/config/ConfigService.ts",
											"line": 60,
											"character": 11,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L60"
										}
									]
								}
							}
						},
						{
							"id": 352,
							"name": "limitations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/config/ConfigService.ts",
									"line": 87,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L87"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 353,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 354,
											"name": "current_prototype",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/config/ConfigService.ts",
													"line": 88,
													"character": 4,
													"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L88"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 357,
											"name": "expansion_notes",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/config/ConfigService.ts",
													"line": 91,
													"character": 4,
													"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L91"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 355,
											"name": "supported_channels",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/config/ConfigService.ts",
													"line": 89,
													"character": 4,
													"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L89"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										},
										{
											"id": 356,
											"name": "unsupported_channels",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/config/ConfigService.ts",
													"line": 90,
													"character": 4,
													"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L90"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												354,
												357,
												355,
												356
											]
										}
									],
									"sources": [
										{
											"fileName": "src/config/ConfigService.ts",
											"line": 87,
											"character": 15,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L87"
										}
									]
								}
							}
						},
						{
							"id": 310,
							"name": "project",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/config/ConfigService.ts",
									"line": 45,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L45"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 311,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 313,
											"name": "description",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/config/ConfigService.ts",
													"line": 47,
													"character": 4,
													"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L47"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 312,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/config/ConfigService.ts",
													"line": 46,
													"character": 4,
													"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L46"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 314,
											"name": "version",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/config/ConfigService.ts",
													"line": 48,
													"character": 4,
													"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L48"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												313,
												312,
												314
											]
										}
									],
									"sources": [
										{
											"fileName": "src/config/ConfigService.ts",
											"line": 45,
											"character": 11,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L45"
										}
									]
								}
							}
						},
						{
							"id": 332,
							"name": "sonicators",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/config/ConfigService.ts",
									"line": 67,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L67"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 333,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 335,
											"name": "channels",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/config/ConfigService.ts",
													"line": 69,
													"character": 4,
													"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L69"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 295,
													"name": "SonicatorChannel",
													"package": "multi-sonicator-io-backend"
												}
											}
										},
										{
											"id": 334,
											"name": "count",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "src/config/ConfigService.ts",
													"line": 68,
													"character": 4,
													"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L68"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												335,
												334
											]
										}
									],
									"sources": [
										{
											"fileName": "src/config/ConfigService.ts",
											"line": 67,
											"character": 14,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L67"
										}
									]
								}
							}
						},
						{
							"id": 351,
							"name": "test_capabilities",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/config/ConfigService.ts",
									"line": 86,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L86"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 303,
									"name": "TestCapability",
									"package": "multi-sonicator-io-backend"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								336,
								315,
								358,
								325,
								352,
								310,
								332,
								351
							]
						}
					],
					"sources": [
						{
							"fileName": "src/config/ConfigService.ts",
							"line": 44,
							"character": 17,
							"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L44"
						}
					]
				},
				{
					"id": 283,
					"name": "HardwarePin",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 286,
							"name": "direction",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/config/ConfigService.ts",
									"line": 13,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L13"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "IN"
									},
									{
										"type": "literal",
										"value": "OUT"
									},
									{
										"type": "literal",
										"value": "ANALOG"
									}
								]
							}
						},
						{
							"id": 288,
							"name": "function",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/config/ConfigService.ts",
									"line": 15,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L15"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 284,
							"name": "pin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/config/ConfigService.ts",
									"line": 11,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L11"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 289,
							"name": "scaling",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/config/ConfigService.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 285,
							"name": "signal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/config/ConfigService.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L12"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 287,
							"name": "sonicator",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/config/ConfigService.ts",
									"line": 14,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L14"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								286,
								288,
								284,
								289,
								285,
								287
							]
						}
					],
					"sources": [
						{
							"fileName": "src/config/ConfigService.ts",
							"line": 10,
							"character": 17,
							"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L10"
						}
					]
				},
				{
					"id": 290,
					"name": "HarnessConnection",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 293,
							"name": "direction",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/config/ConfigService.ts",
									"line": 22,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L22"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "harness_to_dut"
									},
									{
										"type": "literal",
										"value": "dut_to_harness"
									},
									{
										"type": "literal",
										"value": "bidirectional"
									}
								]
							}
						},
						{
							"id": 291,
							"name": "dut_pin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/config/ConfigService.ts",
									"line": 20,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L20"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 292,
							"name": "signal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/config/ConfigService.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L21"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 294,
							"name": "sonicator",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/config/ConfigService.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L23"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								293,
								291,
								292,
								294
							]
						}
					],
					"sources": [
						{
							"fileName": "src/config/ConfigService.ts",
							"line": 19,
							"character": 17,
							"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L19"
						}
					]
				},
				{
					"id": 295,
					"name": "SonicatorChannel",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 301,
							"name": "amplitude_range",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/config/ConfigService.ts",
									"line": 32,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L32"
								}
							],
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 298,
							"name": "db9_connector",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/config/ConfigService.ts",
									"line": 29,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L29"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 300,
							"name": "frequency_range",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/config/ConfigService.ts",
									"line": 31,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L31"
								}
							],
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 296,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/config/ConfigService.ts",
									"line": 27,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L27"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 297,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/config/ConfigService.ts",
									"line": 28,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L28"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 299,
							"name": "power_range",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/config/ConfigService.ts",
									"line": 30,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L30"
								}
							],
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 302,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/config/ConfigService.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L33"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "error"
									},
									{
										"type": "literal",
										"value": "connected"
									},
									{
										"type": "literal",
										"value": "not_connected"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								301,
								298,
								300,
								296,
								297,
								299,
								302
							]
						}
					],
					"sources": [
						{
							"fileName": "src/config/ConfigService.ts",
							"line": 26,
							"character": 17,
							"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L26"
						}
					]
				},
				{
					"id": 303,
					"name": "TestCapability",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 305,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/config/ConfigService.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L38"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 304,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/config/ConfigService.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L37"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 308,
							"name": "note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/config/ConfigService.ts",
									"line": 41,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L41"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 306,
							"name": "pins",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/config/ConfigService.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L39"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 307,
							"name": "supported",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/config/ConfigService.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L40"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								305,
								304,
								308,
								306,
								307
							]
						}
					],
					"sources": [
						{
							"fileName": "src/config/ConfigService.ts",
							"line": 36,
							"character": 17,
							"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L36"
						}
					]
				},
				{
					"id": 444,
					"name": "configService",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/config/ConfigService.ts",
							"line": 356,
							"character": 13,
							"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L356"
						}
					],
					"type": {
						"type": "reference",
						"target": 364,
						"name": "ConfigService",
						"package": "multi-sonicator-io-backend"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Classes",
					"children": [
						364
					]
				},
				{
					"title": "Interfaces",
					"children": [
						309,
						283,
						290,
						295,
						303
					]
				},
				{
					"title": "Variables",
					"children": [
						444
					]
				}
			],
			"sources": [
				{
					"fileName": "src/config/ConfigService.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/config/ConfigService.ts#L1"
				}
			]
		},
		{
			"id": 446,
			"name": "routes",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 447,
					"name": "setupRoutes",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "src/routes/index.ts",
							"line": 7,
							"character": 16,
							"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/routes/index.ts#L7"
						}
					],
					"signatures": [
						{
							"id": 448,
							"name": "setupRoutes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "src/routes/index.ts",
									"line": 7,
									"character": 16,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/routes/index.ts#L7"
								}
							],
							"parameters": [
								{
									"id": 449,
									"name": "app",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@types/express",
											"packagePath": "index.d.ts",
											"qualifiedName": "e.Express"
										},
										"name": "Express",
										"package": "@types/express",
										"qualifiedName": "e.Express"
									}
								},
								{
									"id": 450,
									"name": "hardwareInterface",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 22,
										"name": "HardwareInterface",
										"package": "multi-sonicator-io-backend"
									}
								},
								{
									"id": 451,
									"name": "testAutomationService",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 535,
										"name": "TestAutomationService",
										"package": "multi-sonicator-io-backend"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						447
					]
				}
			],
			"sources": [
				{
					"fileName": "src/routes/index.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/routes/index.ts#L1"
				}
			]
		},
		{
			"id": 445,
			"name": "routes/config",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 801,
					"name": "default",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/routes/config.ts",
							"line": 9,
							"character": 6,
							"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/routes/config.ts#L9"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@types/express-serve-static-core",
							"packagePath": "index.d.ts",
							"qualifiedName": "Router"
						},
						"name": "Router",
						"package": "@types/express-serve-static-core"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Variables",
					"children": [
						801
					]
				}
			],
			"sources": [
				{
					"fileName": "src/routes/config.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/routes/config.ts#L1"
				}
			]
		},
		{
			"id": 452,
			"name": "routes/tests",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 802,
					"name": "default",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/routes/tests.ts",
							"line": 9,
							"character": 6,
							"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/routes/tests.ts#L9"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "@types/express-serve-static-core",
							"packagePath": "index.d.ts",
							"qualifiedName": "Router"
						},
						"name": "Router",
						"package": "@types/express-serve-static-core"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Variables",
					"children": [
						802
					]
				}
			],
			"sources": [
				{
					"fileName": "src/routes/tests.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/routes/tests.ts#L1"
				}
			]
		},
		{
			"id": 453,
			"name": "server",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"sources": [
				{
					"fileName": "src/server.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/server.ts#L1"
				}
			]
		},
		{
			"id": 454,
			"name": "services/HardwareTestService",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 469,
					"name": "HardwareTestService",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 470,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"signatures": [
								{
									"id": 471,
									"name": "HardwareTestService",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 469,
										"name": "HardwareTestService",
										"package": "multi-sonicator-io-backend"
									}
								}
							]
						},
						{
							"id": 472,
							"name": "runConfigurationTests",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/HardwareTestService.ts",
									"line": 30,
									"character": 8,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/HardwareTestService.ts#L30"
								}
							],
							"signatures": [
								{
									"id": 473,
									"name": "runConfigurationTests",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Run hardware configuration validation tests"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/services/HardwareTestService.ts",
											"line": 30,
											"character": 8,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/HardwareTestService.ts#L30"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 461,
												"name": "TestSuite",
												"package": "multi-sonicator-io-backend"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 477,
							"name": "runModbusTests",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/HardwareTestService.ts",
									"line": 122,
									"character": 8,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/HardwareTestService.ts#L122"
								}
							],
							"signatures": [
								{
									"id": 478,
									"name": "runModbusTests",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Run MODBUS communication tests"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/services/HardwareTestService.ts",
											"line": 122,
											"character": 8,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/HardwareTestService.ts#L122"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 461,
												"name": "TestSuite",
												"package": "multi-sonicator-io-backend"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 474,
							"name": "runSonicatorTests",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/HardwareTestService.ts",
									"line": 69,
									"character": 8,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/HardwareTestService.ts#L69"
								}
							],
							"signatures": [
								{
									"id": 475,
									"name": "runSonicatorTests",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Run sonicator-specific tests"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/services/HardwareTestService.ts",
											"line": 69,
											"character": 8,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/HardwareTestService.ts#L69"
										}
									],
									"parameters": [
										{
											"id": 476,
											"name": "channelId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 461,
												"name": "TestSuite",
												"package": "multi-sonicator-io-backend"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								470
							]
						},
						{
							"title": "Methods",
							"children": [
								472,
								477,
								474
							]
						}
					],
					"sources": [
						{
							"fileName": "src/services/HardwareTestService.ts",
							"line": 26,
							"character": 13,
							"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/HardwareTestService.ts#L26"
						}
					]
				},
				{
					"id": 455,
					"name": "TestResult",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 460,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/services/HardwareTestService.ts",
									"line": 13,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/HardwareTestService.ts#L13"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 458,
							"name": "duration",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/HardwareTestService.ts",
									"line": 11,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/HardwareTestService.ts#L11"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 459,
							"name": "message",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/services/HardwareTestService.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/HardwareTestService.ts#L12"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 457,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/HardwareTestService.ts",
									"line": 10,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/HardwareTestService.ts#L10"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "fail"
									},
									{
										"type": "literal",
										"value": "pass"
									},
									{
										"type": "literal",
										"value": "skip"
									}
								]
							}
						},
						{
							"id": 456,
							"name": "testName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/HardwareTestService.ts",
									"line": 9,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/HardwareTestService.ts#L9"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								460,
								458,
								459,
								457,
								456
							]
						}
					],
					"sources": [
						{
							"fileName": "src/services/HardwareTestService.ts",
							"line": 8,
							"character": 17,
							"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/HardwareTestService.ts#L8"
						}
					]
				},
				{
					"id": 461,
					"name": "TestSuite",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 463,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/HardwareTestService.ts",
									"line": 18,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/HardwareTestService.ts#L18"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 465,
							"name": "duration",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/HardwareTestService.ts",
									"line": 20,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/HardwareTestService.ts#L20"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 467,
							"name": "failed",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/HardwareTestService.ts",
									"line": 22,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/HardwareTestService.ts#L22"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 462,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/HardwareTestService.ts",
									"line": 17,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/HardwareTestService.ts#L17"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 466,
							"name": "passed",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/HardwareTestService.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/HardwareTestService.ts#L21"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 468,
							"name": "skipped",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/HardwareTestService.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/HardwareTestService.ts#L23"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 464,
							"name": "tests",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/HardwareTestService.ts",
									"line": 19,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/HardwareTestService.ts#L19"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 455,
									"name": "TestResult",
									"package": "multi-sonicator-io-backend"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								463,
								465,
								467,
								462,
								466,
								468,
								464
							]
						}
					],
					"sources": [
						{
							"fileName": "src/services/HardwareTestService.ts",
							"line": 16,
							"character": 17,
							"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/HardwareTestService.ts#L16"
						}
					]
				},
				{
					"id": 505,
					"name": "hardwareTestService",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "src/services/HardwareTestService.ts",
							"line": 463,
							"character": 13,
							"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/HardwareTestService.ts#L463"
						}
					],
					"type": {
						"type": "reference",
						"target": 469,
						"name": "HardwareTestService",
						"package": "multi-sonicator-io-backend"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Classes",
					"children": [
						469
					]
				},
				{
					"title": "Interfaces",
					"children": [
						455,
						461
					]
				},
				{
					"title": "Variables",
					"children": [
						505
					]
				}
			],
			"sources": [
				{
					"fileName": "src/services/HardwareTestService.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/HardwareTestService.ts#L1"
				}
			]
		},
		{
			"id": 506,
			"name": "services/TestAutomationService",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 535,
					"name": "TestAutomationService",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 580,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/TestAutomationService.ts",
									"line": 48,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L48"
								}
							],
							"signatures": [
								{
									"id": 581,
									"name": "TestAutomationService",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"sources": [
										{
											"fileName": "src/services/TestAutomationService.ts",
											"line": 48,
											"character": 2,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L48"
										}
									],
									"type": {
										"type": "reference",
										"target": 535,
										"name": "TestAutomationService",
										"package": "multi-sonicator-io-backend"
									},
									"overwrites": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.constructor",
										"package": "@types/node"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.constructor",
								"package": "@types/node"
							}
						},
						{
							"id": 578,
							"name": "captureRejections",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isStatic": true,
								"isExternal": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Value: [boolean](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type)\n\nChange the default "
									},
									{
										"kind": "code",
										"text": "`captureRejections`"
									},
									{
										"kind": "text",
										"text": " option on all new "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " objects."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v13.4.0, v12.16.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 458,
									"character": 15,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L458"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.captureRejections"
							}
						},
						{
							"id": 577,
							"name": "captureRejectionSymbol",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isStatic": true,
								"isExternal": true,
								"isReadonly": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Value: "
									},
									{
										"kind": "code",
										"text": "`Symbol.for('nodejs.rejection')`"
									},
									{
										"kind": "text",
										"text": "\n\nSee how to write a custom "
									},
									{
										"kind": "code",
										"text": "`rejection handler`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v13.4.0, v12.16.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 451,
									"character": 24,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L451"
								}
							],
							"type": {
								"type": "query",
								"queryType": {
									"type": "reference",
									"target": 64,
									"name": "captureRejectionSymbol",
									"package": "@types/node",
									"qualifiedName": "EventEmitter.captureRejectionSymbol"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.captureRejectionSymbol"
							}
						},
						{
							"id": 579,
							"name": "defaultMaxListeners",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isStatic": true,
								"isExternal": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "By default, a maximum of "
									},
									{
										"kind": "code",
										"text": "`10`"
									},
									{
										"kind": "text",
										"text": " listeners can be registered for any single\nevent. This limit can be changed for individual "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " instances\nusing the "
									},
									{
										"kind": "code",
										"text": "`emitter.setMaxListeners(n)`"
									},
									{
										"kind": "text",
										"text": " method. To change the default\nfor _all_"
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " instances, the "
									},
									{
										"kind": "code",
										"text": "`events.defaultMaxListeners`"
									},
									{
										"kind": "text",
										"text": " property\ncan be used. If this value is not a positive number, a "
									},
									{
										"kind": "code",
										"text": "`RangeError`"
									},
									{
										"kind": "text",
										"text": " is thrown.\n\nTake caution when setting the "
									},
									{
										"kind": "code",
										"text": "`events.defaultMaxListeners`"
									},
									{
										"kind": "text",
										"text": " because the\nchange affects _all_ "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " instances, including those created before\nthe change is made. However, calling "
									},
									{
										"kind": "code",
										"text": "`emitter.setMaxListeners(n)`"
									},
									{
										"kind": "text",
										"text": " still has\nprecedence over "
									},
									{
										"kind": "code",
										"text": "`events.defaultMaxListeners`"
									},
									{
										"kind": "text",
										"text": ".\n\nThis is not a hard limit. The "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " instance will allow\nmore listeners to be added but will output a trace warning to stderr indicating\nthat a \"possible EventEmitter memory leak\" has been detected. For any single\n"
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", the "
									},
									{
										"kind": "code",
										"text": "`emitter.getMaxListeners()`"
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "code",
										"text": "`emitter.setMaxListeners()`"
									},
									{
										"kind": "text",
										"text": " methods can be used to\ntemporarily avoid this warning:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nconst emitter = new EventEmitter();\nemitter.setMaxListeners(emitter.getMaxListeners() + 1);\nemitter.once('event', () => {\n  // do stuff\n  emitter.setMaxListeners(Math.max(emitter.getMaxListeners() - 1, 0));\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\nThe "
									},
									{
										"kind": "code",
										"text": "`--trace-warnings`"
									},
									{
										"kind": "text",
										"text": " command-line flag can be used to display the\nstack trace for such warnings.\n\nThe emitted warning can be inspected with "
									},
									{
										"kind": "code",
										"text": "`process.on('warning')`"
									},
									{
										"kind": "text",
										"text": " and will\nhave the additional "
									},
									{
										"kind": "code",
										"text": "`emitter`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`type`"
									},
									{
										"kind": "text",
										"text": ", and "
									},
									{
										"kind": "code",
										"text": "`count`"
									},
									{
										"kind": "text",
										"text": " properties, referring to\nthe event emitter instance, the event's name and the number of attached\nlisteners, respectively.\nIts "
									},
									{
										"kind": "code",
										"text": "`name`"
									},
									{
										"kind": "text",
										"text": " property is set to "
									},
									{
										"kind": "code",
										"text": "`'MaxListenersExceededWarning'`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.11.2"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 497,
									"character": 15,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L497"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.defaultMaxListeners"
							}
						},
						{
							"id": 576,
							"name": "errorMonitor",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isStatic": true,
								"isExternal": true,
								"isReadonly": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This symbol shall be used to install a listener for only monitoring "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " events. Listeners installed using this symbol are called before the regular "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " listeners are called.\n\nInstalling a listener using this symbol does not change the behavior once an "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " event is emitted. Therefore, the process will still crash if no\nregular "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " listener is installed."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v13.6.0, v12.17.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 444,
									"character": 24,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L444"
								}
							],
							"type": {
								"type": "query",
								"queryType": {
									"type": "reference",
									"target": 63,
									"name": "errorMonitor",
									"package": "@types/node",
									"qualifiedName": "EventEmitter.errorMonitor"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.errorMonitor"
							}
						},
						{
							"id": 663,
							"name": "[captureRejectionSymbol]",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isOptional": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 136,
									"character": 8,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L136"
								}
							],
							"signatures": [
								{
									"id": 664,
									"name": "[captureRejectionSymbol]",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 136,
											"character": 8,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L136"
										}
									],
									"typeParameters": [
										{
											"id": 665,
											"name": "K",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {
												"isExternal": true
											}
										}
									],
									"parameters": [
										{
											"id": 666,
											"name": "error",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es5.d.ts",
													"qualifiedName": "Error"
												},
												"name": "Error",
												"package": "typescript"
											}
										},
										{
											"id": 667,
											"name": "event",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 668,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true,
												"isRest": true
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "@types/node",
													"packagePath": "events.d.ts",
													"qualifiedName": "AnyRest"
												},
												"name": "AnyRest",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.[captureRejectionSymbol]",
										"package": "@types/node"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.[captureRejectionSymbol]",
								"package": "@types/node"
							}
						},
						{
							"id": 669,
							"name": "addListener",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 596,
									"character": 16,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L596"
								}
							],
							"signatures": [
								{
									"id": 670,
									"name": "addListener",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Alias for "
											},
											{
												"kind": "code",
												"text": "`emitter.on(eventName, listener)`"
											},
											{
												"kind": "text",
												"text": "."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.1.26"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 596,
											"character": 16,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L596"
										}
									],
									"typeParameters": [
										{
											"id": 671,
											"name": "K",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {
												"isExternal": true
											}
										}
									],
									"parameters": [
										{
											"id": 672,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 673,
											"name": "listener",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 674,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 117,
															"character": 42,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L117"
														}
													],
													"signatures": [
														{
															"id": 675,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/events.d.ts",
																	"line": 117,
																	"character": 42,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L117"
																}
															],
															"parameters": [
																{
																	"id": 676,
																	"name": "args",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.addListener",
										"package": "@types/node"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.addListener",
								"package": "@types/node"
							}
						},
						{
							"id": 642,
							"name": "clearExecutionHistory",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/TestAutomationService.ts",
									"line": 411,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L411"
								}
							],
							"signatures": [
								{
									"id": 643,
									"name": "clearExecutionHistory",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Clear execution history"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/services/TestAutomationService.ts",
											"line": 411,
											"character": 2,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L411"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 725,
							"name": "emit",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 858,
									"character": 16,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L858"
								}
							],
							"signatures": [
								{
									"id": 726,
									"name": "emit",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Synchronously calls each of the listeners registered for the event named "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": ", in the order they were registered, passing the supplied arguments\nto each.\n\nReturns "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if the event had listeners, "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": " otherwise.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { EventEmitter } from 'node:events';\nconst myEmitter = new EventEmitter();\n\n// First listener\nmyEmitter.on('event', function firstListener() {\n  console.log('Helloooo! first listener');\n});\n// Second listener\nmyEmitter.on('event', function secondListener(arg1, arg2) {\n  console.log(`event with parameters ${arg1}, ${arg2} in second listener`);\n});\n// Third listener\nmyEmitter.on('event', function thirdListener(...args) {\n  const parameters = args.join(', ');\n  console.log(`event with parameters ${parameters} in third listener`);\n});\n\nconsole.log(myEmitter.listeners('event'));\n\nmyEmitter.emit('event', 1, 2, 3, 4, 5);\n\n// Prints:\n// [\n//   [Function: firstListener],\n//   [Function: secondListener],\n//   [Function: thirdListener]\n// ]\n// Helloooo! first listener\n// event with parameters 1, 2 in second listener\n// event with parameters 1, 2, 3, 4, 5 in third listener\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.1.26"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 858,
											"character": 16,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L858"
										}
									],
									"typeParameters": [
										{
											"id": 727,
											"name": "K",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {
												"isExternal": true
											}
										}
									],
									"parameters": [
										{
											"id": 728,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 729,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true,
												"isRest": true
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "@types/node",
													"packagePath": "events.d.ts",
													"qualifiedName": "AnyRest"
												},
												"name": "AnyRest",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.emit",
										"package": "@types/node"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.emit",
								"package": "@types/node"
							}
						},
						{
							"id": 751,
							"name": "eventNames",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 921,
									"character": 16,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L921"
								}
							],
							"signatures": [
								{
									"id": 752,
									"name": "eventNames",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns an array listing the events for which the emitter has registered\nlisteners. The values in the array are strings or "
											},
											{
												"kind": "code",
												"text": "`Symbol`"
											},
											{
												"kind": "text",
												"text": "s.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { EventEmitter } from 'node:events';\n\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => {});\nmyEE.on('bar', () => {});\n\nconst sym = Symbol('symbol');\nmyEE.on(sym, () => {});\n\nconsole.log(myEE.eventNames());\n// Prints: [ 'foo', 'bar', Symbol(symbol) ]\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v6.0.0"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 921,
											"character": 16,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L921"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "intrinsic",
													"name": "symbol"
												}
											]
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.eventNames",
										"package": "@types/node"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.eventNames",
								"package": "@types/node"
							}
						},
						{
							"id": 613,
							"name": "executeScenarios",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/TestAutomationService.ts",
									"line": 227,
									"character": 8,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L227"
								}
							],
							"signatures": [
								{
									"id": 614,
									"name": "executeScenarios",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Execute selected test scenarios"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/services/TestAutomationService.ts",
											"line": 227,
											"character": 8,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L227"
										}
									],
									"parameters": [
										{
											"id": 615,
											"name": "scenarioNames",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 616,
											"name": "executionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 653,
							"name": "exportExecutionResults",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/TestAutomationService.ts",
									"line": 467,
									"character": 8,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L467"
								}
							],
							"signatures": [
								{
									"id": 654,
									"name": "exportExecutionResults",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Export execution results in various formats"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/services/TestAutomationService.ts",
											"line": 467,
											"character": 8,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L467"
										}
									],
									"parameters": [
										{
											"id": 655,
											"name": "executionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 656,
											"name": "format",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "json"
													},
													{
														"type": "literal",
														"value": "csv"
													},
													{
														"type": "literal",
														"value": "html"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 629,
							"name": "getAvailableFeatures",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/TestAutomationService.ts",
									"line": 364,
									"character": 8,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L364"
								}
							],
							"signatures": [
								{
									"id": 630,
									"name": "getAvailableFeatures",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get available feature files"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/services/TestAutomationService.ts",
											"line": 364,
											"character": 8,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L364"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 591,
							"name": "getAvailableScenarios",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/TestAutomationService.ts",
									"line": 68,
									"character": 8,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L68"
								}
							],
							"signatures": [
								{
									"id": 592,
									"name": "getAvailableScenarios",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get available test scenarios by calling Python service"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/services/TestAutomationService.ts",
											"line": 68,
											"character": 8,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L68"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 514,
													"name": "TestScenario",
													"package": "multi-sonicator-io-backend"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 596,
							"name": "getAvailableTags",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/TestAutomationService.ts",
									"line": 124,
									"character": 8,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L124"
								}
							],
							"signatures": [
								{
									"id": 597,
									"name": "getAvailableTags",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get all available tags from loaded scenarios"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/services/TestAutomationService.ts",
											"line": 124,
											"character": 8,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L124"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 611,
							"name": "getCategorizedTags",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/TestAutomationService.ts",
									"line": 195,
									"character": 8,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L195"
								}
							],
							"signatures": [
								{
									"id": 612,
									"name": "getCategorizedTags",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get tags categorized by type"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/services/TestAutomationService.ts",
											"line": 195,
											"character": 8,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L195"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 622,
							"name": "getCurrentExecution",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/TestAutomationService.ts",
									"line": 335,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L335"
								}
							],
							"signatures": [
								{
									"id": 623,
									"name": "getCurrentExecution",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get current execution status"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/services/TestAutomationService.ts",
											"line": 335,
											"character": 2,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L335"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 524,
												"name": "TestExecution",
												"package": "multi-sonicator-io-backend"
											}
										]
									}
								}
							]
						},
						{
							"id": 637,
							"name": "getExecutionHistory",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/TestAutomationService.ts",
									"line": 393,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L393"
								}
							],
							"signatures": [
								{
									"id": 638,
									"name": "getExecutionHistory",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get execution history"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/services/TestAutomationService.ts",
											"line": 393,
											"character": 2,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L393"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 524,
											"name": "TestExecution",
											"package": "multi-sonicator-io-backend"
										}
									}
								}
							]
						},
						{
							"id": 644,
							"name": "getExecutionStats",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/TestAutomationService.ts",
									"line": 418,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L418"
								}
							],
							"signatures": [
								{
									"id": 645,
									"name": "getExecutionStats",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get execution statistics"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/services/TestAutomationService.ts",
											"line": 418,
											"character": 2,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L418"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 646,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 651,
													"name": "averageDuration",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/services/TestAutomationService.ts",
															"line": 423,
															"character": 4,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L423"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 652,
													"name": "successRate",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/services/TestAutomationService.ts",
															"line": 424,
															"character": 4,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L424"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 647,
													"name": "totalExecutions",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/services/TestAutomationService.ts",
															"line": 419,
															"character": 4,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L419"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 650,
													"name": "totalFailed",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/services/TestAutomationService.ts",
															"line": 422,
															"character": 4,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L422"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 649,
													"name": "totalPassed",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/services/TestAutomationService.ts",
															"line": 421,
															"character": 4,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L421"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 648,
													"name": "totalScenarios",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/services/TestAutomationService.ts",
															"line": 420,
															"character": 4,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L420"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														651,
														652,
														647,
														650,
														649,
														648
													]
												}
											],
											"sources": [
												{
													"fileName": "src/services/TestAutomationService.ts",
													"line": 418,
													"character": 23,
													"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L418"
												}
											]
										}
									}
								}
							]
						},
						{
							"id": 715,
							"name": "getMaxListeners",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 773,
									"character": 16,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L773"
								}
							],
							"signatures": [
								{
									"id": 716,
									"name": "getMaxListeners",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns the current max listener value for the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": " which is either\nset by "
											},
											{
												"kind": "code",
												"text": "`emitter.setMaxListeners(n)`"
											},
											{
												"kind": "text",
												"text": " or defaults to "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "EventEmitter.defaultMaxListeners",
												"target": 66
											},
											{
												"kind": "text",
												"text": "."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v1.0.0"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 773,
											"character": 16,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L773"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.getMaxListeners",
										"package": "@types/node"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.getMaxListeners",
								"package": "@types/node"
							}
						},
						{
							"id": 626,
							"name": "getScenariosByFeature",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/TestAutomationService.ts",
									"line": 349,
									"character": 8,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L349"
								}
							],
							"signatures": [
								{
									"id": 627,
									"name": "getScenariosByFeature",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get test scenarios for specific feature files"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/services/TestAutomationService.ts",
											"line": 349,
											"character": 8,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L349"
										}
									],
									"parameters": [
										{
											"id": 628,
											"name": "featureFiles",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 514,
													"name": "TestScenario",
													"package": "multi-sonicator-io-backend"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 598,
							"name": "getScenariosByTags",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/TestAutomationService.ts",
									"line": 134,
									"character": 8,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L134"
								}
							],
							"signatures": [
								{
									"id": 599,
									"name": "getScenariosByTags",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get scenarios filtered by tags with AND/OR logic"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/services/TestAutomationService.ts",
											"line": 134,
											"character": 8,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L134"
										}
									],
									"parameters": [
										{
											"id": 600,
											"name": "tags",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 601,
											"name": "useOrLogic",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "false"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 514,
													"name": "TestScenario",
													"package": "multi-sonicator-io-backend"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 605,
							"name": "getTagPresets",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/TestAutomationService.ts",
									"line": 174,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L174"
								}
							],
							"signatures": [
								{
									"id": 606,
									"name": "getTagPresets",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get tag presets"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/services/TestAutomationService.ts",
											"line": 174,
											"character": 2,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L174"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 624,
							"name": "isExecutionInProgress",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/TestAutomationService.ts",
									"line": 342,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L342"
								}
							],
							"signatures": [
								{
									"id": 625,
									"name": "isExecutionInProgress",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Check if execution is in progress"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/services/TestAutomationService.ts",
											"line": 342,
											"character": 2,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L342"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 730,
							"name": "listenerCount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 867,
									"character": 16,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L867"
								}
							],
							"signatures": [
								{
									"id": 731,
									"name": "listenerCount",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns the number of listeners listening for the event named "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": ".\nIf "
											},
											{
												"kind": "code",
												"text": "`listener`"
											},
											{
												"kind": "text",
												"text": " is provided, it will return how many times the listener is found\nin the list of the listeners of the event."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v3.2.0"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 867,
											"character": 16,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L867"
										}
									],
									"typeParameters": [
										{
											"id": 732,
											"name": "K",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {
												"isExternal": true
											}
										}
									],
									"parameters": [
										{
											"id": 733,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The name of the event being listened for"
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 734,
											"name": "listener",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The event handler function"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es5.d.ts",
													"qualifiedName": "Function"
												},
												"name": "Function",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.listenerCount",
										"package": "@types/node"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.listenerCount",
								"package": "@types/node"
							}
						},
						{
							"id": 717,
							"name": "listeners",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 786,
									"character": 16,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L786"
								}
							],
							"signatures": [
								{
									"id": 718,
									"name": "listeners",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns a copy of the array of listeners for the event named "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": ".\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\nconsole.log(util.inspect(server.listeners('connection')));\n// Prints: [ [Function] ]\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.1.26"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 786,
											"character": 16,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L786"
										}
									],
									"typeParameters": [
										{
											"id": 719,
											"name": "K",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {
												"isExternal": true
											}
										}
									],
									"parameters": [
										{
											"id": 720,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"packageName": "typescript",
												"packagePath": "lib/lib.es5.d.ts",
												"qualifiedName": "Function"
											},
											"name": "Function",
											"package": "typescript"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.listeners",
										"package": "@types/node"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.listeners",
								"package": "@types/node"
							}
						},
						{
							"id": 701,
							"name": "off",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 746,
									"character": 16,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L746"
								}
							],
							"signatures": [
								{
									"id": 702,
									"name": "off",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Alias for "
											},
											{
												"kind": "code",
												"text": "`emitter.removeListener()`"
											},
											{
												"kind": "text",
												"text": "."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v10.0.0"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 746,
											"character": 16,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L746"
										}
									],
									"typeParameters": [
										{
											"id": 703,
											"name": "K",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {
												"isExternal": true
											}
										}
									],
									"parameters": [
										{
											"id": 704,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 705,
											"name": "listener",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 706,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 117,
															"character": 42,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L117"
														}
													],
													"signatures": [
														{
															"id": 707,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/events.d.ts",
																	"line": 117,
																	"character": 42,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L117"
																}
															],
															"parameters": [
																{
																	"id": 708,
																	"name": "args",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.off",
										"package": "@types/node"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.off",
								"package": "@types/node"
							}
						},
						{
							"id": 677,
							"name": "on",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 628,
									"character": 16,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L628"
								}
							],
							"signatures": [
								{
									"id": 678,
									"name": "on",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Adds the "
											},
											{
												"kind": "code",
												"text": "`listener`"
											},
											{
												"kind": "text",
												"text": " function to the end of the listeners array for the event\nnamed "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": ". No checks are made to see if the "
											},
											{
												"kind": "code",
												"text": "`listener`"
											},
											{
												"kind": "text",
												"text": " has already\nbeen added. Multiple calls passing the same combination of "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": " and\n"
											},
											{
												"kind": "code",
												"text": "`listener`"
											},
											{
												"kind": "text",
												"text": " will result in the "
											},
											{
												"kind": "code",
												"text": "`listener`"
											},
											{
												"kind": "text",
												"text": " being added, and called, multiple times.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\n```"
											},
											{
												"kind": "text",
												"text": "\n\nReturns a reference to the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": ", so that calls can be chained.\n\nBy default, event listeners are invoked in the order they are added. The "
											},
											{
												"kind": "code",
												"text": "`emitter.prependListener()`"
											},
											{
												"kind": "text",
												"text": " method can be used as an alternative to add the\nevent listener to the beginning of the listeners array.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { EventEmitter } from 'node:events';\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => console.log('a'));\nmyEE.prependListener('foo', () => console.log('b'));\nmyEE.emit('foo');\n// Prints:\n//   b\n//   a\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.1.101"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 628,
											"character": 16,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L628"
										}
									],
									"typeParameters": [
										{
											"id": 679,
											"name": "K",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {
												"isExternal": true
											}
										}
									],
									"parameters": [
										{
											"id": 680,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The name of the event."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 681,
											"name": "listener",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The callback function"
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 682,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 117,
															"character": 42,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L117"
														}
													],
													"signatures": [
														{
															"id": 683,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/events.d.ts",
																	"line": 117,
																	"character": 42,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L117"
																}
															],
															"parameters": [
																{
																	"id": 684,
																	"name": "args",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.on",
										"package": "@types/node"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.on",
								"package": "@types/node"
							}
						},
						{
							"id": 685,
							"name": "once",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 658,
									"character": 16,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L658"
								}
							],
							"signatures": [
								{
									"id": 686,
									"name": "once",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Adds a **one-time** "
											},
											{
												"kind": "code",
												"text": "`listener`"
											},
											{
												"kind": "text",
												"text": " function for the event named "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": ". The\nnext time "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": " is triggered, this listener is removed and then invoked.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nserver.once('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n```"
											},
											{
												"kind": "text",
												"text": "\n\nReturns a reference to the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": ", so that calls can be chained.\n\nBy default, event listeners are invoked in the order they are added. The "
											},
											{
												"kind": "code",
												"text": "`emitter.prependOnceListener()`"
											},
											{
												"kind": "text",
												"text": " method can be used as an alternative to add the\nevent listener to the beginning of the listeners array.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { EventEmitter } from 'node:events';\nconst myEE = new EventEmitter();\nmyEE.once('foo', () => console.log('a'));\nmyEE.prependOnceListener('foo', () => console.log('b'));\nmyEE.emit('foo');\n// Prints:\n//   b\n//   a\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.3.0"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 658,
											"character": 16,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L658"
										}
									],
									"typeParameters": [
										{
											"id": 687,
											"name": "K",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {
												"isExternal": true
											}
										}
									],
									"parameters": [
										{
											"id": 688,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The name of the event."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 689,
											"name": "listener",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The callback function"
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 690,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 117,
															"character": 42,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L117"
														}
													],
													"signatures": [
														{
															"id": 691,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/events.d.ts",
																	"line": 117,
																	"character": 42,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L117"
																}
															],
															"parameters": [
																{
																	"id": 692,
																	"name": "args",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.once",
										"package": "@types/node"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.once",
								"package": "@types/node"
							}
						},
						{
							"id": 735,
							"name": "prependListener",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 885,
									"character": 16,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L885"
								}
							],
							"signatures": [
								{
									"id": 736,
									"name": "prependListener",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Adds the "
											},
											{
												"kind": "code",
												"text": "`listener`"
											},
											{
												"kind": "text",
												"text": " function to the _beginning_ of the listeners array for the\nevent named "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": ". No checks are made to see if the "
											},
											{
												"kind": "code",
												"text": "`listener`"
											},
											{
												"kind": "text",
												"text": " has\nalready been added. Multiple calls passing the same combination of "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": "\nand "
											},
											{
												"kind": "code",
												"text": "`listener`"
											},
											{
												"kind": "text",
												"text": " will result in the "
											},
											{
												"kind": "code",
												"text": "`listener`"
											},
											{
												"kind": "text",
												"text": " being added, and called, multiple times.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nserver.prependListener('connection', (stream) => {\n  console.log('someone connected!');\n});\n```"
											},
											{
												"kind": "text",
												"text": "\n\nReturns a reference to the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": ", so that calls can be chained."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v6.0.0"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 885,
											"character": 16,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L885"
										}
									],
									"typeParameters": [
										{
											"id": 737,
											"name": "K",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {
												"isExternal": true
											}
										}
									],
									"parameters": [
										{
											"id": 738,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The name of the event."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 739,
											"name": "listener",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The callback function"
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 740,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 117,
															"character": 42,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L117"
														}
													],
													"signatures": [
														{
															"id": 741,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/events.d.ts",
																	"line": 117,
																	"character": 42,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L117"
																}
															],
															"parameters": [
																{
																	"id": 742,
																	"name": "args",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.prependListener",
										"package": "@types/node"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.prependListener",
								"package": "@types/node"
							}
						},
						{
							"id": 743,
							"name": "prependOnceListener",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 901,
									"character": 16,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L901"
								}
							],
							"signatures": [
								{
									"id": 744,
									"name": "prependOnceListener",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Adds a **one-time**"
											},
											{
												"kind": "code",
												"text": "`listener`"
											},
											{
												"kind": "text",
												"text": " function for the event named "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": " to the _beginning_ of the listeners array. The next time "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": " is triggered, this\nlistener is removed, and then invoked.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nserver.prependOnceListener('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n```"
											},
											{
												"kind": "text",
												"text": "\n\nReturns a reference to the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": ", so that calls can be chained."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v6.0.0"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 901,
											"character": 16,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L901"
										}
									],
									"typeParameters": [
										{
											"id": 745,
											"name": "K",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {
												"isExternal": true
											}
										}
									],
									"parameters": [
										{
											"id": 746,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The name of the event."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 747,
											"name": "listener",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The callback function"
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 748,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 117,
															"character": 42,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L117"
														}
													],
													"signatures": [
														{
															"id": 749,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/events.d.ts",
																	"line": 117,
																	"character": 42,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L117"
																}
															],
															"parameters": [
																{
																	"id": 750,
																	"name": "args",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.prependOnceListener",
										"package": "@types/node"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.prependOnceListener",
								"package": "@types/node"
							}
						},
						{
							"id": 721,
							"name": "rawListeners",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 817,
									"character": 16,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L817"
								}
							],
							"signatures": [
								{
									"id": 722,
									"name": "rawListeners",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns a copy of the array of listeners for the event named "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": ",\nincluding any wrappers (such as those created by "
											},
											{
												"kind": "code",
												"text": "`.once()`"
											},
											{
												"kind": "text",
												"text": ").\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { EventEmitter } from 'node:events';\nconst emitter = new EventEmitter();\nemitter.once('log', () => console.log('log once'));\n\n// Returns a new Array with a function `onceWrapper` which has a property\n// `listener` which contains the original listener bound above\nconst listeners = emitter.rawListeners('log');\nconst logFnWrapper = listeners[0];\n\n// Logs \"log once\" to the console and does not unbind the `once` event\nlogFnWrapper.listener();\n\n// Logs \"log once\" to the console and removes the listener\nlogFnWrapper();\n\nemitter.on('log', () => console.log('log persistently'));\n// Will return a new Array with a single function bound by `.on()` above\nconst newListeners = emitter.rawListeners('log');\n\n// Logs \"log persistently\" twice\nnewListeners[0]();\nemitter.emit('log');\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v9.4.0"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 817,
											"character": 16,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L817"
										}
									],
									"typeParameters": [
										{
											"id": 723,
											"name": "K",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {
												"isExternal": true
											}
										}
									],
									"parameters": [
										{
											"id": 724,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"packageName": "typescript",
												"packagePath": "lib/lib.es5.d.ts",
												"qualifiedName": "Function"
											},
											"name": "Function",
											"package": "typescript"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.rawListeners",
										"package": "@types/node"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.rawListeners",
								"package": "@types/node"
							}
						},
						{
							"id": 709,
							"name": "removeAllListeners",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 757,
									"character": 16,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L757"
								}
							],
							"signatures": [
								{
									"id": 710,
									"name": "removeAllListeners",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Removes all listeners, or those of the specified "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": ".\n\nIt is bad practice to remove listeners added elsewhere in the code,\nparticularly when the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": " instance was created by some other\ncomponent or module (e.g. sockets or file streams).\n\nReturns a reference to the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": ", so that calls can be chained."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.1.26"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 757,
											"character": 16,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L757"
										}
									],
									"parameters": [
										{
											"id": 711,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.removeAllListeners",
										"package": "@types/node"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.removeAllListeners",
								"package": "@types/node"
							}
						},
						{
							"id": 693,
							"name": "removeListener",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 741,
									"character": 16,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L741"
								}
							],
							"signatures": [
								{
									"id": 694,
									"name": "removeListener",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Removes the specified "
											},
											{
												"kind": "code",
												"text": "`listener`"
											},
											{
												"kind": "text",
												"text": " from the listener array for the event named "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": ".\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nconst callback = (stream) => {\n  console.log('someone connected!');\n};\nserver.on('connection', callback);\n// ...\nserver.removeListener('connection', callback);\n```"
											},
											{
												"kind": "text",
												"text": "\n\n"
											},
											{
												"kind": "code",
												"text": "`removeListener()`"
											},
											{
												"kind": "text",
												"text": " will remove, at most, one instance of a listener from the\nlistener array. If any single listener has been added multiple times to the\nlistener array for the specified "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": ", then "
											},
											{
												"kind": "code",
												"text": "`removeListener()`"
											},
											{
												"kind": "text",
												"text": " must be\ncalled multiple times to remove each instance.\n\nOnce an event is emitted, all listeners attached to it at the\ntime of emitting are called in order. This implies that any "
											},
											{
												"kind": "code",
												"text": "`removeListener()`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`removeAllListeners()`"
											},
											{
												"kind": "text",
												"text": " calls _after_ emitting and _before_ the last listener finishes execution\nwill not remove them from"
											},
											{
												"kind": "code",
												"text": "`emit()`"
											},
											{
												"kind": "text",
												"text": " in progress. Subsequent events behave as expected.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { EventEmitter } from 'node:events';\nclass MyEmitter extends EventEmitter {}\nconst myEmitter = new MyEmitter();\n\nconst callbackA = () => {\n  console.log('A');\n  myEmitter.removeListener('event', callbackB);\n};\n\nconst callbackB = () => {\n  console.log('B');\n};\n\nmyEmitter.on('event', callbackA);\n\nmyEmitter.on('event', callbackB);\n\n// callbackA removes listener callbackB but it will still be called.\n// Internal listener array at time of emit [callbackA, callbackB]\nmyEmitter.emit('event');\n// Prints:\n//   A\n//   B\n\n// callbackB is now removed.\n// Internal listener array [callbackA]\nmyEmitter.emit('event');\n// Prints:\n//   A\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBecause listeners are managed using an internal array, calling this will\nchange the position indices of any listener registered _after_ the listener\nbeing removed. This will not impact the order in which listeners are called,\nbut it means that any copies of the listener array as returned by\nthe "
											},
											{
												"kind": "code",
												"text": "`emitter.listeners()`"
											},
											{
												"kind": "text",
												"text": " method will need to be recreated.\n\nWhen a single function has been added as a handler multiple times for a single\nevent (as in the example below), "
											},
											{
												"kind": "code",
												"text": "`removeListener()`"
											},
											{
												"kind": "text",
												"text": " will remove the most\nrecently added instance. In the example the "
											},
											{
												"kind": "code",
												"text": "`once('ping')`"
											},
											{
												"kind": "text",
												"text": " listener is removed:\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { EventEmitter } from 'node:events';\nconst ee = new EventEmitter();\n\nfunction pong() {\n  console.log('pong');\n}\n\nee.on('ping', pong);\nee.once('ping', pong);\nee.removeListener('ping', pong);\n\nee.emit('ping');\nee.emit('ping');\n```"
											},
											{
												"kind": "text",
												"text": "\n\nReturns a reference to the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": ", so that calls can be chained."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.1.26"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 741,
											"character": 16,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L741"
										}
									],
									"typeParameters": [
										{
											"id": 695,
											"name": "K",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {
												"isExternal": true
											}
										}
									],
									"parameters": [
										{
											"id": 696,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 697,
											"name": "listener",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 698,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 117,
															"character": 42,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L117"
														}
													],
													"signatures": [
														{
															"id": 699,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/events.d.ts",
																	"line": 117,
																	"character": 42,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L117"
																}
															],
															"parameters": [
																{
																	"id": 700,
																	"name": "args",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.removeListener",
										"package": "@types/node"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.removeListener",
								"package": "@types/node"
							}
						},
						{
							"id": 607,
							"name": "saveTagPreset",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/TestAutomationService.ts",
									"line": 181,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L181"
								}
							],
							"signatures": [
								{
									"id": 608,
									"name": "saveTagPreset",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Save custom tag combination"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/services/TestAutomationService.ts",
											"line": 181,
											"character": 2,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L181"
										}
									],
									"parameters": [
										{
											"id": 609,
											"name": "name",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 610,
											"name": "tags",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 602,
							"name": "searchScenarios",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/TestAutomationService.ts",
									"line": 159,
									"character": 8,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L159"
								}
							],
							"signatures": [
								{
									"id": 603,
									"name": "searchScenarios",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Search scenarios by text query"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/services/TestAutomationService.ts",
											"line": 159,
											"character": 8,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L159"
										}
									],
									"parameters": [
										{
											"id": 604,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 514,
													"name": "TestScenario",
													"package": "multi-sonicator-io-backend"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 712,
							"name": "setMaxListeners",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 767,
									"character": 16,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L767"
								}
							],
							"signatures": [
								{
									"id": 713,
									"name": "setMaxListeners",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "By default "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": "s will print a warning if more than "
											},
											{
												"kind": "code",
												"text": "`10`"
											},
											{
												"kind": "text",
												"text": " listeners are\nadded for a particular event. This is a useful default that helps finding\nmemory leaks. The "
											},
											{
												"kind": "code",
												"text": "`emitter.setMaxListeners()`"
											},
											{
												"kind": "text",
												"text": " method allows the limit to be\nmodified for this specific "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": " instance. The value can be set to "
											},
											{
												"kind": "code",
												"text": "`Infinity`"
											},
											{
												"kind": "text",
												"text": " (or "
											},
											{
												"kind": "code",
												"text": "`0`"
											},
											{
												"kind": "text",
												"text": ") to indicate an unlimited number of listeners.\n\nReturns a reference to the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": ", so that calls can be chained."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.3.5"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 767,
											"character": 16,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L767"
										}
									],
									"parameters": [
										{
											"id": 714,
											"name": "n",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.setMaxListeners",
										"package": "@types/node"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.setMaxListeners",
								"package": "@types/node"
							}
						},
						{
							"id": 620,
							"name": "stopExecution",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/TestAutomationService.ts",
									"line": 315,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L315"
								}
							],
							"signatures": [
								{
									"id": 621,
									"name": "stopExecution",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Stop current test execution"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/services/TestAutomationService.ts",
											"line": 315,
											"character": 2,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L315"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 631,
							"name": "validateScenarios",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/TestAutomationService.ts",
									"line": 378,
									"character": 8,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L378"
								}
							],
							"signatures": [
								{
									"id": 632,
									"name": "validateScenarios",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Validate scenario selection"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/services/TestAutomationService.ts",
											"line": 378,
											"character": 8,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L378"
										}
									],
									"parameters": [
										{
											"id": 633,
											"name": "scenarioNames",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 634,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 636,
															"name": "missing",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/services/TestAutomationService.ts",
																	"line": 378,
																	"character": 77,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L378"
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														},
														{
															"id": 635,
															"name": "valid",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/services/TestAutomationService.ts",
																	"line": 378,
																	"character": 61,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L378"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																636,
																635
															]
														}
													],
													"sources": [
														{
															"fileName": "src/services/TestAutomationService.ts",
															"line": 378,
															"character": 60,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L378"
														}
													]
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 569,
							"name": "addAbortListener",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isStatic": true,
								"isExternal": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 436,
									"character": 15,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L436"
								}
							],
							"signatures": [
								{
									"id": 570,
									"name": "addAbortListener",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Listens once to the "
											},
											{
												"kind": "code",
												"text": "`abort`"
											},
											{
												"kind": "text",
												"text": " event on the provided "
											},
											{
												"kind": "code",
												"text": "`signal`"
											},
											{
												"kind": "text",
												"text": ".\n\nListening to the "
											},
											{
												"kind": "code",
												"text": "`abort`"
											},
											{
												"kind": "text",
												"text": " event on abort signals is unsafe and may\nlead to resource leaks since another third party with the signal can\ncall "
											},
											{
												"kind": "code",
												"text": "`e.stopImmediatePropagation()`"
											},
											{
												"kind": "text",
												"text": ". Unfortunately Node.js cannot change\nthis since it would violate the web standard. Additionally, the original\nAPI makes it easy to forget to remove listeners.\n\nThis API allows safely using "
											},
											{
												"kind": "code",
												"text": "`AbortSignal`"
											},
											{
												"kind": "text",
												"text": "s in Node.js APIs by solving these\ntwo issues by listening to the event such that "
											},
											{
												"kind": "code",
												"text": "`stopImmediatePropagation`"
											},
											{
												"kind": "text",
												"text": " does\nnot prevent the listener from running.\n\nReturns a disposable so that it may be unsubscribed from more easily.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { addAbortListener } from 'node:events';\n\nfunction example(signal) {\n  let disposable;\n  try {\n    signal.addEventListener('abort', (e) => e.stopImmediatePropagation());\n    disposable = addAbortListener(signal, (e) => {\n      // Do something when signal is aborted.\n    });\n  } finally {\n    disposable?.[Symbol.dispose]();\n  }\n}\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v20.5.0"
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Disposable that removes the "
													},
													{
														"kind": "code",
														"text": "`abort`"
													},
													{
														"kind": "text",
														"text": " listener."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 436,
											"character": 15,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L436"
										}
									],
									"parameters": [
										{
											"id": 571,
											"name": "signal",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "@types/node",
													"packagePath": "web-globals/abortcontroller.d.ts",
													"qualifiedName": "__global.AbortSignal"
												},
												"name": "AbortSignal",
												"package": "@types/node",
												"qualifiedName": "__global.AbortSignal"
											}
										},
										{
											"id": 572,
											"name": "resource",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 573,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 436,
															"character": 63,
															"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L436"
														}
													],
													"signatures": [
														{
															"id": 574,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/events.d.ts",
																	"line": 436,
																	"character": 63,
																	"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L436"
																}
															],
															"parameters": [
																{
																	"id": 575,
																	"name": "event",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"packageName": "@types/node",
																			"packagePath": "web-globals/events.d.ts",
																			"qualifiedName": "__global.Event"
																		},
																		"name": "Event",
																		"package": "@types/node",
																		"qualifiedName": "__global.Event"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.esnext.disposable.d.ts",
											"qualifiedName": "Disposable"
										},
										"name": "Disposable",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.addAbortListener"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.addAbortListener"
							}
						},
						{
							"id": 558,
							"name": "getEventListeners",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isStatic": true,
								"isExternal": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 358,
									"character": 15,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L358"
								}
							],
							"signatures": [
								{
									"id": 559,
									"name": "getEventListeners",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns a copy of the array of listeners for the event named "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": ".\n\nFor "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": "s this behaves exactly the same as calling "
											},
											{
												"kind": "code",
												"text": "`.listeners`"
											},
											{
												"kind": "text",
												"text": " on\nthe emitter.\n\nFor "
											},
											{
												"kind": "code",
												"text": "`EventTarget`"
											},
											{
												"kind": "text",
												"text": "s this is the only way to get the event listeners for the\nevent target. This is useful for debugging and diagnostic purposes.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { getEventListeners, EventEmitter } from 'node:events';\n\n{\n  const ee = new EventEmitter();\n  const listener = () => console.log('Events are fun');\n  ee.on('foo', listener);\n  console.log(getEventListeners(ee, 'foo')); // [ [Function: listener] ]\n}\n{\n  const et = new EventTarget();\n  const listener = () => console.log('Events are fun');\n  et.addEventListener('foo', listener);\n  console.log(getEventListeners(et, 'foo')); // [ [Function: listener] ]\n}\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v15.2.0, v14.17.0"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 358,
											"character": 15,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L358"
										}
									],
									"parameters": [
										{
											"id": 560,
											"name": "emitter",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"packageName": "@types/node",
															"packagePath": "events.d.ts",
															"qualifiedName": "__global.NodeJS.EventEmitter"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"packageName": "@types/node",
																	"packagePath": "events.d.ts",
																	"qualifiedName": "DefaultEventMap"
																},
																"name": "DefaultEventMap",
																"package": "@types/node"
															}
														],
														"name": "EventEmitter",
														"package": "@types/node",
														"qualifiedName": "__global.NodeJS.EventEmitter"
													},
													{
														"type": "reference",
														"target": {
															"packageName": "@types/node",
															"packagePath": "web-globals/events.d.ts",
															"qualifiedName": "__global.EventTarget"
														},
														"name": "EventTarget",
														"package": "@types/node",
														"qualifiedName": "__global.EventTarget"
													}
												]
											}
										},
										{
											"id": 561,
											"name": "name",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"packageName": "typescript",
												"packagePath": "lib/lib.es5.d.ts",
												"qualifiedName": "Function"
											},
											"name": "Function",
											"package": "typescript"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.getEventListeners"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.getEventListeners"
							}
						},
						{
							"id": 562,
							"name": "getMaxListeners",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isStatic": true,
								"isExternal": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 387,
									"character": 15,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L387"
								}
							],
							"signatures": [
								{
									"id": 563,
									"name": "getMaxListeners",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns the currently set max amount of listeners.\n\nFor "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": "s this behaves exactly the same as calling "
											},
											{
												"kind": "code",
												"text": "`.getMaxListeners`"
											},
											{
												"kind": "text",
												"text": " on\nthe emitter.\n\nFor "
											},
											{
												"kind": "code",
												"text": "`EventTarget`"
											},
											{
												"kind": "text",
												"text": "s this is the only way to get the max event listeners for the\nevent target. If the number of event handlers on a single EventTarget exceeds\nthe max set, the EventTarget will print a warning.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { getMaxListeners, setMaxListeners, EventEmitter } from 'node:events';\n\n{\n  const ee = new EventEmitter();\n  console.log(getMaxListeners(ee)); // 10\n  setMaxListeners(11, ee);\n  console.log(getMaxListeners(ee)); // 11\n}\n{\n  const et = new EventTarget();\n  console.log(getMaxListeners(et)); // 10\n  setMaxListeners(11, et);\n  console.log(getMaxListeners(et)); // 11\n}\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v19.9.0"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 387,
											"character": 15,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L387"
										}
									],
									"parameters": [
										{
											"id": 564,
											"name": "emitter",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"packageName": "@types/node",
															"packagePath": "events.d.ts",
															"qualifiedName": "__global.NodeJS.EventEmitter"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"packageName": "@types/node",
																	"packagePath": "events.d.ts",
																	"qualifiedName": "DefaultEventMap"
																},
																"name": "DefaultEventMap",
																"package": "@types/node"
															}
														],
														"name": "EventEmitter",
														"package": "@types/node",
														"qualifiedName": "__global.NodeJS.EventEmitter"
													},
													{
														"type": "reference",
														"target": {
															"packageName": "@types/node",
															"packagePath": "web-globals/events.d.ts",
															"qualifiedName": "__global.EventTarget"
														},
														"name": "EventTarget",
														"package": "@types/node",
														"qualifiedName": "__global.EventTarget"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.getMaxListeners"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.getMaxListeners"
							}
						},
						{
							"id": 554,
							"name": "listenerCount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isStatic": true,
								"isExternal": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 330,
									"character": 15,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L330"
								}
							],
							"signatures": [
								{
									"id": 555,
									"name": "listenerCount",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A class method that returns the number of listeners for the given "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": " registered on the given "
											},
											{
												"kind": "code",
												"text": "`emitter`"
											},
											{
												"kind": "text",
												"text": ".\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { EventEmitter, listenerCount } from 'node:events';\n\nconst myEmitter = new EventEmitter();\nmyEmitter.on('event', () => {});\nmyEmitter.on('event', () => {});\nconsole.log(listenerCount(myEmitter, 'event'));\n// Prints: 2\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v0.9.12"
													}
												]
											},
											{
												"tag": "@deprecated",
												"content": [
													{
														"kind": "text",
														"text": "Since v3.2.0 - Use "
													},
													{
														"kind": "code",
														"text": "`listenerCount`"
													},
													{
														"kind": "text",
														"text": " instead."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 330,
											"character": 15,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L330"
										}
									],
									"parameters": [
										{
											"id": 556,
											"name": "emitter",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The emitter to query"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "@types/node",
													"packagePath": "events.d.ts",
													"qualifiedName": "__global.NodeJS.EventEmitter"
												},
												"name": "EventEmitter",
												"package": "@types/node",
												"qualifiedName": "__global.NodeJS.EventEmitter"
											}
										},
										{
											"id": 557,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The event name"
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.listenerCount"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.listenerCount"
							}
						},
						{
							"id": 545,
							"name": "on",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isStatic": true,
								"isExternal": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 303,
									"character": 15,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L303"
								},
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 308,
									"character": 15,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L308"
								}
							],
							"signatures": [
								{
									"id": 546,
									"name": "on",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "code",
												"text": "```js\nimport { on, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ee = new EventEmitter();\n\n// Emit later on\nprocess.nextTick(() => {\n  ee.emit('foo', 'bar');\n  ee.emit('foo', 42);\n});\n\nfor await (const event of on(ee, 'foo')) {\n  // The execution of this inner block is synchronous and it\n  // processes one event at a time (even with await). Do not use\n  // if concurrent execution is required.\n  console.log(event); // prints ['bar'] [42]\n}\n// Unreachable here\n```"
											},
											{
												"kind": "text",
												"text": "\n\nReturns an "
											},
											{
												"kind": "code",
												"text": "`AsyncIterator`"
											},
											{
												"kind": "text",
												"text": " that iterates "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": " events. It will throw\nif the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": " emits "
											},
											{
												"kind": "code",
												"text": "`'error'`"
											},
											{
												"kind": "text",
												"text": ". It removes all listeners when\nexiting the loop. The "
											},
											{
												"kind": "code",
												"text": "`value`"
											},
											{
												"kind": "text",
												"text": " returned by each iteration is an array\ncomposed of the emitted event arguments.\n\nAn "
											},
											{
												"kind": "code",
												"text": "`AbortSignal`"
											},
											{
												"kind": "text",
												"text": " can be used to cancel waiting on events:\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { on, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ac = new AbortController();\n\n(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo', { signal: ac.signal })) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n\nprocess.nextTick(() => ac.abort());\n```"
											},
											{
												"kind": "text",
												"text": "\n\nUse the "
											},
											{
												"kind": "code",
												"text": "`close`"
											},
											{
												"kind": "text",
												"text": " option to specify an array of event names that will end the iteration:\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { on, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ee = new EventEmitter();\n\n// Emit later on\nprocess.nextTick(() => {\n  ee.emit('foo', 'bar');\n  ee.emit('foo', 42);\n  ee.emit('close');\n});\n\nfor await (const event of on(ee, 'foo', { close: ['close'] })) {\n  console.log(event); // prints ['bar'] [42]\n}\n// the loop will exit after 'close' is emitted\nconsole.log('done'); // prints 'done'\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v13.6.0, v12.16.0"
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An "
													},
													{
														"kind": "code",
														"text": "`AsyncIterator`"
													},
													{
														"kind": "text",
														"text": " that iterates "
													},
													{
														"kind": "code",
														"text": "`eventName`"
													},
													{
														"kind": "text",
														"text": " events emitted by the "
													},
													{
														"kind": "code",
														"text": "`emitter`"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 303,
											"character": 15,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L303"
										}
									],
									"parameters": [
										{
											"id": 547,
											"name": "emitter",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "@types/node",
													"packagePath": "events.d.ts",
													"qualifiedName": "__global.NodeJS.EventEmitter"
												},
												"name": "EventEmitter",
												"package": "@types/node",
												"qualifiedName": "__global.NodeJS.EventEmitter"
											}
										},
										{
											"id": 548,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 549,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "@types/node",
													"packagePath": "events.d.ts",
													"qualifiedName": "StaticEventEmitterIteratorOptions"
												},
												"name": "StaticEventEmitterIteratorOptions",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@types/node",
											"packagePath": "compatibility/iterators.d.ts",
											"qualifiedName": "NodeJS.AsyncIterator"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										],
										"name": "AsyncIterator",
										"package": "@types/node",
										"qualifiedName": "NodeJS.AsyncIterator"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.on"
									}
								},
								{
									"id": 550,
									"name": "on",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "code",
												"text": "```js\nimport { on, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ee = new EventEmitter();\n\n// Emit later on\nprocess.nextTick(() => {\n  ee.emit('foo', 'bar');\n  ee.emit('foo', 42);\n});\n\nfor await (const event of on(ee, 'foo')) {\n  // The execution of this inner block is synchronous and it\n  // processes one event at a time (even with await). Do not use\n  // if concurrent execution is required.\n  console.log(event); // prints ['bar'] [42]\n}\n// Unreachable here\n```"
											},
											{
												"kind": "text",
												"text": "\n\nReturns an "
											},
											{
												"kind": "code",
												"text": "`AsyncIterator`"
											},
											{
												"kind": "text",
												"text": " that iterates "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": " events. It will throw\nif the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": " emits "
											},
											{
												"kind": "code",
												"text": "`'error'`"
											},
											{
												"kind": "text",
												"text": ". It removes all listeners when\nexiting the loop. The "
											},
											{
												"kind": "code",
												"text": "`value`"
											},
											{
												"kind": "text",
												"text": " returned by each iteration is an array\ncomposed of the emitted event arguments.\n\nAn "
											},
											{
												"kind": "code",
												"text": "`AbortSignal`"
											},
											{
												"kind": "text",
												"text": " can be used to cancel waiting on events:\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { on, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ac = new AbortController();\n\n(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo', { signal: ac.signal })) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n\nprocess.nextTick(() => ac.abort());\n```"
											},
											{
												"kind": "text",
												"text": "\n\nUse the "
											},
											{
												"kind": "code",
												"text": "`close`"
											},
											{
												"kind": "text",
												"text": " option to specify an array of event names that will end the iteration:\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { on, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ee = new EventEmitter();\n\n// Emit later on\nprocess.nextTick(() => {\n  ee.emit('foo', 'bar');\n  ee.emit('foo', 42);\n  ee.emit('close');\n});\n\nfor await (const event of on(ee, 'foo', { close: ['close'] })) {\n  console.log(event); // prints ['bar'] [42]\n}\n// the loop will exit after 'close' is emitted\nconsole.log('done'); // prints 'done'\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v13.6.0, v12.16.0"
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An "
													},
													{
														"kind": "code",
														"text": "`AsyncIterator`"
													},
													{
														"kind": "text",
														"text": " that iterates "
													},
													{
														"kind": "code",
														"text": "`eventName`"
													},
													{
														"kind": "text",
														"text": " events emitted by the "
													},
													{
														"kind": "code",
														"text": "`emitter`"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 308,
											"character": 15,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L308"
										}
									],
									"parameters": [
										{
											"id": 551,
											"name": "emitter",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "@types/node",
													"packagePath": "web-globals/events.d.ts",
													"qualifiedName": "__global.EventTarget"
												},
												"name": "EventTarget",
												"package": "@types/node",
												"qualifiedName": "__global.EventTarget"
											}
										},
										{
											"id": 552,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 553,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "@types/node",
													"packagePath": "events.d.ts",
													"qualifiedName": "StaticEventEmitterIteratorOptions"
												},
												"name": "StaticEventEmitterIteratorOptions",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@types/node",
											"packagePath": "compatibility/iterators.d.ts",
											"qualifiedName": "NodeJS.AsyncIterator"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										],
										"name": "AsyncIterator",
										"package": "@types/node",
										"qualifiedName": "NodeJS.AsyncIterator"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.on"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.on"
							}
						},
						{
							"id": 536,
							"name": "once",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isStatic": true,
								"isExternal": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 217,
									"character": 15,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L217"
								},
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 222,
									"character": 15,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L222"
								}
							],
							"signatures": [
								{
									"id": 537,
									"name": "once",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Creates a "
											},
											{
												"kind": "code",
												"text": "`Promise`"
											},
											{
												"kind": "text",
												"text": " that is fulfilled when the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": " emits the given\nevent or that is rejected if the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": " emits "
											},
											{
												"kind": "code",
												"text": "`'error'`"
											},
											{
												"kind": "text",
												"text": " while waiting.\nThe "
											},
											{
												"kind": "code",
												"text": "`Promise`"
											},
											{
												"kind": "text",
												"text": " will resolve with an array of all the arguments emitted to the\ngiven event.\n\nThis method is intentionally generic and works with the web platform [EventTarget](https://dom.spec.whatwg.org/#interface-eventtarget) interface, which has no special"
											},
											{
												"kind": "code",
												"text": "`'error'`"
											},
											{
												"kind": "text",
												"text": " event\nsemantics and does not listen to the "
											},
											{
												"kind": "code",
												"text": "`'error'`"
											},
											{
												"kind": "text",
												"text": " event.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { once, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ee = new EventEmitter();\n\nprocess.nextTick(() => {\n  ee.emit('myevent', 42);\n});\n\nconst [value] = await once(ee, 'myevent');\nconsole.log(value);\n\nconst err = new Error('kaboom');\nprocess.nextTick(() => {\n  ee.emit('error', err);\n});\n\ntry {\n  await once(ee, 'myevent');\n} catch (err) {\n  console.error('error happened', err);\n}\n```"
											},
											{
												"kind": "text",
												"text": "\n\nThe special handling of the "
											},
											{
												"kind": "code",
												"text": "`'error'`"
											},
											{
												"kind": "text",
												"text": " event is only used when "
											},
											{
												"kind": "code",
												"text": "`events.once()`"
											},
											{
												"kind": "text",
												"text": " is used to wait for another event. If "
											},
											{
												"kind": "code",
												"text": "`events.once()`"
											},
											{
												"kind": "text",
												"text": " is used to wait for the\n'"
											},
											{
												"kind": "code",
												"text": "`error'`"
											},
											{
												"kind": "text",
												"text": " event itself, then it is treated as any other kind of event without\nspecial handling:\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { EventEmitter, once } from 'node:events';\n\nconst ee = new EventEmitter();\n\nonce(ee, 'error')\n  .then(([err]) => console.log('ok', err.message))\n  .catch((err) => console.error('error', err.message));\n\nee.emit('error', new Error('boom'));\n\n// Prints: ok boom\n```"
											},
											{
												"kind": "text",
												"text": "\n\nAn "
											},
											{
												"kind": "code",
												"text": "`AbortSignal`"
											},
											{
												"kind": "text",
												"text": " can be used to cancel waiting for the event:\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { EventEmitter, once } from 'node:events';\n\nconst ee = new EventEmitter();\nconst ac = new AbortController();\n\nasync function foo(emitter, event, signal) {\n  try {\n    await once(emitter, event, { signal });\n    console.log('event emitted!');\n  } catch (error) {\n    if (error.name === 'AbortError') {\n      console.error('Waiting for the event was canceled!');\n    } else {\n      console.error('There was an error', error.message);\n    }\n  }\n}\n\nfoo(ee, 'foo', ac.signal);\nac.abort(); // Abort waiting for the event\nee.emit('foo'); // Prints: Waiting for the event was canceled!\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v11.13.0, v10.16.0"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 217,
											"character": 15,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L217"
										}
									],
									"parameters": [
										{
											"id": 538,
											"name": "emitter",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "@types/node",
													"packagePath": "events.d.ts",
													"qualifiedName": "__global.NodeJS.EventEmitter"
												},
												"name": "EventEmitter",
												"package": "@types/node",
												"qualifiedName": "__global.NodeJS.EventEmitter"
											}
										},
										{
											"id": 539,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 540,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "@types/node",
													"packagePath": "events.d.ts",
													"qualifiedName": "StaticEventEmitterOptions"
												},
												"name": "StaticEventEmitterOptions",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.once"
									}
								},
								{
									"id": 541,
									"name": "once",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Creates a "
											},
											{
												"kind": "code",
												"text": "`Promise`"
											},
											{
												"kind": "text",
												"text": " that is fulfilled when the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": " emits the given\nevent or that is rejected if the "
											},
											{
												"kind": "code",
												"text": "`EventEmitter`"
											},
											{
												"kind": "text",
												"text": " emits "
											},
											{
												"kind": "code",
												"text": "`'error'`"
											},
											{
												"kind": "text",
												"text": " while waiting.\nThe "
											},
											{
												"kind": "code",
												"text": "`Promise`"
											},
											{
												"kind": "text",
												"text": " will resolve with an array of all the arguments emitted to the\ngiven event.\n\nThis method is intentionally generic and works with the web platform [EventTarget](https://dom.spec.whatwg.org/#interface-eventtarget) interface, which has no special"
											},
											{
												"kind": "code",
												"text": "`'error'`"
											},
											{
												"kind": "text",
												"text": " event\nsemantics and does not listen to the "
											},
											{
												"kind": "code",
												"text": "`'error'`"
											},
											{
												"kind": "text",
												"text": " event.\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { once, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ee = new EventEmitter();\n\nprocess.nextTick(() => {\n  ee.emit('myevent', 42);\n});\n\nconst [value] = await once(ee, 'myevent');\nconsole.log(value);\n\nconst err = new Error('kaboom');\nprocess.nextTick(() => {\n  ee.emit('error', err);\n});\n\ntry {\n  await once(ee, 'myevent');\n} catch (err) {\n  console.error('error happened', err);\n}\n```"
											},
											{
												"kind": "text",
												"text": "\n\nThe special handling of the "
											},
											{
												"kind": "code",
												"text": "`'error'`"
											},
											{
												"kind": "text",
												"text": " event is only used when "
											},
											{
												"kind": "code",
												"text": "`events.once()`"
											},
											{
												"kind": "text",
												"text": " is used to wait for another event. If "
											},
											{
												"kind": "code",
												"text": "`events.once()`"
											},
											{
												"kind": "text",
												"text": " is used to wait for the\n'"
											},
											{
												"kind": "code",
												"text": "`error'`"
											},
											{
												"kind": "text",
												"text": " event itself, then it is treated as any other kind of event without\nspecial handling:\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { EventEmitter, once } from 'node:events';\n\nconst ee = new EventEmitter();\n\nonce(ee, 'error')\n  .then(([err]) => console.log('ok', err.message))\n  .catch((err) => console.error('error', err.message));\n\nee.emit('error', new Error('boom'));\n\n// Prints: ok boom\n```"
											},
											{
												"kind": "text",
												"text": "\n\nAn "
											},
											{
												"kind": "code",
												"text": "`AbortSignal`"
											},
											{
												"kind": "text",
												"text": " can be used to cancel waiting for the event:\n\n"
											},
											{
												"kind": "code",
												"text": "```js\nimport { EventEmitter, once } from 'node:events';\n\nconst ee = new EventEmitter();\nconst ac = new AbortController();\n\nasync function foo(emitter, event, signal) {\n  try {\n    await once(emitter, event, { signal });\n    console.log('event emitted!');\n  } catch (error) {\n    if (error.name === 'AbortError') {\n      console.error('Waiting for the event was canceled!');\n    } else {\n      console.error('There was an error', error.message);\n    }\n  }\n}\n\nfoo(ee, 'foo', ac.signal);\nac.abort(); // Abort waiting for the event\nee.emit('foo'); // Prints: Waiting for the event was canceled!\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v11.13.0, v10.16.0"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 222,
											"character": 15,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L222"
										}
									],
									"parameters": [
										{
											"id": 542,
											"name": "emitter",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "@types/node",
													"packagePath": "web-globals/events.d.ts",
													"qualifiedName": "__global.EventTarget"
												},
												"name": "EventTarget",
												"package": "@types/node",
												"qualifiedName": "__global.EventTarget"
											}
										},
										{
											"id": 543,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 544,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "@types/node",
													"packagePath": "events.d.ts",
													"qualifiedName": "StaticEventEmitterOptions"
												},
												"name": "StaticEventEmitterOptions",
												"package": "@types/node"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.once"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.once"
							}
						},
						{
							"id": 565,
							"name": "setMaxListeners",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isStatic": true,
								"isExternal": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 402,
									"character": 15,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L402"
								}
							],
							"signatures": [
								{
									"id": 566,
									"name": "setMaxListeners",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true,
										"isInherited": true
									},
									"comment": {
										"summary": [
											{
												"kind": "code",
												"text": "```js\nimport { setMaxListeners, EventEmitter } from 'node:events';\n\nconst target = new EventTarget();\nconst emitter = new EventEmitter();\n\nsetMaxListeners(5, target, emitter);\n```"
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "v15.4.0"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/@types/node/events.d.ts",
											"line": 402,
											"character": 15,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/node_modules/@types/node/events.d.ts#L402"
										}
									],
									"parameters": [
										{
											"id": 567,
											"name": "n",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A non-negative number. The maximum number of listeners per "
													},
													{
														"kind": "code",
														"text": "`EventTarget`"
													},
													{
														"kind": "text",
														"text": " event."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 568,
											"name": "eventTargets",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true,
												"isRest": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Zero or more {EventTarget} or {EventEmitter} instances. If none are specified, "
													},
													{
														"kind": "code",
														"text": "`n`"
													},
													{
														"kind": "text",
														"text": " is set as the default max for all newly created {EventTarget} and {EventEmitter}\nobjects."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": {
																"packageName": "@types/node",
																"packagePath": "events.d.ts",
																"qualifiedName": "__global.NodeJS.EventEmitter"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": {
																		"packageName": "@types/node",
																		"packagePath": "events.d.ts",
																		"qualifiedName": "DefaultEventMap"
																	},
																	"name": "DefaultEventMap",
																	"package": "@types/node"
																}
															],
															"name": "EventEmitter",
															"package": "@types/node",
															"qualifiedName": "__global.NodeJS.EventEmitter"
														},
														{
															"type": "reference",
															"target": {
																"packageName": "@types/node",
																"packagePath": "web-globals/events.d.ts",
																"qualifiedName": "__global.EventTarget"
															},
															"name": "EventTarget",
															"package": "@types/node",
															"qualifiedName": "__global.EventTarget"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "EventEmitter.setMaxListeners"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.setMaxListeners"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								580
							]
						},
						{
							"title": "Properties",
							"children": [
								578,
								577,
								579,
								576
							]
						},
						{
							"title": "Methods",
							"children": [
								663,
								669,
								642,
								725,
								751,
								613,
								653,
								629,
								591,
								596,
								611,
								622,
								637,
								644,
								715,
								626,
								598,
								605,
								624,
								730,
								717,
								701,
								677,
								685,
								735,
								743,
								721,
								709,
								693,
								607,
								602,
								712,
								620,
								631,
								569,
								558,
								562,
								554,
								545,
								536,
								565
							]
						}
					],
					"sources": [
						{
							"fileName": "src/services/TestAutomationService.ts",
							"line": 39,
							"character": 13,
							"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L39"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"packageName": "@types/node",
								"packagePath": "events.d.ts",
								"qualifiedName": "EventEmitter"
							},
							"name": "EventEmitter",
							"package": "@types/node"
						}
					]
				},
				{
					"id": 524,
					"name": "TestExecution",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 533,
							"name": "current_scenario_index",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/TestAutomationService.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 529,
							"name": "end_time",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/services/TestAutomationService.ts",
									"line": 31,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L31"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 534,
							"name": "error_message",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/services/TestAutomationService.ts",
									"line": 36,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L36"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 525,
							"name": "execution_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/TestAutomationService.ts",
									"line": 27,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L27"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 532,
							"name": "failed_scenarios",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/TestAutomationService.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 531,
							"name": "passed_scenarios",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/TestAutomationService.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L33"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 526,
							"name": "scenarios",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/TestAutomationService.ts",
									"line": 28,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L28"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 514,
									"name": "TestScenario",
									"package": "multi-sonicator-io-backend"
								}
							}
						},
						{
							"id": 528,
							"name": "start_time",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/services/TestAutomationService.ts",
									"line": 30,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L30"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 527,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/TestAutomationService.ts",
									"line": 29,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L29"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "error"
									},
									{
										"type": "literal",
										"value": "pending"
									},
									{
										"type": "literal",
										"value": "running"
									},
									{
										"type": "literal",
										"value": "passed"
									},
									{
										"type": "literal",
										"value": "failed"
									},
									{
										"type": "literal",
										"value": "skipped"
									}
								]
							}
						},
						{
							"id": 530,
							"name": "total_scenarios",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/TestAutomationService.ts",
									"line": 32,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L32"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								533,
								529,
								534,
								525,
								532,
								531,
								526,
								528,
								527,
								530
							]
						}
					],
					"sources": [
						{
							"fileName": "src/services/TestAutomationService.ts",
							"line": 26,
							"character": 17,
							"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L26"
						}
					]
				},
				{
					"id": 514,
					"name": "TestScenario",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 516,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/TestAutomationService.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 522,
							"name": "duration_ms",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/services/TestAutomationService.ts",
									"line": 22,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L22"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 523,
							"name": "error_message",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/services/TestAutomationService.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L23"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 517,
							"name": "feature_file",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/TestAutomationService.ts",
									"line": 17,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L17"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 518,
							"name": "feature_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/services/TestAutomationService.ts",
									"line": 18,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L18"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 515,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/TestAutomationService.ts",
									"line": 15,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L15"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 521,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/TestAutomationService.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L21"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "error"
									},
									{
										"type": "literal",
										"value": "pending"
									},
									{
										"type": "literal",
										"value": "running"
									},
									{
										"type": "literal",
										"value": "passed"
									},
									{
										"type": "literal",
										"value": "failed"
									},
									{
										"type": "literal",
										"value": "skipped"
									}
								]
							}
						},
						{
							"id": 520,
							"name": "steps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/TestAutomationService.ts",
									"line": 20,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L20"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 507,
									"name": "TestStep",
									"package": "multi-sonicator-io-backend"
								}
							}
						},
						{
							"id": 519,
							"name": "tags",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/TestAutomationService.ts",
									"line": 19,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L19"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								516,
								522,
								523,
								517,
								518,
								515,
								521,
								520,
								519
							]
						}
					],
					"sources": [
						{
							"fileName": "src/services/TestAutomationService.ts",
							"line": 14,
							"character": 17,
							"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L14"
						}
					]
				},
				{
					"id": 507,
					"name": "TestStep",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 509,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/TestAutomationService.ts",
									"line": 7,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L7"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 511,
							"name": "duration_ms",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/services/TestAutomationService.ts",
									"line": 9,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L9"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 512,
							"name": "error_message",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/services/TestAutomationService.ts",
									"line": 10,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L10"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 513,
							"name": "pin_interactions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/TestAutomationService.ts",
									"line": 11,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L11"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 510,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/TestAutomationService.ts",
									"line": 8,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L8"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "error"
									},
									{
										"type": "literal",
										"value": "pending"
									},
									{
										"type": "literal",
										"value": "running"
									},
									{
										"type": "literal",
										"value": "passed"
									},
									{
										"type": "literal",
										"value": "failed"
									},
									{
										"type": "literal",
										"value": "skipped"
									}
								]
							}
						},
						{
							"id": 508,
							"name": "step_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/services/TestAutomationService.ts",
									"line": 6,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L6"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								509,
								511,
								512,
								513,
								510,
								508
							]
						}
					],
					"sources": [
						{
							"fileName": "src/services/TestAutomationService.ts",
							"line": 5,
							"character": 17,
							"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L5"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"children": [
						535
					]
				},
				{
					"title": "Interfaces",
					"children": [
						524,
						514,
						507
					]
				}
			],
			"sources": [
				{
					"fileName": "src/services/TestAutomationService.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/services/TestAutomationService.ts#L1"
				}
			]
		},
		{
			"id": 753,
			"name": "websocket/WebSocketHandler",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 758,
					"name": "WebSocketHandler",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 759,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "src/websocket/WebSocketHandler.ts",
									"line": 17,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/websocket/WebSocketHandler.ts#L17"
								}
							],
							"signatures": [
								{
									"id": 760,
									"name": "WebSocketHandler",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"sources": [
										{
											"fileName": "src/websocket/WebSocketHandler.ts",
											"line": 17,
											"character": 2,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/websocket/WebSocketHandler.ts#L17"
										}
									],
									"parameters": [
										{
											"id": 761,
											"name": "hardwareInterface",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 22,
												"name": "HardwareInterface",
												"package": "multi-sonicator-io-backend"
											}
										},
										{
											"id": 762,
											"name": "testAutomationService",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 535,
												"name": "TestAutomationService",
												"package": "multi-sonicator-io-backend"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 758,
										"name": "WebSocketHandler",
										"package": "multi-sonicator-io-backend"
									}
								}
							]
						},
						{
							"id": 799,
							"name": "getClientCount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "src/websocket/WebSocketHandler.ts",
									"line": 355,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/websocket/WebSocketHandler.ts#L355"
								}
							],
							"signatures": [
								{
									"id": 800,
									"name": "getClientCount",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "src/websocket/WebSocketHandler.ts",
											"line": 355,
											"character": 2,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/websocket/WebSocketHandler.ts#L355"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						},
						{
							"id": 774,
							"name": "handleConnection",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "src/websocket/WebSocketHandler.ts",
									"line": 170,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/websocket/WebSocketHandler.ts#L170"
								}
							],
							"signatures": [
								{
									"id": 775,
									"name": "handleConnection",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "src/websocket/WebSocketHandler.ts",
											"line": 170,
											"character": 2,
											"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/websocket/WebSocketHandler.ts#L170"
										}
									],
									"parameters": [
										{
											"id": 776,
											"name": "ws",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "@types/ws",
													"packagePath": "index.d.ts",
													"qualifiedName": "WebSocket.WebSocket"
												},
												"name": "WebSocket",
												"package": "@types/ws",
												"qualifiedName": "WebSocket.WebSocket"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								759
							]
						},
						{
							"title": "Methods",
							"children": [
								799,
								774
							]
						}
					],
					"sources": [
						{
							"fileName": "src/websocket/WebSocketHandler.ts",
							"line": 11,
							"character": 13,
							"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/websocket/WebSocketHandler.ts#L11"
						}
					]
				},
				{
					"id": 754,
					"name": "WebSocketMessage",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 756,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/websocket/WebSocketHandler.ts",
									"line": 7,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/websocket/WebSocketHandler.ts#L7"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 757,
							"name": "timestamp",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/websocket/WebSocketHandler.ts",
									"line": 8,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/websocket/WebSocketHandler.ts#L8"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 755,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "src/websocket/WebSocketHandler.ts",
									"line": 6,
									"character": 2,
									"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/websocket/WebSocketHandler.ts#L6"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								756,
								757,
								755
							]
						}
					],
					"sources": [
						{
							"fileName": "src/websocket/WebSocketHandler.ts",
							"line": 5,
							"character": 17,
							"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/websocket/WebSocketHandler.ts#L5"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"children": [
						758
					]
				},
				{
					"title": "Interfaces",
					"children": [
						754
					]
				}
			],
			"sources": [
				{
					"fileName": "src/websocket/WebSocketHandler.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/Cannasol-Tech/multi-sonicator-io/blob/2792fb581055f7f13a7e5c5fd567281654de52a3/web-ui/backend/src/websocket/WebSocketHandler.ts#L1"
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"children": [
				1,
				282,
				446,
				445,
				452,
				453,
				454,
				506,
				753
			]
		}
	],
	"packageName": "multi-sonicator-io-backend",
	"symbolIdMap": {
		"1": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": ""
		},
		"2": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "PinState"
		},
		"3": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "PinState.pin"
		},
		"4": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "PinState.signal"
		},
		"5": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "PinState.direction"
		},
		"6": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "PinState.state"
		},
		"7": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "PinState.timestamp"
		},
		"8": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "PinState.frequency"
		},
		"9": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "PinState.frequencyDisplay"
		},
		"10": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "PinState.operatingFrequency"
		},
		"11": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "PinState.enabled"
		},
		"12": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "PinState.isActive"
		},
		"13": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "HardwareCommand"
		},
		"14": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "HardwareCommand.command"
		},
		"15": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "HardwareCommand.args"
		},
		"16": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "HardwareCommand.expectResponse"
		},
		"17": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "HardwareResponse"
		},
		"18": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "HardwareResponse.success"
		},
		"19": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "HardwareResponse.data"
		},
		"20": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "HardwareResponse.error"
		},
		"21": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "HardwareResponse.timestamp"
		},
		"22": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "HardwareInterface"
		},
		"23": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "EventEmitter.once"
		},
		"24": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "EventEmitter.once"
		},
		"25": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "emitter"
		},
		"26": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "eventName"
		},
		"27": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "options"
		},
		"28": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "EventEmitter.once"
		},
		"29": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "emitter"
		},
		"30": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "eventName"
		},
		"31": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "options"
		},
		"32": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "EventEmitter.on"
		},
		"33": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "EventEmitter.on"
		},
		"34": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "emitter"
		},
		"35": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "eventName"
		},
		"36": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "options"
		},
		"37": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "EventEmitter.on"
		},
		"38": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "emitter"
		},
		"39": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "eventName"
		},
		"40": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "options"
		},
		"41": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "EventEmitter.listenerCount"
		},
		"42": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "EventEmitter.listenerCount"
		},
		"43": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "emitter"
		},
		"44": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "eventName"
		},
		"45": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "EventEmitter.getEventListeners"
		},
		"46": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "EventEmitter.getEventListeners"
		},
		"47": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "emitter"
		},
		"48": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "name"
		},
		"49": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "EventEmitter.getMaxListeners"
		},
		"50": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "EventEmitter.getMaxListeners"
		},
		"51": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "emitter"
		},
		"52": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "EventEmitter.setMaxListeners"
		},
		"53": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "EventEmitter.setMaxListeners"
		},
		"54": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "n"
		},
		"55": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "eventTargets"
		},
		"56": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "EventEmitter.addAbortListener"
		},
		"57": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "EventEmitter.addAbortListener"
		},
		"58": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "signal"
		},
		"59": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "resource"
		},
		"60": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__type"
		},
		"61": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__type"
		},
		"62": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "event"
		},
		"63": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "EventEmitter.errorMonitor"
		},
		"64": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "EventEmitter.captureRejectionSymbol"
		},
		"65": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "EventEmitter.captureRejections"
		},
		"66": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "EventEmitter.defaultMaxListeners"
		},
		"67": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "HardwareInterface.__constructor"
		},
		"68": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "HardwareInterface"
		},
		"105": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "HardwareInterface.initialize"
		},
		"106": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "HardwareInterface.initialize"
		},
		"122": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "HardwareInterface.sendCommand"
		},
		"123": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "HardwareInterface.sendCommand"
		},
		"124": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "command"
		},
		"125": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "HardwareInterface.getPinStates"
		},
		"126": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "HardwareInterface.getPinStates"
		},
		"127": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "HardwareInterface.getSerialPort"
		},
		"128": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "HardwareInterface.getSerialPort"
		},
		"131": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "HardwareInterface.reconnect"
		},
		"132": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "HardwareInterface.reconnect"
		},
		"133": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "HardwareInterface.retryConnection"
		},
		"134": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "HardwareInterface.retryConnection"
		},
		"135": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "maxAttempts"
		},
		"136": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "delayMs"
		},
		"137": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "HardwareInterface.disconnect"
		},
		"138": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "HardwareInterface.disconnect"
		},
		"139": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "HardwareInterface.getConfiguration"
		},
		"140": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "HardwareInterface.getConfiguration"
		},
		"141": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "__object"
		},
		"142": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "__object.sonicator4"
		},
		"143": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "__object"
		},
		"144": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "__object.operatingFrequencyKHz"
		},
		"145": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "__object.outputFrequencyKHz"
		},
		"146": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "__object.enabled"
		},
		"147": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "__object.manualMode"
		},
		"148": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "__object.manualFrequencyKHz"
		},
		"149": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "__object.testHarness"
		},
		"150": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "__object"
		},
		"151": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "__object.pinMapping"
		},
		"152": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "__object"
		},
		"153": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "__object.FREQ_DIV10_4"
		},
		"154": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "__object.FREQ_LOCK_4"
		},
		"155": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "__object.OVERLOAD_4"
		},
		"156": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "__object.START_4"
		},
		"157": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "__object.RESET_4"
		},
		"158": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "__object.POWER_SENSE_4"
		},
		"159": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "__object.AMPLITUDE_ALL"
		},
		"160": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "__object.UART_TXD"
		},
		"161": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "__object.STATUS_LED"
		},
		"162": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "HardwareInterface.updateConfiguration"
		},
		"163": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "HardwareInterface.updateConfiguration"
		},
		"164": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "newConfig"
		},
		"165": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "__type"
		},
		"166": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "__type.success"
		},
		"167": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "__type.config"
		},
		"168": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "HardwareInterface.ping"
		},
		"169": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "HardwareInterface.ping"
		},
		"170": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "__type"
		},
		"171": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "__type.success"
		},
		"172": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "__type.data"
		},
		"173": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "__type.error"
		},
		"174": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "__type.responseTime"
		},
		"175": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "HardwareInterface.getInfo"
		},
		"176": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "HardwareInterface.getInfo"
		},
		"177": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "__type"
		},
		"178": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "__type.success"
		},
		"179": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "__type.data"
		},
		"180": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "__type.error"
		},
		"181": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "HardwareInterface.getStatus"
		},
		"182": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "HardwareInterface.getStatus"
		},
		"183": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "sonicator"
		},
		"184": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "__type"
		},
		"185": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "__type.success"
		},
		"186": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "__type.data"
		},
		"187": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "__type.error"
		},
		"188": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "HardwareInterface.isConnected"
		},
		"189": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "HardwareInterface.isConnected"
		},
		"190": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "HardwareInterface.getPortPath"
		},
		"191": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/adapters/HardwareInterface.ts",
			"qualifiedName": "HardwareInterface.getPortPath"
		},
		"192": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "EventEmitter.[captureRejectionSymbol]"
		},
		"193": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "EventEmitter.[captureRejectionSymbol]"
		},
		"194": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "K"
		},
		"195": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "error"
		},
		"196": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "event"
		},
		"197": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "args"
		},
		"198": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.addListener"
		},
		"199": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.addListener"
		},
		"200": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "K"
		},
		"201": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "eventName"
		},
		"202": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "listener"
		},
		"203": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__type"
		},
		"204": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__type"
		},
		"205": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "args"
		},
		"206": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.on"
		},
		"207": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.on"
		},
		"208": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "K"
		},
		"209": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "eventName"
		},
		"210": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "listener"
		},
		"211": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__type"
		},
		"212": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__type"
		},
		"213": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "args"
		},
		"214": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.once"
		},
		"215": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.once"
		},
		"216": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "K"
		},
		"217": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "eventName"
		},
		"218": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "listener"
		},
		"219": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__type"
		},
		"220": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__type"
		},
		"221": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "args"
		},
		"222": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.removeListener"
		},
		"223": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.removeListener"
		},
		"224": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "K"
		},
		"225": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "eventName"
		},
		"226": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "listener"
		},
		"227": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__type"
		},
		"228": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__type"
		},
		"229": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "args"
		},
		"230": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.off"
		},
		"231": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.off"
		},
		"232": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "K"
		},
		"233": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "eventName"
		},
		"234": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "listener"
		},
		"235": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__type"
		},
		"236": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__type"
		},
		"237": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "args"
		},
		"238": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.removeAllListeners"
		},
		"239": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.removeAllListeners"
		},
		"240": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "eventName"
		},
		"241": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.setMaxListeners"
		},
		"242": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.setMaxListeners"
		},
		"243": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "n"
		},
		"244": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.getMaxListeners"
		},
		"245": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.getMaxListeners"
		},
		"246": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.listeners"
		},
		"247": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.listeners"
		},
		"248": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "K"
		},
		"249": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "eventName"
		},
		"250": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.rawListeners"
		},
		"251": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.rawListeners"
		},
		"252": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "K"
		},
		"253": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "eventName"
		},
		"254": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.emit"
		},
		"255": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.emit"
		},
		"256": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "K"
		},
		"257": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "eventName"
		},
		"258": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "args"
		},
		"259": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.listenerCount"
		},
		"260": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.listenerCount"
		},
		"261": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "K"
		},
		"262": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "eventName"
		},
		"263": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "listener"
		},
		"264": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.prependListener"
		},
		"265": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.prependListener"
		},
		"266": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "K"
		},
		"267": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "eventName"
		},
		"268": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "listener"
		},
		"269": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__type"
		},
		"270": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__type"
		},
		"271": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "args"
		},
		"272": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.prependOnceListener"
		},
		"273": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.prependOnceListener"
		},
		"274": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "K"
		},
		"275": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "eventName"
		},
		"276": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "listener"
		},
		"277": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__type"
		},
		"278": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__type"
		},
		"279": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "args"
		},
		"280": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.eventNames"
		},
		"281": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.eventNames"
		},
		"282": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": ""
		},
		"283": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "HardwarePin"
		},
		"284": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "HardwarePin.pin"
		},
		"285": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "HardwarePin.signal"
		},
		"286": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "HardwarePin.direction"
		},
		"287": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "HardwarePin.sonicator"
		},
		"288": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "HardwarePin.function"
		},
		"289": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "HardwarePin.scaling"
		},
		"290": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "HarnessConnection"
		},
		"291": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "HarnessConnection.dut_pin"
		},
		"292": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "HarnessConnection.signal"
		},
		"293": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "HarnessConnection.direction"
		},
		"294": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "HarnessConnection.sonicator"
		},
		"295": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "SonicatorChannel"
		},
		"296": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "SonicatorChannel.id"
		},
		"297": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "SonicatorChannel.name"
		},
		"298": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "SonicatorChannel.db9_connector"
		},
		"299": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "SonicatorChannel.power_range"
		},
		"300": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "SonicatorChannel.frequency_range"
		},
		"301": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "SonicatorChannel.amplitude_range"
		},
		"302": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "SonicatorChannel.status"
		},
		"303": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "TestCapability"
		},
		"304": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "TestCapability.name"
		},
		"305": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "TestCapability.description"
		},
		"306": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "TestCapability.pins"
		},
		"307": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "TestCapability.supported"
		},
		"308": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "TestCapability.note"
		},
		"309": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "HardwareConfig"
		},
		"310": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "HardwareConfig.project"
		},
		"311": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type"
		},
		"312": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.name"
		},
		"313": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.description"
		},
		"314": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.version"
		},
		"315": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "HardwareConfig.dut"
		},
		"316": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type"
		},
		"317": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.microcontroller"
		},
		"318": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type"
		},
		"319": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.type"
		},
		"320": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.package"
		},
		"321": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.clock_frequency"
		},
		"322": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.voltage"
		},
		"323": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.manufacturer"
		},
		"324": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.pins"
		},
		"325": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "HardwareConfig.harness"
		},
		"326": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type"
		},
		"327": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.type"
		},
		"328": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.microcontroller"
		},
		"329": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.clock_frequency"
		},
		"330": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.voltage"
		},
		"331": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.connections"
		},
		"332": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "HardwareConfig.sonicators"
		},
		"333": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type"
		},
		"334": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.count"
		},
		"335": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.channels"
		},
		"336": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "HardwareConfig.communication"
		},
		"337": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type"
		},
		"338": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.modbus"
		},
		"339": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type"
		},
		"340": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.slave_id"
		},
		"341": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.baud_rate"
		},
		"342": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.data_bits"
		},
		"343": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.stop_bits"
		},
		"344": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.parity"
		},
		"345": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.timeout_ms"
		},
		"346": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.serial"
		},
		"347": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type"
		},
		"348": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.port"
		},
		"349": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.baud_rate"
		},
		"350": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.timeout_ms"
		},
		"351": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "HardwareConfig.test_capabilities"
		},
		"352": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "HardwareConfig.limitations"
		},
		"353": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type"
		},
		"354": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.current_prototype"
		},
		"355": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.supported_channels"
		},
		"356": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.unsupported_channels"
		},
		"357": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.expansion_notes"
		},
		"358": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "HardwareConfig.environment"
		},
		"359": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type"
		},
		"360": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.simulation_mode"
		},
		"361": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.hardware_timeout_ms"
		},
		"362": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.command_timeout_ms"
		},
		"363": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.log_level"
		},
		"364": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "ConfigService"
		},
		"365": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "ConfigService.__constructor"
		},
		"366": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "ConfigService"
		},
		"367": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "configPath"
		},
		"370": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "ConfigService.loadConfig"
		},
		"371": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "ConfigService.loadConfig"
		},
		"372": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "ConfigService.getConfig"
		},
		"373": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "ConfigService.getConfig"
		},
		"374": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "ConfigService.getDUTPinBySignal"
		},
		"375": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "ConfigService.getDUTPinBySignal"
		},
		"376": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "signal"
		},
		"377": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type"
		},
		"378": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.pinName"
		},
		"379": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.pin"
		},
		"380": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "ConfigService.getHarnessConnection"
		},
		"381": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "ConfigService.getHarnessConnection"
		},
		"382": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "arduinoPin"
		},
		"383": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "ConfigService.getSonicatorChannel"
		},
		"384": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "ConfigService.getSonicatorChannel"
		},
		"385": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "channelId"
		},
		"386": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "ConfigService.getConnectedSonicators"
		},
		"387": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "ConfigService.getConnectedSonicators"
		},
		"388": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "ConfigService.getSupportedCapabilities"
		},
		"389": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "ConfigService.getSupportedCapabilities"
		},
		"390": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "ConfigService.isCapabilitySupported"
		},
		"391": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "ConfigService.isCapabilitySupported"
		},
		"392": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "capabilityName"
		},
		"393": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "ConfigService.getModbusConfig"
		},
		"394": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "ConfigService.getModbusConfig"
		},
		"395": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type"
		},
		"396": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.slave_id"
		},
		"397": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.baud_rate"
		},
		"398": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.data_bits"
		},
		"399": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.stop_bits"
		},
		"400": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.parity"
		},
		"401": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.timeout_ms"
		},
		"402": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "ConfigService.getSerialConfig"
		},
		"403": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "ConfigService.getSerialConfig"
		},
		"404": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type"
		},
		"405": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.port"
		},
		"406": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.baud_rate"
		},
		"407": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.timeout_ms"
		},
		"408": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "ConfigService.isSimulationMode"
		},
		"409": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "ConfigService.isSimulationMode"
		},
		"410": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "ConfigService.setSimulationMode"
		},
		"411": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "ConfigService.setSimulationMode"
		},
		"412": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "enabled"
		},
		"413": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "ConfigService.getTimeouts"
		},
		"414": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "ConfigService.getTimeouts"
		},
		"415": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__object"
		},
		"416": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__object.hardware"
		},
		"417": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__object.command"
		},
		"418": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "ConfigService.getPinMapping"
		},
		"419": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "ConfigService.getPinMapping"
		},
		"420": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "ConfigService.validateConfig"
		},
		"421": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "ConfigService.validateConfig"
		},
		"422": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type"
		},
		"423": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.valid"
		},
		"424": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__type.errors"
		},
		"425": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "ConfigService.getConfigSummary"
		},
		"426": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "ConfigService.getConfigSummary"
		},
		"427": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__object"
		},
		"428": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__object.project"
		},
		"429": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__object.version"
		},
		"430": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__object.dut"
		},
		"431": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__object.harness"
		},
		"432": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__object.sonicators"
		},
		"433": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__object"
		},
		"434": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__object.total"
		},
		"435": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__object.connected"
		},
		"436": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__object.channels"
		},
		"437": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__object.capabilities"
		},
		"438": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__object"
		},
		"439": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__object.total"
		},
		"440": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__object.supported"
		},
		"441": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__object.names"
		},
		"442": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__object.simulation_mode"
		},
		"443": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "__object.limitations"
		},
		"444": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/config/ConfigService.ts",
			"qualifiedName": "configService"
		},
		"445": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/routes/config.ts",
			"qualifiedName": ""
		},
		"446": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/routes/index.ts",
			"qualifiedName": ""
		},
		"447": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/routes/index.ts",
			"qualifiedName": "setupRoutes"
		},
		"448": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/routes/index.ts",
			"qualifiedName": "setupRoutes"
		},
		"449": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/routes/index.ts",
			"qualifiedName": "app"
		},
		"450": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/routes/index.ts",
			"qualifiedName": "hardwareInterface"
		},
		"451": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/routes/index.ts",
			"qualifiedName": "testAutomationService"
		},
		"452": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/routes/tests.ts",
			"qualifiedName": ""
		},
		"453": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/server.ts",
			"qualifiedName": ""
		},
		"454": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/HardwareTestService.ts",
			"qualifiedName": ""
		},
		"455": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/HardwareTestService.ts",
			"qualifiedName": "TestResult"
		},
		"456": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/HardwareTestService.ts",
			"qualifiedName": "TestResult.testName"
		},
		"457": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/HardwareTestService.ts",
			"qualifiedName": "TestResult.status"
		},
		"458": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/HardwareTestService.ts",
			"qualifiedName": "TestResult.duration"
		},
		"459": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/HardwareTestService.ts",
			"qualifiedName": "TestResult.message"
		},
		"460": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/HardwareTestService.ts",
			"qualifiedName": "TestResult.data"
		},
		"461": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/HardwareTestService.ts",
			"qualifiedName": "TestSuite"
		},
		"462": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/HardwareTestService.ts",
			"qualifiedName": "TestSuite.name"
		},
		"463": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/HardwareTestService.ts",
			"qualifiedName": "TestSuite.description"
		},
		"464": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/HardwareTestService.ts",
			"qualifiedName": "TestSuite.tests"
		},
		"465": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/HardwareTestService.ts",
			"qualifiedName": "TestSuite.duration"
		},
		"466": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/HardwareTestService.ts",
			"qualifiedName": "TestSuite.passed"
		},
		"467": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/HardwareTestService.ts",
			"qualifiedName": "TestSuite.failed"
		},
		"468": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/HardwareTestService.ts",
			"qualifiedName": "TestSuite.skipped"
		},
		"469": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/HardwareTestService.ts",
			"qualifiedName": "HardwareTestService"
		},
		"472": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/HardwareTestService.ts",
			"qualifiedName": "HardwareTestService.runConfigurationTests"
		},
		"473": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/HardwareTestService.ts",
			"qualifiedName": "HardwareTestService.runConfigurationTests"
		},
		"474": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/HardwareTestService.ts",
			"qualifiedName": "HardwareTestService.runSonicatorTests"
		},
		"475": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/HardwareTestService.ts",
			"qualifiedName": "HardwareTestService.runSonicatorTests"
		},
		"476": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/HardwareTestService.ts",
			"qualifiedName": "channelId"
		},
		"477": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/HardwareTestService.ts",
			"qualifiedName": "HardwareTestService.runModbusTests"
		},
		"478": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/HardwareTestService.ts",
			"qualifiedName": "HardwareTestService.runModbusTests"
		},
		"505": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/HardwareTestService.ts",
			"qualifiedName": "hardwareTestService"
		},
		"506": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": ""
		},
		"507": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestStep"
		},
		"508": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestStep.step_type"
		},
		"509": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestStep.description"
		},
		"510": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestStep.status"
		},
		"511": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestStep.duration_ms"
		},
		"512": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestStep.error_message"
		},
		"513": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestStep.pin_interactions"
		},
		"514": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestScenario"
		},
		"515": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestScenario.name"
		},
		"516": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestScenario.description"
		},
		"517": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestScenario.feature_file"
		},
		"518": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestScenario.feature_name"
		},
		"519": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestScenario.tags"
		},
		"520": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestScenario.steps"
		},
		"521": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestScenario.status"
		},
		"522": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestScenario.duration_ms"
		},
		"523": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestScenario.error_message"
		},
		"524": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestExecution"
		},
		"525": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestExecution.execution_id"
		},
		"526": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestExecution.scenarios"
		},
		"527": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestExecution.status"
		},
		"528": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestExecution.start_time"
		},
		"529": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestExecution.end_time"
		},
		"530": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestExecution.total_scenarios"
		},
		"531": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestExecution.passed_scenarios"
		},
		"532": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestExecution.failed_scenarios"
		},
		"533": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestExecution.current_scenario_index"
		},
		"534": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestExecution.error_message"
		},
		"535": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestAutomationService"
		},
		"536": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "EventEmitter.once"
		},
		"537": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "EventEmitter.once"
		},
		"538": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "emitter"
		},
		"539": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "eventName"
		},
		"540": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "options"
		},
		"541": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "EventEmitter.once"
		},
		"542": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "emitter"
		},
		"543": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "eventName"
		},
		"544": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "options"
		},
		"545": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "EventEmitter.on"
		},
		"546": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "EventEmitter.on"
		},
		"547": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "emitter"
		},
		"548": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "eventName"
		},
		"549": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "options"
		},
		"550": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "EventEmitter.on"
		},
		"551": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "emitter"
		},
		"552": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "eventName"
		},
		"553": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "options"
		},
		"554": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "EventEmitter.listenerCount"
		},
		"555": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "EventEmitter.listenerCount"
		},
		"556": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "emitter"
		},
		"557": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "eventName"
		},
		"558": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "EventEmitter.getEventListeners"
		},
		"559": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "EventEmitter.getEventListeners"
		},
		"560": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "emitter"
		},
		"561": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "name"
		},
		"562": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "EventEmitter.getMaxListeners"
		},
		"563": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "EventEmitter.getMaxListeners"
		},
		"564": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "emitter"
		},
		"565": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "EventEmitter.setMaxListeners"
		},
		"566": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "EventEmitter.setMaxListeners"
		},
		"567": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "n"
		},
		"568": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "eventTargets"
		},
		"569": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "EventEmitter.addAbortListener"
		},
		"570": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "EventEmitter.addAbortListener"
		},
		"571": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "signal"
		},
		"572": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "resource"
		},
		"573": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__type"
		},
		"574": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__type"
		},
		"575": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "event"
		},
		"576": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "EventEmitter.errorMonitor"
		},
		"577": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "EventEmitter.captureRejectionSymbol"
		},
		"578": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "EventEmitter.captureRejections"
		},
		"579": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "EventEmitter.defaultMaxListeners"
		},
		"580": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestAutomationService.__constructor"
		},
		"581": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestAutomationService"
		},
		"591": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestAutomationService.getAvailableScenarios"
		},
		"592": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestAutomationService.getAvailableScenarios"
		},
		"596": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestAutomationService.getAvailableTags"
		},
		"597": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestAutomationService.getAvailableTags"
		},
		"598": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestAutomationService.getScenariosByTags"
		},
		"599": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestAutomationService.getScenariosByTags"
		},
		"600": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "tags"
		},
		"601": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "useOrLogic"
		},
		"602": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestAutomationService.searchScenarios"
		},
		"603": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestAutomationService.searchScenarios"
		},
		"604": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "query"
		},
		"605": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestAutomationService.getTagPresets"
		},
		"606": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestAutomationService.getTagPresets"
		},
		"607": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestAutomationService.saveTagPreset"
		},
		"608": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestAutomationService.saveTagPreset"
		},
		"609": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "name"
		},
		"610": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "tags"
		},
		"611": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestAutomationService.getCategorizedTags"
		},
		"612": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestAutomationService.getCategorizedTags"
		},
		"613": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestAutomationService.executeScenarios"
		},
		"614": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestAutomationService.executeScenarios"
		},
		"615": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "scenarioNames"
		},
		"616": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "executionId"
		},
		"620": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestAutomationService.stopExecution"
		},
		"621": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestAutomationService.stopExecution"
		},
		"622": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestAutomationService.getCurrentExecution"
		},
		"623": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestAutomationService.getCurrentExecution"
		},
		"624": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestAutomationService.isExecutionInProgress"
		},
		"625": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestAutomationService.isExecutionInProgress"
		},
		"626": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestAutomationService.getScenariosByFeature"
		},
		"627": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestAutomationService.getScenariosByFeature"
		},
		"628": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "featureFiles"
		},
		"629": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestAutomationService.getAvailableFeatures"
		},
		"630": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestAutomationService.getAvailableFeatures"
		},
		"631": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestAutomationService.validateScenarios"
		},
		"632": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestAutomationService.validateScenarios"
		},
		"633": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "scenarioNames"
		},
		"634": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "__type"
		},
		"635": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "__type.valid"
		},
		"636": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "__type.missing"
		},
		"637": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestAutomationService.getExecutionHistory"
		},
		"638": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestAutomationService.getExecutionHistory"
		},
		"642": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestAutomationService.clearExecutionHistory"
		},
		"643": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestAutomationService.clearExecutionHistory"
		},
		"644": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestAutomationService.getExecutionStats"
		},
		"645": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestAutomationService.getExecutionStats"
		},
		"646": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "__type"
		},
		"647": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "__type.totalExecutions"
		},
		"648": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "__type.totalScenarios"
		},
		"649": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "__type.totalPassed"
		},
		"650": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "__type.totalFailed"
		},
		"651": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "__type.averageDuration"
		},
		"652": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "__type.successRate"
		},
		"653": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestAutomationService.exportExecutionResults"
		},
		"654": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "TestAutomationService.exportExecutionResults"
		},
		"655": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "executionId"
		},
		"656": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/services/TestAutomationService.ts",
			"qualifiedName": "format"
		},
		"663": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "EventEmitter.[captureRejectionSymbol]"
		},
		"664": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "EventEmitter.[captureRejectionSymbol]"
		},
		"665": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "K"
		},
		"666": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "error"
		},
		"667": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "event"
		},
		"668": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "args"
		},
		"669": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.addListener"
		},
		"670": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.addListener"
		},
		"671": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "K"
		},
		"672": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "eventName"
		},
		"673": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "listener"
		},
		"674": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__type"
		},
		"675": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__type"
		},
		"676": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "args"
		},
		"677": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.on"
		},
		"678": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.on"
		},
		"679": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "K"
		},
		"680": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "eventName"
		},
		"681": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "listener"
		},
		"682": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__type"
		},
		"683": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__type"
		},
		"684": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "args"
		},
		"685": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.once"
		},
		"686": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.once"
		},
		"687": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "K"
		},
		"688": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "eventName"
		},
		"689": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "listener"
		},
		"690": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__type"
		},
		"691": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__type"
		},
		"692": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "args"
		},
		"693": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.removeListener"
		},
		"694": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.removeListener"
		},
		"695": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "K"
		},
		"696": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "eventName"
		},
		"697": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "listener"
		},
		"698": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__type"
		},
		"699": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__type"
		},
		"700": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "args"
		},
		"701": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.off"
		},
		"702": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.off"
		},
		"703": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "K"
		},
		"704": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "eventName"
		},
		"705": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "listener"
		},
		"706": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__type"
		},
		"707": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__type"
		},
		"708": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "args"
		},
		"709": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.removeAllListeners"
		},
		"710": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.removeAllListeners"
		},
		"711": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "eventName"
		},
		"712": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.setMaxListeners"
		},
		"713": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.setMaxListeners"
		},
		"714": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "n"
		},
		"715": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.getMaxListeners"
		},
		"716": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.getMaxListeners"
		},
		"717": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.listeners"
		},
		"718": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.listeners"
		},
		"719": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "K"
		},
		"720": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "eventName"
		},
		"721": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.rawListeners"
		},
		"722": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.rawListeners"
		},
		"723": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "K"
		},
		"724": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "eventName"
		},
		"725": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.emit"
		},
		"726": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.emit"
		},
		"727": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "K"
		},
		"728": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "eventName"
		},
		"729": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "args"
		},
		"730": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.listenerCount"
		},
		"731": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.listenerCount"
		},
		"732": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "K"
		},
		"733": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "eventName"
		},
		"734": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "listener"
		},
		"735": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.prependListener"
		},
		"736": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.prependListener"
		},
		"737": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "K"
		},
		"738": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "eventName"
		},
		"739": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "listener"
		},
		"740": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__type"
		},
		"741": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__type"
		},
		"742": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "args"
		},
		"743": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.prependOnceListener"
		},
		"744": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.prependOnceListener"
		},
		"745": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "K"
		},
		"746": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "eventName"
		},
		"747": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "listener"
		},
		"748": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__type"
		},
		"749": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__type"
		},
		"750": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "args"
		},
		"751": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.eventNames"
		},
		"752": {
			"packageName": "@types/node",
			"packagePath": "events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.eventNames"
		},
		"753": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/websocket/WebSocketHandler.ts",
			"qualifiedName": ""
		},
		"754": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/websocket/WebSocketHandler.ts",
			"qualifiedName": "WebSocketMessage"
		},
		"755": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/websocket/WebSocketHandler.ts",
			"qualifiedName": "WebSocketMessage.type"
		},
		"756": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/websocket/WebSocketHandler.ts",
			"qualifiedName": "WebSocketMessage.data"
		},
		"757": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/websocket/WebSocketHandler.ts",
			"qualifiedName": "WebSocketMessage.timestamp"
		},
		"758": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/websocket/WebSocketHandler.ts",
			"qualifiedName": "WebSocketHandler"
		},
		"759": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/websocket/WebSocketHandler.ts",
			"qualifiedName": "WebSocketHandler.__constructor"
		},
		"760": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/websocket/WebSocketHandler.ts",
			"qualifiedName": "WebSocketHandler"
		},
		"761": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/websocket/WebSocketHandler.ts",
			"qualifiedName": "hardwareInterface"
		},
		"762": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/websocket/WebSocketHandler.ts",
			"qualifiedName": "testAutomationService"
		},
		"774": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/websocket/WebSocketHandler.ts",
			"qualifiedName": "WebSocketHandler.handleConnection"
		},
		"775": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/websocket/WebSocketHandler.ts",
			"qualifiedName": "WebSocketHandler.handleConnection"
		},
		"776": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/websocket/WebSocketHandler.ts",
			"qualifiedName": "ws"
		},
		"799": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/websocket/WebSocketHandler.ts",
			"qualifiedName": "WebSocketHandler.getClientCount"
		},
		"800": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/websocket/WebSocketHandler.ts",
			"qualifiedName": "WebSocketHandler.getClientCount"
		},
		"801": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/routes/config.ts",
			"qualifiedName": "router"
		},
		"802": {
			"packageName": "multi-sonicator-io-backend",
			"packagePath": "src/routes/tests.ts",
			"qualifiedName": "router"
		}
	},
	"files": {
		"entries": {
			"1": "src/adapters/HardwareInterface.ts",
			"2": "src/config/ConfigService.ts",
			"3": "src/routes/config.ts",
			"4": "src/routes/index.ts",
			"5": "src/routes/tests.ts",
			"6": "src/server.ts",
			"7": "src/services/HardwareTestService.ts",
			"8": "src/services/TestAutomationService.ts",
			"9": "src/websocket/WebSocketHandler.ts"
		},
		"reflections": {
			"1": 1,
			"2": 282,
			"3": 445,
			"4": 446,
			"5": 452,
			"6": 453,
			"7": 454,
			"8": 506,
			"9": 753
		}
	}
}
