<testsuite name="features.hil_pwm_generation.PWM Generation Hardware Verification" tests="6" errors="6" failures="0" skipped="0" time="6.029515" timestamp="2025-09-16T18:32:57.132648" hostname="Corbans-Mini.home"><testcase classname="features.hil_pwm_generation.PWM Generation Hardware Verification" name="Basic PWM output generation" status="cleanup_error" time="1.007966"><error type="UnknownError" message="">
<![CDATA[Traceback:
]]>
</error><system-out>
<![CDATA[
@scenario.begin

  @hil @hardware @pwm
  Scenario: Basic PWM output generation
    Given the HIL framework is connected to ATmega32A ... passed in 0.000s
    And the PWM subsystem is initialized ... failed in 1.008s
    And pin "AMPLITUDE_ALL" is configured for PWM output ... skipped in 0.000s
    When I set PWM on pin "AMPLITUDE_ALL" to 50% duty cycle at 1kHz ... skipped in 0.000s
    Then the HIL framework should measure approximately 50% duty cycle ... skipped in 0.000s
    And the frequency should be approximately 1000Hz Â± 10Hz ... skipped in 0.000s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
ðŸ”§ HIL scenario setup: Basic PWM output generation

âœ… HIL framework connected to ATmega32A

]]>
</system-out><system-err>
<![CDATA[
Captured stderr:


]]>
</system-err></testcase><testcase classname="features.hil_pwm_generation.PWM Generation Hardware Verification" name="PWM duty cycle variation" status="cleanup_error" time="1.007611"><error type="UnknownError" message="">
<![CDATA[Traceback:
]]>
</error><system-out>
<![CDATA[
@scenario.begin

  @hil @hardware @pwm
  Scenario: PWM duty cycle variation
    Given the HIL framework is connected to ATmega32A ... passed in 0.000s
    And the PWM subsystem is initialized ... failed in 1.008s
    And pin "AMPLITUDE_ALL" is configured for PWM output ... skipped in 0.000s
    When I set PWM duty cycle to 25% on pin "AMPLITUDE_ALL" ... skipped in 0.000s
    Then the measured duty cycle should be 25% Â± 2% ... skipped in 0.000s
    When I set PWM duty cycle to 75% on pin "AMPLITUDE_ALL" ... skipped in 0.000s
    Then the measured duty cycle should be 75% Â± 2% ... skipped in 0.000s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
ðŸ”§ HIL scenario setup: PWM duty cycle variation

âœ… HIL framework connected to ATmega32A

]]>
</system-out><system-err>
<![CDATA[
Captured stderr:


]]>
</system-err></testcase><testcase classname="features.hil_pwm_generation.PWM Generation Hardware Verification" name="PWM frequency accuracy" status="cleanup_error" time="1.005529"><error type="UnknownError" message="">
<![CDATA[Traceback:
]]>
</error><system-out>
<![CDATA[
@scenario.begin

  @hil @hardware @pwm
  Scenario: PWM frequency accuracy
    Given the HIL framework is connected to ATmega32A ... passed in 0.000s
    And the PWM subsystem is initialized ... failed in 1.005s
    And pin "AMPLITUDE_ALL" is configured for PWM output ... skipped in 0.000s
    When I set PWM frequency to 500Hz on pin "AMPLITUDE_ALL" ... skipped in 0.000s
    Then the measured frequency should be 500Hz Â± 5Hz ... skipped in 0.000s
    When I set PWM frequency to 2000Hz on pin "AMPLITUDE_ALL" ... skipped in 0.000s
    Then the measured frequency should be 2000Hz Â± 20Hz ... skipped in 0.000s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
ðŸ”§ HIL scenario setup: PWM frequency accuracy

âœ… HIL framework connected to ATmega32A

]]>
</system-out><system-err>
<![CDATA[
Captured stderr:


]]>
</system-err></testcase><testcase classname="features.hil_pwm_generation.PWM Generation Hardware Verification" name="PWM voltage levels" status="cleanup_error" time="1.001406"><error type="NoneType" message="None">
<![CDATA[
Failing step: Then the average voltage should be approximately 0V ... undefined in 0.000s
Location: test/acceptance/features/hil_pwm_generation.feature:34
None]]>
</error><system-out>
<![CDATA[
@scenario.begin

  @hil @hardware @pwm
  Scenario: PWM voltage levels
    Given the HIL framework is connected to ATmega32A ... passed in 0.000s
    And the PWM subsystem is initialized ... failed in 1.001s
    And pin "AMPLITUDE_ALL" is configured for PWM output ... skipped in 0.000s
    When I set PWM to 0% duty cycle on pin "AMPLITUDE_ALL" ... skipped in 0.000s
    Then the average voltage should be approximately 0V ... undefined in 0.000s
    When I set PWM to 100% duty cycle on pin "AMPLITUDE_ALL" ... skipped in 0.000s
    Then the average voltage should be approximately 5V ... undefined in 0.000s
    When I set PWM to 50% duty cycle on pin "AMPLITUDE_ALL" ... skipped in 0.000s
    Then the average voltage should be approximately 2.5V Â± 0.2V ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
ðŸ”§ HIL scenario setup: PWM voltage levels

âœ… HIL framework connected to ATmega32A

]]>
</system-out><system-err>
<![CDATA[
Captured stderr:


]]>
</system-err></testcase><testcase classname="features.hil_pwm_generation.PWM Generation Hardware Verification" name="PWM signal stability" status="cleanup_error" time="1.003874"><error type="UnknownError" message="">
<![CDATA[Traceback:
]]>
</error><system-out>
<![CDATA[
@scenario.begin

  @hil @hardware @pwm
  Scenario: PWM signal stability
    Given the HIL framework is connected to ATmega32A ... passed in 0.000s
    And the PWM subsystem is initialized ... failed in 1.004s
    And pin "AMPLITUDE_ALL" is configured for PWM output ... skipped in 0.000s
    When I set PWM to 60% duty cycle at 1kHz on pin "AMPLITUDE_ALL" ... skipped in 0.000s
    And I measure PWM for 10 seconds continuously ... skipped in 0.000s
    Then the duty cycle should remain stable within Â±1% ... skipped in 0.000s
    And the frequency should remain stable within Â±5Hz ... skipped in 0.000s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
ðŸ”§ HIL scenario setup: PWM signal stability

âœ… HIL framework connected to ATmega32A

]]>
</system-out><system-err>
<![CDATA[
Captured stderr:


]]>
</system-err></testcase><testcase classname="features.hil_pwm_generation.PWM Generation Hardware Verification" name="PWM disable and enable" status="cleanup_error" time="1.003129"><error type="UnknownError" message="">
<![CDATA[Traceback:
]]>
</error><system-out>
<![CDATA[
@scenario.begin

  @hil @hardware @pwm
  Scenario: PWM disable and enable
    Given the HIL framework is connected to ATmega32A ... passed in 0.000s
    And the PWM subsystem is initialized ... failed in 1.003s
    And pin "AMPLITUDE_ALL" is configured for PWM output ... skipped in 0.000s
    When PWM is enabled on pin "AMPLITUDE_ALL" with 40% duty cycle ... skipped in 0.000s
    Then I should measure PWM signal ... skipped in 0.000s
    When I disable PWM on pin "AMPLITUDE_ALL" ... skipped in 0.000s
    Then the pin should be in a static state ... skipped in 0.000s
    When I re-enable PWM with the same settings ... skipped in 0.000s
    Then I should measure the same PWM signal again ... skipped in 0.000s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
ðŸ”§ HIL scenario setup: PWM disable and enable

âœ… HIL framework connected to ATmega32A

]]>
</system-out><system-err>
<![CDATA[
Captured stderr:


]]>
</system-err></testcase></testsuite>