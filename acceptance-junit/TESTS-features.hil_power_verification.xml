<testsuite name="features.hil_power_verification.Power Supply and Electrical Verification" tests="6" errors="6" failures="0" skipped="0" time="0.0" timestamp="2025-09-16T18:32:51.090813" hostname="Corbans-Mini.home"><testcase classname="features.hil_power_verification.Power Supply and Electrical Verification" name="Input power supply verification" status="cleanup_error" time="0"><error type="NoneType" message="None">
<![CDATA[
Failing step: Given the HIL framework is connected ... undefined in 0.000s
Location: test/acceptance/features/hil_power_verification.feature:7
None]]>
</error><system-out>
<![CDATA[
@scenario.begin

  @hil @hardware @power
  Scenario: Input power supply verification
    Given the HIL framework is connected ... undefined in 0.000s
    And the power supply is enabled ... undefined in 0.000s
    And the ATmega32A target is powered ... skipped in 0.000s
    When I measure the input voltage ... undefined in 0.000s
    Then the 24V input should be 24.0V Â± 0.5V ... undefined in 0.000s
    And the input current should be within expected range ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
ðŸ”§ HIL scenario setup: Input power supply verification

]]>
</system-out></testcase><testcase classname="features.hil_power_verification.Power Supply and Electrical Verification" name="Regulated power rail verification" status="cleanup_error" time="0"><error type="NoneType" message="None">
<![CDATA[
Failing step: Given the HIL framework is connected ... undefined in 0.000s
Location: test/acceptance/features/hil_power_verification.feature:7
None]]>
</error><system-out>
<![CDATA[
@scenario.begin

  @hil @hardware @power
  Scenario: Regulated power rail verification
    Given the HIL framework is connected ... undefined in 0.000s
    And the power supply is enabled ... undefined in 0.000s
    And the ATmega32A target is powered ... skipped in 0.000s
    When I measure the regulated power rails ... undefined in 0.000s
    Then the 5V rail should be 5.0V Â± 0.1V ... skipped in 0.000s
    And the 3.3V rail should be 3.3V Â± 0.1V if present ... undefined in 0.000s
    And the ripple voltage should be less than 50mV peak-to-peak ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
ðŸ”§ HIL scenario setup: Regulated power rail verification

]]>
</system-out></testcase><testcase classname="features.hil_power_verification.Power Supply and Electrical Verification" name="Power supply load regulation" status="cleanup_error" time="0"><error type="NoneType" message="None">
<![CDATA[
Failing step: Given the HIL framework is connected ... undefined in 0.000s
Location: test/acceptance/features/hil_power_verification.feature:7
None]]>
</error><system-out>
<![CDATA[
@scenario.begin

  @hil @hardware @power
  Scenario: Power supply load regulation
    Given the HIL framework is connected ... undefined in 0.000s
    And the power supply is enabled ... undefined in 0.000s
    And the ATmega32A target is powered ... skipped in 0.000s
    When I apply varying loads to the 5V rail ... undefined in 0.000s
    Then the voltage should remain 5.0V Â± 0.1V ... undefined in 0.000s
    And the regulation should be maintained under all load conditions ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
ðŸ”§ HIL scenario setup: Power supply load regulation

]]>
</system-out></testcase><testcase classname="features.hil_power_verification.Power Supply and Electrical Verification" name="Crystal oscillator verification" status="cleanup_error" time="0"><error type="NoneType" message="None">
<![CDATA[
Failing step: Given the HIL framework is connected ... undefined in 0.000s
Location: test/acceptance/features/hil_power_verification.feature:7
None]]>
</error><system-out>
<![CDATA[
@scenario.begin

  @hil @hardware @power
  Scenario: Crystal oscillator verification
    Given the HIL framework is connected ... undefined in 0.000s
    And the power supply is enabled ... undefined in 0.000s
    And the ATmega32A target is powered ... skipped in 0.000s
    When I measure the crystal oscillator frequency ... undefined in 0.000s
    Then the frequency should be 16.000MHz Â± 0.01% ... undefined in 0.000s
    And the crystal should be stable and running ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
ðŸ”§ HIL scenario setup: Crystal oscillator verification

]]>
</system-out></testcase><testcase classname="features.hil_power_verification.Power Supply and Electrical Verification" name="Power-on sequence verification" status="cleanup_error" time="0"><error type="NoneType" message="None">
<![CDATA[
Failing step: Given the HIL framework is connected ... undefined in 0.000s
Location: test/acceptance/features/hil_power_verification.feature:7
None]]>
</error><system-out>
<![CDATA[
@scenario.begin

  @hil @hardware @power
  Scenario: Power-on sequence verification
    Given the HIL framework is connected ... undefined in 0.000s
    And the power supply is enabled ... undefined in 0.000s
    And the ATmega32A target is powered ... skipped in 0.000s
    When I power cycle the system ... undefined in 0.000s
    Then the power rails should come up in correct sequence ... undefined in 0.000s
    And the ATmega32A should start executing within 2 seconds ... undefined in 0.000s
    And all GPIO pins should be in their default states ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
ðŸ”§ HIL scenario setup: Power-on sequence verification

]]>
</system-out></testcase><testcase classname="features.hil_power_verification.Power Supply and Electrical Verification" name="Brown-out detection verification" status="cleanup_error" time="0"><error type="NoneType" message="None">
<![CDATA[
Failing step: Given the HIL framework is connected ... undefined in 0.000s
Location: test/acceptance/features/hil_power_verification.feature:7
None]]>
</error><system-out>
<![CDATA[
@scenario.begin

  @hil @hardware @power
  Scenario: Brown-out detection verification
    Given the HIL framework is connected ... undefined in 0.000s
    And the power supply is enabled ... undefined in 0.000s
    And the ATmega32A target is powered ... skipped in 0.000s
    When I gradually reduce the input voltage ... undefined in 0.000s
    Then the brown-out detector should trigger at the specified threshold ... undefined in 0.000s
    And the system should reset cleanly ... undefined in 0.000s
    When the voltage is restored ... undefined in 0.000s
    Then the system should restart normally ... undefined in 0.000s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
ðŸ”§ HIL scenario setup: Brown-out detection verification

]]>
</system-out></testcase></testsuite>