[env:atmega32a]
platform = atmelavr
board = ATmega32

; ATmega32A @ 8MHz internal oscillator
board_build.mcu = atmega32a
board_build.f_cpu = 8000000L

; MightyCore specific settings
board_hardware.oscillator = internal
board_hardware.uart = uart0
board_hardware.bod = 2.7v
board_hardware.eeprom = keep

; Fuse settings for internal 8MHz oscillator
; LFUSE: 0xE4 (internal 8MHz oscillator)
; HFUSE: 0xD9 (JTAG disabled, SPI enabled, watchdog disabled)  
; EFUSE: 0xFF (default)
board_fuses.lfuse = 0xE4
board_fuses.hfuse = 0xD9
board_fuses.efuse = 0xFF

; Upload settings for Arduino Uno R3 as ISP programmer
; Wiring per uno-r4-isp-wiring.md (same connections work for R3):
; D10 -> Pin 9 (/RESET), D11 -> Pin 6 (MOSI), D12 -> Pin 7 (MISO), D13 -> Pin 8 (SCK)
; 5V -> Pin 10/30 (VCC), GND -> Pin 11/31 (GND)
; NOTE: Add 10ÂµF cap between RESET-GND on UNO R3 to prevent auto-reset
upload_protocol = custom
upload_port = /dev/cu.usbmodem2101
upload_flags = 
    -C
    $PROJECT_PACKAGES_DIR/tool-avrdude/avrdude.conf
    -p
    m32
    -P
    $UPLOAD_PORT
    -c
    stk500v1
    -b
    19200
    -F
    -D
upload_command = avrdude $UPLOAD_FLAGS -U flash:w:$SOURCE:i

; Debug settings
debug_tool = avr-stub
debug_port = /dev/cu.usbserial*

; Build flags
build_flags = 
    -DARDUINO_AVR_ATMEGA32A
    -Wall
    -Wextra
    -fno-lto
    
build_unflags = 
    -flto
    -fuse-linker-plugin

; Library dependencies
lib_deps = 
    Wire
    EEPROM

; Monitor settings
monitor_speed = 115200
monitor_port = /dev/cu.usbserial*

; Development environment
[env:development]
extends = env:atmega32a
build_type = debug
build_flags = 
    ${env:atmega32a.build_flags}
    -DDEBUG_MODE=1
    -DSERIAL_DEBUG=1

; Production environment
[env:production]
extends = env:atmega32a
build_type = release
build_flags = 
    ${env:atmega32a.build_flags}
    -DPRODUCTION_MODE=1
    -DSERIAL_DEBUG=0

; Test environment for desktop testing
[env:test_desktop]
platform = native
framework = 
build_flags = 
    -DUNIT_TEST
    -DARDUINO_ARCH_AVR
    -DSERIAL_DEBUG=1
    -std=c++11
lib_deps = 
    throwtheswitch/Unity@^2.5.2
test_framework = unity
test_filter = test_*

; Test environment for embedded testing
[env:test_embedded]
extends = env:atmega32a
build_flags = 
    ${env:atmega32a.build_flags}
    -DUNIT_TEST
    -DSERIAL_DEBUG=1
lib_deps = 
    ${env:atmega32a.lib_deps}
    throwtheswitch/Unity@^2.5.2
test_framework = unity
test_filter = test_*
