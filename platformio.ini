[env:atmega32a]
platform = atmelavr
board = ATmega32
framework = arduino

; ATmega32A @ 16MHz external crystal oscillator
; Uses Arduino as ISP for programming (requires ArduinoISP sketch on Arduino)
; Run 'make setup-arduino-isp' to automatically setup Arduino as ISP
board_build.mcu = atmega32a
board_build.f_cpu = 16000000L

; MightyCore specific settings
board_hardware.oscillator = external
board_hardware.uart = uart0
board_hardware.bod = 2.7v
board_hardware.eeprom = keep

; Fuse settings for external 16MHz crystal oscillator
; LFUSE: 0xFF (external crystal, full swing oscillator, no divide by 8)
; HFUSE: 0xD9 (JTAG disabled, SPI enabled, watchdog disabled)
; EFUSE: 0xFF (default)
board_fuses.lfuse = 0xFF
board_fuses.hfuse = 0xD9
board_fuses.efuse = 0xFF

; Upload settings for Arduino as ISP programmer
; Arduino ISP wiring: Pin 10->RESET, Pin 11->MOSI, Pin 12->MISO, Pin 13->SCK
; Requires ArduinoISP sketch loaded on Arduino Uno
; Auto-detects Arduino port or uses /dev/tty.usbmodem* on macOS
upload_protocol = custom
upload_port = /dev/tty.usbmodem*
upload_flags =
    -C
    $PROJECT_PACKAGES_DIR/tool-avrdude/avrdude.conf
    -p
    m32
    -P
    $UPLOAD_PORT
    -c
    stk500v1
    -b
    19200
    -F
    -D
upload_command = avrdude $UPLOAD_FLAGS -U flash:w:$SOURCE:i

; Debug settings
debug_tool = avr-stub
debug_port = /dev/cu.usbserial*

; Build flags for Arduino framework
build_flags =
    -DARDUINO_AVR_ATMEGA32A
    -DF_CPU=16000000L
    -DARDUINO_ARCH_AVR
    -Wall
    -Wextra
    -std=c99

; Library dependencies
lib_deps = 
    Wire
    EEPROM

; Monitor settings
monitor_speed = 115200
monitor_port = /dev/cu.usbserial*

; Test environment for desktop testing
[env:test_desktop]
platform = native
framework = 
build_flags = 
    -DUNIT_TEST
    -DARDUINO_ARCH_AVR
    -DSERIAL_DEBUG=1