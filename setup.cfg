# Pytest configuration file for organizational standard compliance
# Configures pytest for Multi-Sonicator I/O Controller project

[tool:pytest]
minversion = 6.0
testpaths = tests/unit
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Coverage configuration - enforce 90% minimum per organizational standards
addopts = 
    --cov=src
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-report=json:coverage.json
    --cov-fail-under=90
    --junit-xml=test-results/junit.xml
    --strict-markers
    --strict-config
    -v

# Coverage source paths
[coverage:run]
source = src/
omit = 
    */test*
    */tests/*
    */__pycache__/*
    */build/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

# HTML coverage report
[coverage:html]
directory = htmlcov

# XML coverage report
[coverage:xml]
output = coverage.xml

# JSON coverage report for CI/CD integration
[coverage:json]
output = coverage.json

# Test markers for organizational categorization
markers =
    unit: Unit tests for individual functions/modules
    integration: Integration tests across multiple modules
    safety: Safety-critical functionality tests
    protocol: Communication protocol tests
    performance: Performance benchmark tests
    hardware: Hardware abstraction layer tests
    slow: Tests that take more than 1 second
